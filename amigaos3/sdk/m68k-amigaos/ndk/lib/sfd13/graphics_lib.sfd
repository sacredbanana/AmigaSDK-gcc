* This SFD file was automatically generated by fd2sfd from
* /opt/amiga/m68k-amigaos/ndk/lib/fd13/graphics_lib.fd and
* /opt/amiga/m68k-amigaos/ndk13-include/clib/graphics_protos.h.
==base _GfxBase
==basetype struct GfxBase *
==libname graphics.library
==include <graphics/gfxbase.h>
==include <graphics/gfx.h>
==include <graphics/displayinfo.h>
==include <graphics/gels.h>
==include <graphics/rastport.h>
==include <graphics/view.h>
==include <graphics/copper.h>
==include <graphics/clip.h>
==include <graphics/regions.h>
==include <graphics/sprite.h>
==include <graphics/text.h>
==include <hardware/blit.h>
==include <graphics/scale.h>
==include <exec/types.h>
==include <utility/tagitem.h>
*------ BitMap primitives ------
==bias 30
==public
LONG BltBitMap(CONST struct BitMap * srcBitMap, LONG xSrc, LONG ySrc, struct BitMap * destBitMap, LONG xDest, LONG yDest, LONG xSize, LONG ySize, ULONG minterm, ULONG mask, PLANEPTR tempA) (a0,d0,d1,a1,d2,d3,d4,d5,d6,d7,a2)
VOID BltTemplate(CONST PLANEPTR source, LONG xSrc, LONG srcMod, struct RastPort * destRP, LONG xDest, LONG yDest, LONG xSize, LONG ySize) (a0,d0,d1,a1,d2,d3,d4,d5)
*------ Text routines ------
VOID ClearEOL(struct RastPort * rp) (a1)
VOID ClearScreen(struct RastPort * rp) (a1)
WORD TextLength(struct RastPort * rp, CONST_STRPTR string, ULONG count) (a1,a0,d0)
LONG Text(struct RastPort * rp, CONST_STRPTR string, ULONG count) (a1,a0,d0)
LONG SetFont(struct RastPort * rp, struct TextFont * textFont) (a1,a0)
struct TextFont * OpenFont(CONST struct TextAttr * textAttr) (a0)
VOID CloseFont(struct TextFont * textFont) (a1)
ULONG AskSoftStyle(struct RastPort * rp) (a1)
ULONG SetSoftStyle(struct RastPort * rp, ULONG style, ULONG enable) (a1,d0,d1)
*------	Gels routines ------
VOID AddBob(struct Bob * bob, struct RastPort * rp) (a0,a1)
VOID AddVSprite(struct VSprite * vSprite, struct RastPort * rp) (a0,a1)
VOID DoCollision(struct RastPort * rp) (a1)
VOID DrawGList(struct RastPort * rp, struct ViewPort * vp) (a1,a0)
VOID InitGels(struct VSprite * head, struct VSprite * tail, struct GelsInfo * gelsInfo) (a0,a1,a2)
VOID InitMasks(struct VSprite * vSprite) (a0)
VOID RemIBob(struct Bob * bob, struct RastPort * rp, struct ViewPort * vp) (a0,a1,a2)
VOID RemVSprite(struct VSprite * vSprite) (a0)
VOID SetCollision(ULONG num, VOID (*routine)(struct VSprite *gelA, struct VSprite *gelB), struct GelsInfo * gelsInfo) (d0,a0,a1)
VOID SortGList(struct RastPort * rp) (a1)
VOID AddAnimOb(struct AnimOb * anOb, struct AnimOb ** anKey, struct RastPort * rp) (a0,a1,a2)
VOID Animate(struct AnimOb ** anKey, struct RastPort * rp) (a0,a1)
BOOL GetGBuffers(struct AnimOb * anOb, struct RastPort * rp, LONG flag) (a0,a1,d0)
VOID InitGMasks(struct AnimOb * anOb) (a0)
*------	General graphics routines ------
VOID DrawEllipse(struct RastPort * rp, LONG xCenter, LONG yCenter, LONG a, LONG b) (a1,d0,d1,d2,d3)
LONG AreaEllipse(struct RastPort * rp, LONG xCenter, LONG yCenter, LONG a, LONG b) (a1,d0,d1,d2,d3)
VOID LoadRGB4(struct ViewPort * vp, CONST UWORD * colors, LONG count) (a0,a1,d0)
VOID InitRastPort(struct RastPort * rp) (a1)
VOID InitVPort(struct ViewPort * vp) (a0)
ULONG MrgCop(struct View * view) (a1)
ULONG MakeVPort(struct View * view, struct ViewPort * vp) (a0,a1)
VOID LoadView(struct View * view) (a1)
VOID WaitBlit() ()
VOID SetRast(struct RastPort * rp, ULONG pen) (a1,d0)
VOID Move(struct RastPort * rp, LONG x, LONG y) (a1,d0,d1)
VOID Draw(struct RastPort * rp, LONG x, LONG y) (a1,d0,d1)
LONG AreaMove(struct RastPort * rp, LONG x, LONG y) (a1,d0,d1)
LONG AreaDraw(struct RastPort * rp, LONG x, LONG y) (a1,d0,d1)
LONG AreaEnd(struct RastPort * rp) (a1)
VOID WaitTOF() ()
VOID QBlit(struct bltnode * blit) (a1)
VOID InitArea(struct AreaInfo * areaInfo, APTR vectorBuffer, LONG maxVectors) (a0,a1,d0)
VOID SetRGB4(struct ViewPort * vp, LONG index, ULONG red, ULONG green, ULONG blue) (a0,d0,d1,d2,d3)
VOID QBSBlit(struct bltnode * blit) (a1)
VOID BltClear(PLANEPTR memBlock, ULONG byteCount, ULONG flags) (a1,d0,d1)
VOID RectFill(struct RastPort * rp, LONG xMin, LONG yMin, LONG xMax, LONG yMax) (a1,d0,d1,d2,d3)
VOID BltPattern(struct RastPort * rp, CONST PLANEPTR mask, LONG xMin, LONG yMin, LONG xMax, LONG yMax, ULONG maskBPR) (a1,a0,d0,d1,d2,d3,d4)
ULONG ReadPixel(struct RastPort * rp, LONG x, LONG y) (a1,d0,d1)
LONG WritePixel(struct RastPort * rp, LONG x, LONG y) (a1,d0,d1)
BOOL Flood(struct RastPort * rp, ULONG mode, LONG x, LONG y) (a1,d2,d0,d1)
VOID PolyDraw(struct RastPort * rp, LONG count, CONST WORD * polyTable) (a1,d0,a0)
VOID SetAPen(struct RastPort * rp, ULONG pen) (a1,d0)
VOID SetBPen(struct RastPort * rp, ULONG pen) (a1,d0)
VOID SetDrMd(struct RastPort * rp, ULONG drawMode) (a1,d0)
VOID InitView(struct View * view) (a1)
VOID CBump(struct UCopList * copList) (a1)
LONG CMove(struct UCopList * copList, APTR destination, LONG data) (a1,d0,d1)
LONG CWait(struct UCopList * copList, LONG v, LONG h) (a1,d0,d1)
LONG VBeamPos() ()
VOID InitBitMap(struct BitMap * bitMap, LONG depth, LONG width, LONG height) (a0,d0,d1,d2)
VOID ScrollRaster(struct RastPort * rp, LONG dx, LONG dy, LONG xMin, LONG yMin, LONG xMax, LONG yMax) (a1,d0,d1,d2,d3,d4,d5)
VOID WaitBOVP(struct ViewPort * vp) (a0)
WORD GetSprite(struct SimpleSprite * sprite, LONG num) (a0,d0)
VOID FreeSprite(LONG num) (d0)
VOID ChangeSprite(struct ViewPort * vp, struct SimpleSprite * sprite, UWORD * newData) (a0,a1,a2)
VOID MoveSprite(struct ViewPort * vp, struct SimpleSprite * sprite, LONG x, LONG y) (a0,a1,d0,d1)
VOID LockLayerRom(struct Layer * layer) (a5)
VOID UnlockLayerRom(struct Layer * layer) (a5)
VOID SyncSBitMap(struct Layer * layer) (a0)
VOID CopySBitMap(struct Layer * layer) (a0)
VOID OwnBlitter() ()
VOID DisownBlitter() ()
struct TmpRas * InitTmpRas(struct TmpRas * tmpRas, PLANEPTR buffer, LONG size) (a0,a1,d0)
VOID AskFont(struct RastPort * rp, struct TextAttr * textAttr) (a1,a0)
VOID AddFont(struct TextFont * textFont) (a1)
VOID RemFont(struct TextFont * textFont) (a1)
PLANEPTR AllocRaster(ULONG width, ULONG height) (d0,d1)
VOID FreeRaster(PLANEPTR p, ULONG width, ULONG height) (a0,d0,d1)
VOID AndRectRegion(struct Region * region, CONST struct Rectangle * rectangle) (a0,a1)
BOOL OrRectRegion(struct Region * region, CONST struct Rectangle * rectangle) (a0,a1)
struct Region * NewRegion() ()
BOOL ClearRectRegion(struct Region * region, CONST struct Rectangle * rectangle) (a0,a1)
VOID ClearRegion(struct Region * region) (a0)
VOID DisposeRegion(struct Region * region) (a0)
VOID FreeVPortCopLists(struct ViewPort * vp) (a0)
VOID FreeCopList(struct CopList * copList) (a0)
VOID ClipBlit(struct RastPort * srcRP, LONG xSrc, LONG ySrc, struct RastPort * destRP, LONG xDest, LONG yDest, LONG xSize, LONG ySize, ULONG minterm) (a0,d0,d1,a1,d2,d3,d4,d5,d6)
BOOL XorRectRegion(struct Region * region, CONST struct Rectangle * rectangle) (a0,a1)
VOID FreeCprList(struct cprlist * cprList) (a0)
struct ColorMap * GetColorMap(LONG entries) (d0)
VOID FreeColorMap(struct ColorMap * colorMap) (a0)
ULONG GetRGB4(struct ColorMap * colorMap, LONG entry) (a0,d0)
VOID ScrollVPort(struct ViewPort * vp) (a0)
struct CopList * UCopperListInit(struct UCopList * uCopList, LONG n) (a0,d0)
VOID FreeGBuffers(struct AnimOb * anOb, struct RastPort * rp, LONG flag) (a0,a1,d0)
VOID BltBitMapRastPort(CONST struct BitMap * srcBitMap, LONG xSrc, LONG ySrc, struct RastPort * destRP, LONG xDest, LONG yDest, LONG xSize, LONG ySize, ULONG minterm) (a0,d0,d1,a1,d2,d3,d4,d5,d6)
BOOL OrRegionRegion(CONST struct Region * srcRegion, struct Region * destRegion) (a0,a1)
BOOL XorRegionRegion(CONST struct Region * srcRegion, struct Region * destRegion) (a0,a1)
BOOL AndRegionRegion(CONST struct Region * srcRegion, struct Region * destRegion) (a0,a1)
VOID SetRGB4CM(struct ColorMap * colorMap, LONG index, ULONG red, ULONG green, ULONG blue) (a0,d0,d1,d2,d3)
VOID BltMaskBitMapRastPort(CONST struct BitMap * srcBitMap, LONG xSrc, LONG ySrc, struct RastPort * destRP, LONG xDest, LONG yDest, LONG xSize, LONG ySize, ULONG minterm, CONST PLANEPTR bltMask) (a0,d0,d1,a1,d2,d3,d4,d5,d6,a2)
==private
ULONG graphicsPrivate1() ()
ULONG graphicsPrivate2() ()
==public
BOOL AttemptLockLayerRom(struct Layer * layer) (a5)
==end
