* This SFD file was automatically generated by fd2sfd from
* /opt/amiga/m68k-amigaos/ndk/lib/fd13/layers_lib.fd and
* /opt/amiga/m68k-amigaos/ndk13-include/clib/layers_protos.h.
==base _LayersBase
==basetype struct Library *
==libname layers.library
==include <exec/libraries.h>
==include <graphics/layers.h>
==include <graphics/clip.h>
==include <graphics/rastport.h>
==include <graphics/regions.h>
==include <exec/types.h>
==include <utility/tagitem.h>
==bias 30
==public
VOID InitLayers(struct Layer_Info * li) (a0)
struct Layer * CreateUpfrontLayer(struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct BitMap * bm2) (a0,a1,d0,d1,d2,d3,d4,a2)
struct Layer * CreateBehindLayer(struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct BitMap * bm2) (a0,a1,d0,d1,d2,d3,d4,a2)
LONG UpfrontLayer(LONG dummy, struct Layer * layer) (a0,a1)
LONG BehindLayer(LONG dummy, struct Layer * layer) (a0,a1)
LONG MoveLayer(LONG dummy, struct Layer * layer, LONG dx, LONG dy) (a0,a1,d0,d1)
LONG SizeLayer(LONG dummy, struct Layer * layer, LONG dx, LONG dy) (a0,a1,d0,d1)
VOID ScrollLayer(LONG dummy, struct Layer * layer, LONG dx, LONG dy) (a0,a1,d0,d1)
LONG BeginUpdate(struct Layer * l) (a0)
VOID EndUpdate(struct Layer * layer, ULONG flag) (a0,d0)
LONG DeleteLayer(LONG dummy, struct Layer * layer) (a0,a1)
VOID LockLayer(LONG dummy, struct Layer * layer) (a0,a1)
VOID UnlockLayer(struct Layer * layer) (a0)
VOID LockLayers(struct Layer_Info * li) (a0)
VOID UnlockLayers(struct Layer_Info * li) (a0)
VOID LockLayerInfo(struct Layer_Info * li) (a0)
VOID SwapBitsRastPortClipRect(struct RastPort * rp, struct ClipRect * cr) (a0,a1)
struct Layer * WhichLayer(struct Layer_Info * li, LONG x, LONG y) (a0,d0,d1)
VOID UnlockLayerInfo(struct Layer_Info * li) (a0)
struct Layer_Info * NewLayerInfo() ()
VOID DisposeLayerInfo(struct Layer_Info * li) (a0)
LONG FattenLayerInfo(struct Layer_Info * li) (a0)
VOID ThinLayerInfo(struct Layer_Info * li) (a0)
LONG MoveLayerInFrontOf(struct Layer * layer_to_move, struct Layer * other_layer) (a0,a1)
struct Region * InstallClipRegion(struct Layer * layer, struct Region * region) (a0,a1)
LONG MoveSizeLayer(struct Layer * layer, LONG dx, LONG dy, LONG dw, LONG dh) (a0,d0,d1,d2,d3)
struct Layer * CreateUpfrontHookLayer(struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct Hook * hook, struct BitMap * bm2) (a0,a1,d0,d1,d2,d3,d4,a3,a2)
struct Layer * CreateBehindHookLayer(struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct Hook * hook, struct BitMap * bm2) (a0,a1,d0,d1,d2,d3,d4,a3,a2)
struct Hook * InstallLayerHook(struct Layer * layer, struct Hook * hook) (a0,a1)
*--- functions in V39 or higher (Release 3.0) ---
struct Hook * InstallLayerInfoHook(struct Layer_Info * li, struct Hook * hook) (a0,a1)
VOID SortLayerCR(struct Layer * layer, LONG dx, LONG dy) (a0,d0,d1)
VOID DoHookClipRects(struct Hook * hook, struct RastPort * rport, CONST struct Rectangle * rect) (a0,a1,a2)
*--- functions in V45 or higher (Release 3.9) ---
BOOL LayerOccluded(struct Layer * layer) (a0)
LONG HideLayer(struct Layer * layer) (a0)
LONG ShowLayer(struct Layer * layer, struct Layer * in_front_of) (a0,a1)
BOOL SetLayerInfoBounds(struct Layer_Info * li, CONST struct Rectangle * bounds) (a0,a1)
==end
