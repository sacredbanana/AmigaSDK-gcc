==id $VER: expansion_lib.sfd 47.1 (30.11.2021)
* "expansion.library"
==base _ExpansionBase
==basetype struct ExpansionBase *
==libname expansion.library
==bias 30
==public
==include <libraries/expansionbase.h>
==include <dos/filehandler.h>
==version 33
VOID  AddConfigDev( struct ConfigDev *configDev ) (a0)
==version 36
BOOL  AddBootNode( LONG bootPri, ULONG flags, struct DeviceNode *deviceNode,
	struct ConfigDev *configDev ) (d0,d1,a0,a1)
==version 33
VOID  AllocBoardMem( ULONG slotSpec ) (d0)
struct ConfigDev *AllocConfigDev()()
APTR  AllocExpansionMem( ULONG numSlots, ULONG slotAlign )
	(d0,d1)
VOID  ConfigBoard( APTR board, struct ConfigDev *configDev ) (a0,a1)
VOID  ConfigChain( APTR baseAddr ) (a0)
struct ConfigDev *FindConfigDev( CONST struct ConfigDev *oldConfigDev,
	LONG manufacturer, LONG product ) (a0,d0,d1)
VOID  FreeBoardMem( ULONG startSlot, ULONG slotSpec ) (d0,d1)
VOID  FreeConfigDev( struct ConfigDev *configDev ) (a0)
VOID  FreeExpansionMem( ULONG startSlot, ULONG numSlots ) (d0,d1)
UBYTE ReadExpansionByte( CONST_APTR board, ULONG offset ) (a0,d0)
VOID  ReadExpansionRom( CONST_APTR board, struct ConfigDev *configDev ) (a0,a1)
VOID  RemConfigDev( struct ConfigDev *configDev ) (a0)
VOID  WriteExpansionByte( APTR board, ULONG offset, UBYTE byte ) (a0,d0,d1)
VOID  ObtainConfigBinding()()
VOID  ReleaseConfigBinding()()
VOID  SetCurrentBinding( struct CurrentBinding *currentBinding,
	ULONG bindingSize ) (a0,d0)
ULONG GetCurrentBinding( CONST struct CurrentBinding *currentBinding,
	ULONG bindingSize ) (a0,d0)
struct DeviceNode *MakeDosNode( CONST_APTR parmPacket ) (a0)
BOOL  AddDosNode( LONG bootPri, ULONG flags, struct DeviceNode *deviceNode )
	(d0,d1,a0)
==private
==version 36
VOID  ExpansionReserved26()()
VOID  WriteExpansionWord( APTR board, ULONG offset, UWORD word ) (a0,d0,d1)
==end
