
GETFSSTAT(2)               UNIX Programmer's Manual               GETFSSTAT(2)

NNAAMMEE
     ggeettffssssttaatt - get list of all mounted file systems

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ppaarraamm..hh>>
     ##iinncclluuddee <<ssyyss//uuccrreedd..hh>>
     ##iinncclluuddee <<ssyyss//mmoouunntt..hh>>

     _i_n_t
     ggeettffssssttaatt(_s_t_r_u_c_t _s_t_a_t_f_s _*_b_u_f, _l_o_n_g _b_u_f_s_i_z_e, _i_n_t _f_l_a_g_s)

DDEESSCCRRIIPPTTIIOONN
     GGeettffssssttaatt() returns information about all mounted file systems.  _B_u_f is a
     pointer to statfs structures defined as follows:

     typedef struct { int32_t val[2]; } fsid_t;

     #define MFSNAMELEN   16 /* length of fs type name, including nul */
     #define MNAMELEN     32 /* length of buffer for returned name */

     struct statfs {
         short   f_type;     /* type of file system (unused; zero) */
         short   f_flags;    /* copy of mount flags */
         long    f_bsize;    /* fundamental file system block size */
         long    f_iosize;   /* optimal transfer block size */
         long    f_blocks;   /* total data blocks in file system */
         long    f_bfree;    /* free blocks in fs */
         long    f_bavail;   /* free blocks avail to non-superuser */
         long    f_files;    /* total file nodes in file system */
         long    f_ffree;    /* free file nodes in fs */
         fsid_t  f_fsid;     /* file system id */
         uid_t   f_owner;    /* user that mounted the file system */
         long    f_spare[4]; /* spare for later */
         char    f_fstypename[MFSNAMELEN]; /* fs type name */
         char    f_mntonname[MNAMELEN];    /* directory on which mounted */
         char    f_mntfromname[MNAMELEN];  /* mounted file system */
     };

     Fields that are undefined for a particular file system are set to -1.
     The buffer is filled with an array of _s_t_a_t_f_s structures, one for each
     mounted file system up to the size specified by _b_u_f_s_i_z_e.

     If _b_u_f is given as NULL, ggeettffssssttaatt() returns just the number of mounted
     file systems.

     Normally _f_l_a_g_s should be specified as MNT_WAIT. If _f_l_a_g_s is set to
     MNT_NOWAIT, ggeettffssssttaatt() will return the information it has available
     without requesting an update from each file system.  Thus, some of the
     information will be out of date, but ggeettffssssttaatt() will not block waiting
     for information from a file system that is unable to respond.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion, the number of _s_t_a_t_f_s structures is returned.
     Otherwise, -1 is returned and the global variable _e_r_r_n_o is set to indi-
     cate the error.

EERRRROORRSS
     GGeettffssssttaatt() fails if one or more of the following are true:

     [EFAULT]      _B_u_f points to an invalid address.

     [EIO]         An I/O error occurred while reading from or writing to the
                   file system.

SSEEEE AALLSSOO
     statfs(2),  fstab(5),  mount(8)

HHIISSTTOORRYY
     The ggeettffssssttaatt() function first appeared in 4.4BSD.

BSD Experimental                 June 9, 1993                                2
