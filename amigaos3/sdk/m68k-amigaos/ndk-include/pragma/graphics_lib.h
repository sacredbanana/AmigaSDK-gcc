#ifndef PRAGMA_GRAPHICS_LIB_H
#define PRAGMA_GRAPHICS_LIB_H

/*
**	$VER: graphics_lib.h 47.2 (30.11.2021)
**
**	Aztec 'C', Maxon 'C' and StormC format pragma files.
*/

#ifndef CLIB_GRAPHICS_PROTOS_H
#include <clib/graphics_protos.h>
#endif /* CLIB_GRAPHICS_PROTOS_H */

/* "graphics.library" */
/*------ BitMap primitives ------*/
#pragma amicall(GfxBase, 0x1e, BltBitMap(a0,d0,d1,a1,d2,d3,d4,d5,d6,d7,a2))
#pragma amicall(GfxBase, 0x24, BltTemplate(a0,d0,d1,a1,d2,d3,d4,d5))
/*------ Text routines ------*/
#pragma amicall(GfxBase, 0x2a, ClearEOL(a1))
#pragma amicall(GfxBase, 0x30, ClearScreen(a1))
#pragma amicall(GfxBase, 0x36, TextLength(a1,a0,d0))
#pragma amicall(GfxBase, 0x3c, Text(a1,a0,d0))
#pragma amicall(GfxBase, 0x42, SetFont(a1,a0))
#pragma amicall(GfxBase, 0x48, OpenFont(a0))
#pragma amicall(GfxBase, 0x4e, CloseFont(a1))
#pragma amicall(GfxBase, 0x54, AskSoftStyle(a1))
#pragma amicall(GfxBase, 0x5a, SetSoftStyle(a1,d0,d1))
/*------	Gels routines ------*/
#pragma amicall(GfxBase, 0x60, AddBob(a0,a1))
#pragma amicall(GfxBase, 0x66, AddVSprite(a0,a1))
#pragma amicall(GfxBase, 0x6c, DoCollision(a1))
#pragma amicall(GfxBase, 0x72, DrawGList(a1,a0))
#pragma amicall(GfxBase, 0x78, InitGels(a0,a1,a2))
#pragma amicall(GfxBase, 0x7e, InitMasks(a0))
#pragma amicall(GfxBase, 0x84, RemIBob(a0,a1,a2))
#pragma amicall(GfxBase, 0x8a, RemVSprite(a0))
#pragma amicall(GfxBase, 0x90, SetCollision(d0,a0,a1))
#pragma amicall(GfxBase, 0x96, SortGList(a1))
#pragma amicall(GfxBase, 0x9c, AddAnimOb(a0,a1,a2))
#pragma amicall(GfxBase, 0xa2, Animate(a0,a1))
#pragma amicall(GfxBase, 0xa8, GetGBuffers(a0,a1,d0))
#pragma amicall(GfxBase, 0xae, InitGMasks(a0))
/*------	General graphics routines ------*/
#pragma amicall(GfxBase, 0xb4, DrawEllipse(a1,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0xba, AreaEllipse(a1,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0xc0, LoadRGB4(a0,a1,d0))
#pragma amicall(GfxBase, 0xc6, InitRastPort(a1))
#pragma amicall(GfxBase, 0xcc, InitVPort(a0))
#pragma amicall(GfxBase, 0xd2, MrgCop(a1))
#pragma amicall(GfxBase, 0xd8, MakeVPort(a0,a1))
#pragma amicall(GfxBase, 0xde, LoadView(a1))
#pragma amicall(GfxBase, 0xe4, WaitBlit())
#pragma amicall(GfxBase, 0xea, SetRast(a1,d0))
#pragma amicall(GfxBase, 0xf0, Move(a1,d0,d1))
#pragma amicall(GfxBase, 0xf6, Draw(a1,d0,d1))
#pragma amicall(GfxBase, 0xfc, AreaMove(a1,d0,d1))
#pragma amicall(GfxBase, 0x102, AreaDraw(a1,d0,d1))
#pragma amicall(GfxBase, 0x108, AreaEnd(a1))
#pragma amicall(GfxBase, 0x10e, WaitTOF())
#pragma amicall(GfxBase, 0x114, QBlit(a1))
#pragma amicall(GfxBase, 0x11a, InitArea(a0,a1,d0))
#pragma amicall(GfxBase, 0x120, SetRGB4(a0,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0x126, QBSBlit(a1))
#pragma amicall(GfxBase, 0x12c, BltClear(a1,d0,d1))
#pragma amicall(GfxBase, 0x132, RectFill(a1,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0x138, BltPattern(a1,a0,d0,d1,d2,d3,d4))
#pragma amicall(GfxBase, 0x13e, ReadPixel(a1,d0,d1))
#pragma amicall(GfxBase, 0x144, WritePixel(a1,d0,d1))
#pragma amicall(GfxBase, 0x14a, Flood(a1,d2,d0,d1))
#pragma amicall(GfxBase, 0x150, PolyDraw(a1,d0,a0))
#pragma amicall(GfxBase, 0x156, SetAPen(a1,d0))
#pragma amicall(GfxBase, 0x15c, SetBPen(a1,d0))
#pragma amicall(GfxBase, 0x162, SetDrMd(a1,d0))
#pragma amicall(GfxBase, 0x168, InitView(a1))
#pragma amicall(GfxBase, 0x16e, CBump(a1))
#pragma amicall(GfxBase, 0x174, CMove(a1,d0,d1))
#pragma amicall(GfxBase, 0x17a, CWait(a1,d0,d1))
#pragma amicall(GfxBase, 0x180, VBeamPos())
#pragma amicall(GfxBase, 0x186, InitBitMap(a0,d0,d1,d2))
#pragma amicall(GfxBase, 0x18c, ScrollRaster(a1,d0,d1,d2,d3,d4,d5))
#pragma amicall(GfxBase, 0x192, WaitBOVP(a0))
#pragma amicall(GfxBase, 0x198, GetSprite(a0,d0))
#pragma amicall(GfxBase, 0x19e, FreeSprite(d0))
#pragma amicall(GfxBase, 0x1a4, ChangeSprite(a0,a1,a2))
#pragma amicall(GfxBase, 0x1aa, MoveSprite(a0,a1,d0,d1))
#pragma amicall(GfxBase, 0x1b0, LockLayerRom(a5))
#pragma amicall(GfxBase, 0x1b6, UnlockLayerRom(a5))
#pragma amicall(GfxBase, 0x1bc, SyncSBitMap(a0))
#pragma amicall(GfxBase, 0x1c2, CopySBitMap(a0))
#pragma amicall(GfxBase, 0x1c8, OwnBlitter())
#pragma amicall(GfxBase, 0x1ce, DisownBlitter())
#pragma amicall(GfxBase, 0x1d4, InitTmpRas(a0,a1,d0))
#pragma amicall(GfxBase, 0x1da, AskFont(a1,a0))
#pragma amicall(GfxBase, 0x1e0, AddFont(a1))
#pragma amicall(GfxBase, 0x1e6, RemFont(a1))
#pragma amicall(GfxBase, 0x1ec, AllocRaster(d0,d1))
#pragma amicall(GfxBase, 0x1f2, FreeRaster(a0,d0,d1))
#pragma amicall(GfxBase, 0x1f8, AndRectRegion(a0,a1))
#pragma amicall(GfxBase, 0x1fe, OrRectRegion(a0,a1))
#pragma amicall(GfxBase, 0x204, NewRegion())
#pragma amicall(GfxBase, 0x20a, ClearRectRegion(a0,a1))
#pragma amicall(GfxBase, 0x210, ClearRegion(a0))
#pragma amicall(GfxBase, 0x216, DisposeRegion(a0))
#pragma amicall(GfxBase, 0x21c, FreeVPortCopLists(a0))
#pragma amicall(GfxBase, 0x222, FreeCopList(a0))
#pragma amicall(GfxBase, 0x228, ClipBlit(a0,d0,d1,a1,d2,d3,d4,d5,d6))
#pragma amicall(GfxBase, 0x22e, XorRectRegion(a0,a1))
#pragma amicall(GfxBase, 0x234, FreeCprList(a0))
#pragma amicall(GfxBase, 0x23a, GetColorMap(d0))
#pragma amicall(GfxBase, 0x240, FreeColorMap(a0))
#pragma amicall(GfxBase, 0x246, GetRGB4(a0,d0))
#pragma amicall(GfxBase, 0x24c, ScrollVPort(a0))
#pragma amicall(GfxBase, 0x252, UCopperListInit(a0,d0))
#pragma amicall(GfxBase, 0x258, FreeGBuffers(a0,a1,d0))
#pragma amicall(GfxBase, 0x25e, BltBitMapRastPort(a0,d0,d1,a1,d2,d3,d4,d5,d6))
#pragma amicall(GfxBase, 0x264, OrRegionRegion(a0,a1))
#pragma amicall(GfxBase, 0x26a, XorRegionRegion(a0,a1))
#pragma amicall(GfxBase, 0x270, AndRegionRegion(a0,a1))
#pragma amicall(GfxBase, 0x276, SetRGB4CM(a0,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0x27c, BltMaskBitMapRastPort(a0,d0,d1,a1,d2,d3,d4,d5,d6,a2))
#pragma amicall(GfxBase, 0x28e, AttemptLockLayerRom(a5))
/*--- functions in V36 or higher (Release 2.0) ---*/
#pragma amicall(GfxBase, 0x294, GfxNew(d0))
#pragma amicall(GfxBase, 0x29a, GfxFree(a0))
#pragma amicall(GfxBase, 0x2a0, GfxAssociate(a0,a1))
#pragma amicall(GfxBase, 0x2a6, BitMapScale(a0))
#pragma amicall(GfxBase, 0x2ac, ScalerDiv(d0,d1,d2))
#pragma amicall(GfxBase, 0x2b2, TextExtent(a1,a0,d0,a2))
#pragma amicall(GfxBase, 0x2b8, TextFit(a1,a0,d0,a2,a3,d1,d2,d3))
#pragma amicall(GfxBase, 0x2be, GfxLookUp(a0))
#pragma amicall(GfxBase, 0x2c4, VideoControl(a0,a1))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x2c4, VideoControlTags(a0,a1))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x2ca, OpenMonitor(a1,d0))
#pragma amicall(GfxBase, 0x2d0, CloseMonitor(a0))
#pragma amicall(GfxBase, 0x2d6, FindDisplayInfo(d0))
#pragma amicall(GfxBase, 0x2dc, NextDisplayInfo(d0))
#pragma amicall(GfxBase, 0x2f4, GetDisplayInfoData(a0,a1,d0,d1,d2))
#pragma amicall(GfxBase, 0x2fa, FontExtent(a0,a1))
#pragma amicall(GfxBase, 0x300, ReadPixelLine8(a0,d0,d1,d2,a2,a1))
#pragma amicall(GfxBase, 0x306, WritePixelLine8(a0,d0,d1,d2,a2,a1))
#pragma amicall(GfxBase, 0x30c, ReadPixelArray8(a0,d0,d1,d2,d3,a2,a1))
#pragma amicall(GfxBase, 0x312, WritePixelArray8(a0,d0,d1,d2,d3,a2,a1))
#pragma amicall(GfxBase, 0x318, GetVPModeID(a0))
#pragma amicall(GfxBase, 0x31e, ModeNotAvailable(d0))
#pragma amicall(GfxBase, 0x324, WeighTAMatch(a0,a1,a2))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x324, WeighTAMatchTags(a0,a1,a2))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x32a, EraseRect(a1,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0x330, ExtendFont(a0,a1))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x330, ExtendFontTags(a0,a1))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x336, StripFont(a0))
/*--- functions in V39 or higher (Release 3.0) ---*/
#pragma amicall(GfxBase, 0x33c, CalcIVG(a0,a1))
#pragma amicall(GfxBase, 0x342, AttachPalExtra(a0,a1))
#pragma amicall(GfxBase, 0x348, ObtainBestPenA(a0,d1,d2,d3,a1))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x348, ObtainBestPen(a0,d1,d2,d3,a1))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x354, SetRGB32(a0,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0x35a, GetAPen(a0))
#pragma amicall(GfxBase, 0x360, GetBPen(a0))
#pragma amicall(GfxBase, 0x366, GetDrMd(a0))
#pragma amicall(GfxBase, 0x36c, GetOutlinePen(a0))
#pragma amicall(GfxBase, 0x372, LoadRGB32(a0,a1))
#pragma amicall(GfxBase, 0x378, SetChipRev(d0))
#pragma amicall(GfxBase, 0x37e, SetABPenDrMd(a1,d0,d1,d2))
#pragma amicall(GfxBase, 0x384, GetRGB32(a0,d0,d1,a1))
#pragma amicall(GfxBase, 0x396, AllocBitMap(d0,d1,d2,d3,a0))
#pragma amicall(GfxBase, 0x39c, FreeBitMap(a0))
#pragma amicall(GfxBase, 0x3a2, GetExtSpriteA(a2,a1))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x3a2, GetExtSprite(a2,a1))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x3a8, CoerceMode(a0,d0,d1))
#pragma amicall(GfxBase, 0x3ae, ChangeVPBitMap(a0,a1,a2))
#pragma amicall(GfxBase, 0x3b4, ReleasePen(a0,d0))
#pragma amicall(GfxBase, 0x3ba, ObtainPen(a0,d0,d1,d2,d3,d4))
#pragma amicall(GfxBase, 0x3c0, GetBitMapAttr(a0,d1))
#pragma amicall(GfxBase, 0x3c6, AllocDBufInfo(a0))
#pragma amicall(GfxBase, 0x3cc, FreeDBufInfo(a1))
#pragma amicall(GfxBase, 0x3d2, SetOutlinePen(a0,d0))
#pragma amicall(GfxBase, 0x3d8, SetWriteMask(a0,d0))
#pragma amicall(GfxBase, 0x3de, SetMaxPen(a0,d0))
#pragma amicall(GfxBase, 0x3e4, SetRGB32CM(a0,d0,d1,d2,d3))
#pragma amicall(GfxBase, 0x3ea, ScrollRasterBF(a1,d0,d1,d2,d3,d4,d5))
#pragma amicall(GfxBase, 0x3f0, FindColor(a3,d1,d2,d3,d4))
#pragma amicall(GfxBase, 0x3fc, AllocSpriteDataA(a2,a1))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x3fc, AllocSpriteData(a2,a1))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x402, ChangeExtSpriteA(a0,a1,a2,a3))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x402, ChangeExtSprite(a0,a1,a2,a3))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x408, FreeSpriteData(a2))
#pragma amicall(GfxBase, 0x40e, SetRPAttrsA(a0,a1))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x40e, SetRPAttrs(a0,a1))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x414, GetRPAttrsA(a0,a1))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x414, GetRPAttrs(a0,a1))
#endif /* __STORM__ */
#pragma amicall(GfxBase, 0x41a, BestModeIDA(a0))
#if defined(__STORM__)
#pragma tagcall(GfxBase, 0x41a, BestModeID(a0))
#endif /* __STORM__ */
/*--- functions in V40 or higher (Release 3.1) ---*/
#pragma amicall(GfxBase, 0x420, WriteChunkyPixels(a0,d0,d1,d2,d3,a2,d4))
/* Three reserved functions */
/*--- (3 function slots reserved here) ---*/
/*--- functions in V47 or higher (Release 3.2) ---*/

#endif /* PRAGMA_GRAPHICS_LIB_H */
