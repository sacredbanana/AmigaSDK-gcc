* This SFD file was automatically generated by fd2sfd from
* /opt/amiga/m68k-amigaos/lib/fd/camd.fd and
* /opt/amiga/m68k-amigaos/include/clib/camd_protos.h.
==base _CamdBase
==basetype struct Library *
==libname Camd.library
==include <exec/types.h>
==include <midi/camd.h>
==include <utility/tagitem.h>
==bias 30
==public
APTR LockCAMD(ULONG locktype) (d0)
void UnlockCAMD(APTR lock) (a0)
struct MidiNode * CreateMidiA(CONST struct TagItem * tags) (a0)
==varargs
struct MidiNode * CreateMidi(Tag tags, ...) (a0)
void DeleteMidi(struct MidiNode * mi) (a0)
BOOL SetMidiAttrsA(struct MidiNode * mi, CONST struct TagItem * tags) (a0,a1)
==varargs
BOOL SetMidiAttrs(struct MidiNode * mi, Tag tags, ...) (a0,a1)
ULONG GetMidiAttrsA(struct MidiNode * mi, CONST struct TagItem * tags) (a0,a1)
==varargs
ULONG GetMidiAttrs(struct MidiNode * mi, Tag tags, ...) (a0,a1)
struct MidiNode * NextMidi(struct MidiNode * mi) (a0)
struct MidiNode * FindMidi(CONST_STRPTR name) (a1)
void FlushMidi(struct MidiNode * mi) (a0)
struct MidiLink * AddMidiLinkA(struct MidiNode * mi, LONG type, CONST struct TagItem * tags) (a0,d0,a1)
==varargs
struct MidiLink * AddMidiLink(struct MidiNode * mi, LONG type, Tag tags, ...) (a0,d0,a1)
void RemoveMidiLink(struct MidiLink * ml) (a0)
BOOL SetMidiLinkAttrsA(struct MidiLink * ml, CONST struct TagItem * tags) (a0,a1)
==varargs
BOOL SetMidiLinkAttrs(struct MidiLink * ml, Tag tags, ...) (a0,a1)
ULONG GetMidiLinkAttrsA(struct MidiLink * ml, CONST struct TagItem * tags) (a0,a1)
==varargs
ULONG GetMidiLinkAttrs(struct MidiLink * ml, Tag tags, ...) (a0,a1)
struct MidiLink * NextClusterLink(struct MidiCluster * mc, struct MidiLink * ml, LONG type) (a0,a1,d0)
struct MidiLink * NextMidiLink(struct MidiNode * mi, struct MidiLink * ml, LONG type) (a0,a1,d0)
BOOL MidiLinkConnected(struct MidiLink * ml) (a0)
struct MidiCluster * NextCluster(struct MidiCluster * mc) (a0)
struct MidiCluster * FindCluster(CONST_STRPTR name) (a0)
void PutMidi(struct MidiLink * ml, LONG msgdata) (a0,d0)
BOOL GetMidi(struct MidiNode * mi, MidiMsg * msg) (a0,a1)
BOOL WaitMidi(struct MidiNode * mi, MidiMsg * msg) (a0,a1)
void PutSysEx(struct MidiLink * ml, UBYTE * buffer) (a0,a1)
ULONG GetSysEx(struct MidiNode * mi, UBYTE * buffer, ULONG len) (a0,a1,d0)
ULONG QuerySysEx(struct MidiNode * mi) (a0)
void SkipSysEx(struct MidiNode * mi) (a0)
UBYTE GetMidiErr(struct MidiNode * mi) (a0)
WORD MidiMsgType(MidiMsg * msg) (a0)
WORD MidiMsgLen(ULONG status) (d0)
void ParseMidi(struct MidiLink * ml, UBYTE * buffer, ULONG length) (a0,a1,d0)
struct MidiDeviceData * OpenMidiDevice(UBYTE * name) (a0)
void CloseMidiDevice(struct MidiDeviceData * mdd) (a0)
int RethinkCAMD() ()
void StartClusterNotify(struct ClusterNotifyNode * node) (a0)
void EndClusterNotify(struct ClusterNotifyNode * node) (a0)
==private
ULONG PutMidiNoWait(ULONG ml, ULONG msg) (a0,a1)
==end
