* This SFD file was automatically generated by fd2sfd from
* /opt/amiga/m68k-amigaos/lib/fd/mmu.fd and
* /opt/amiga/m68k-amigaos/include/clib/mmu_protos.h.
==base _MMUBase
==basetype struct Library *
==libname MMU.library
==include <exec/lists.h>
==include <utility/tagitem.h>
==include <mmu/context.h>
==include <exec/types.h>
*-----------------------------------------------------------------
*-- MMU.library                                                 --
*-- © 1998-2016 the mmu.library development group, THOR-Software--
*--                                                             --
*-- Library header file Version 46.1                            --
*--                                                             --
*-- created 18 Oct 1998 THOR,   Thomas Richter                  --
*--     Modifications:                                          --
*--                                                             --
*-- 40.50:      Final release,  31 Oct 1999, Thomas Richter     --
*-- 41.1:                       28 Nov 1999, Thomas Richter     --
*-- 42.0:                       25 Mar 2000, Thomas Richter     --
*-- 43.1:                       16 Sep 2001, Thomas Richter     --
*-- 46.2:                       15 May 2016, Thomas Richter     --
*-- 47.1:			10 Aug 2021, Thomas Richter     --
*-----------------------------------------------------------------
==bias 30
==public
void * AllocAligned(ULONG bytesize, ULONG reqments, ULONG alignment) (d0,d1,a0)
struct MinList * GetMapping(struct MMUContext * ctx) (a0)
void ReleaseMapping(struct MMUContext * ctx, struct MinList * list) (a0,a1)
ULONG GetPageSize(struct MMUContext * ctx) (a0)
char GetMMUType() ()
==private
ULONG GetMMUConfig() ()
ULONG ReleaseMMUConfig(ULONG mfc) (a1)
==public
void LockMMUContext(struct MMUContext * ctx) (a0)
void UnlockMMUContext(struct MMUContext * ctx) (a0)
BOOL SetPropertiesA(struct MMUContext * ctx, ULONG flags, ULONG mask, ULONG lower, ULONG size, struct TagItem * tags) (a0,d1,d2,a1,d0,a2)
==varargs
BOOL SetProperties(struct MMUContext * ctx, ULONG flags, ULONG mask, ULONG lower, ULONG size, Tag tags, ...) (a0,d1,d2,a1,d0,a2)
ULONG GetPropertiesA(struct MMUContext * ctx, ULONG lower, struct TagItem * tags) (a0,a1,a2)
==varargs
ULONG GetProperties(struct MMUContext * ctx, ULONG lower, Tag tags, ...) (a0,a1,a2)
BOOL RebuildTree(struct MMUContext * ctx) (a0)
BOOL SetPagePropertiesA(struct MMUContext * ctx, ULONG flags, ULONG mask, ULONG lower, struct TagItem * tags) (a0,d1,d2,a1,a2)
==varargs
BOOL SetPageProperties(struct MMUContext * ctx, ULONG flags, ULONG mask, ULONG lower, Tag tags, ...) (a0,d1,d2,a1,a2)
ULONG GetPagePropertiesA(struct MMUContext * ctx, ULONG lower, struct TagItem * tags) (a0,a1,a2)
==varargs
ULONG GetPageProperties(struct MMUContext * ctx, ULONG lower, Tag tags, ...) (a0,a1,a2)
struct MMUContext * CreateMMUContextA(struct TagItem * tags) (a0)
==varargs
struct MMUContext * CreateMMUContext(Tag tags, ...) (a0)
BOOL DeleteMMUContext(struct MMUContext * ctx) (a0)
==private
ULONG AllocLineMem(ULONG bytesize, ULONG reqments) (d0,d1)
==public
void * AllocLineVec(ULONG bytesize, ULONG reqments) (d0,d1)
ULONG PhysicalPageLocation(struct MMUContext * ctx, ULONG addr) (a0,a1)
struct MMUContext * SuperContext(struct MMUContext * ctx) (a0)
struct MMUContext * DefaultContext() ()
struct MMUContext * EnterMMUContext(struct MMUContext * ctx, struct Task * task) (a0,a1)
struct MMUContext * LeaveMMUContext(struct Task * task) (a1)
struct ExceptionHook * AddContextHookA(struct TagItem * tags) (a0)
==varargs
struct ExceptionHook * AddContextHook(Tag tags, ...) (a0)
void RemContextHook(struct ExceptionHook * hook) (a1)
struct ExceptionHook * AddMessageHookA(struct TagItem * tags) (a0)
==varargs
struct ExceptionHook * AddMessageHook(Tag tags, ...) (a0)
void RemMessageHook(struct ExceptionHook * hook) (a1)
void ActivateException(struct ExceptionHook * hook) (a1)
void DeactivateException(struct ExceptionHook * hook) (a1)
LONG AttemptLockMMUContext(struct MMUContext * ctx) (a0)
void LockContextList() ()
void UnlockContextList() ()
LONG AttemptLockContextList() ()
void SetPropertyList(struct MMUContext * ctx, struct MinList * list) (a0,a1)
void TouchPropertyList(struct MinList * list) (a1)
struct MMUContext * CurrentContext(struct Task * task) (a1)
void DMAInitiate(struct MMUContext * ctx, void ** addrptrptr, ULONG * lengthptr, BOOL write) (d1,a0,a1,d0)
void DMATerminate(struct MMUContext * ctx) (d1)
ULONG PhysicalLocation(struct MMUContext * ctx, void ** addrptrptr, ULONG * lengthptr) (d1,a0,a1)
ULONG RemapSize(struct MMUContext * ctx) (a0)
ULONG WithoutMMU(unsigned long (*func)()) (a5)
void SetBusError(void (*func)(), void (*oldfuncptr)()) (a0,a1)
ULONG GetMMUContextData(struct MMUContext * ctx, ULONG tagid) (a0,d0)
void SetMMUContextDataA(struct MMUContext * ctx, struct TagItem * tags) (a0,a1)
==varargs
void SetMMUContextData(struct MMUContext * ctx, Tag tags, ...) (a0,a1)
struct MinList * NewMapping() ()
BOOL CopyMapping(struct MinList * from, struct MinList * to, ULONG base, ULONG length, ULONG mask) (a0,a1,d0,d1,d2)
struct MinList * DupMapping(struct MinList * list) (a0)
BOOL CopyContextRegion(struct MMUContext * ctx, struct MinList * list, ULONG base, ULONG length, ULONG mask) (a0,a1,d0,d1,d2)
BOOL SetPropertiesMapping(struct MMUContext * ctx, struct MinList * list, ULONG base, ULONG length, ULONG mask) (a0,a1,d0,d1,d2)
int SetMappingPropertiesA(struct MinList * list, ULONG flags, ULONG mask, ULONG lower, ULONG size, struct TagItem * tags) (a0,d1,d2,a1,d0,a2)
==varargs
int SetMappingProperties(struct MinList * list, ULONG flags, ULONG mask, ULONG lower, ULONG size, Tag tags, ...) (a0,d1,d2,a1,d0,a2)
ULONG GetMappingPropertiesA(struct MinList * list, ULONG lower, struct TagItem * tags) (a0,a1,a2)
==varargs
ULONG GetMappingProperties(struct MinList * list, ULONG lower, Tag tags, ...) (a0,a1,a2)
ULONG BuildIndirect(struct MMUContext * ctx, ULONG address, ULONG props) (a0,d0,d1)
void SetIndirect(ULONG * destination, ULONG logical, ULONG descriptor) (a0,a1,d0)
void GetIndirect(struct MMUContext * ctx, struct AbstractDescriptor * adt, ULONG * address) (a0,a1,d0)
** VMM support functions
==private
ULONG SwitchControl(ULONG oldswitch) (a0)
** New for V41
==public
BOOL RebuildTreesA(struct MMUContext ** ctxptr) (a0)
** New for V42
ULONG RunOldConfig(unsigned long (*func)()) (a5)
void SetIndirectArray(ULONG * destination, ULONG * descriptor, ULONG number) (a0,a1,d0)
** New for V43
ULONG GetPageUsedModified(struct MMUContext * ctx, ULONG address) (a0,a1)
==private
ULONG reserved1() ()
ULONG reserved2() ()
ULONG reserved3() ()
ULONG reserved4() ()
ULONG reserved5() ()
ULONG reserved6() ()
** New for V46
==public
BOOL MapWindow(struct MMUContext * targetctx, struct MMUContext * srcctx, struct ContextWindow * window) (a0,a1,d1)
struct ContextWindow * CreateContextWindowA(struct MMUContext * targetctx, struct MMUContext ** srcctxptrptr) (a0,a1)
void ReleaseContextWindow(struct ContextWindow * window) (a1)
BOOL RefreshContextWindow(struct ContextWindow * window) (a0)
BOOL MapWindowCached(struct MMUContext * targetctx, struct MMUContext * srcctx, struct ContextWindow * window) (a0,a1,d1)
BOOL LayoutContextWindow(struct ContextWindow * window) (a0)
==private
ULONG BuildDefaultTableSelected(ULONG ctx, ULONG flags) (a0,d0)
** New for V47
==public
ULONG LogicalLocation(struct MMUContext * ctx, void ** adrptrptr, ULONG * lengthptr) (d1,a0,a1)
==end
