* This SFD file was automatically generated by fd2sfd from
* /opt/amiga/m68k-amigaos/lib/fd/guigfx_lib.fd and
* /opt/amiga/m68k-amigaos/include/clib/guigfx_protos.h.
==base _GuiGFXBase
==basetype struct Library *
==libname guigfx.library
==include <exec/types.h>
==include <utility/tagitem.h>
*
*   guigfx_lib.fd    © TEK neoscientists
*   v9.00
*
==bias 30
==public
APTR MakePictureA(APTR array, UWORD width, UWORD height, struct TagItem * tags) (a0,d0,d1,a1)
==varargs
APTR MakePicture(APTR array, UWORD width, UWORD height, Tag tags, ...) (a0,d0,d1,a1)
APTR LoadPictureA(STRPTR filename, struct TagItem * tags) (a0,a1)
==varargs
APTR LoadPicture(STRPTR filename, Tag tags, ...) (a0,a1)
APTR ReadPictureA(struct RastPort * rastport, struct ColorMap * colormap, UWORD x, UWORD y, UWORD width, UWORD height, struct TagItem * tags) (a0,a1,d0,d1,d2,d3,a2)
==varargs
APTR ReadPicture(struct RastPort * rastport, struct ColorMap * colormap, UWORD x, UWORD y, UWORD width, UWORD height, Tag tags, ...) (a0,a1,d0,d1,d2,d3,a2)
APTR ClonePictureA(APTR pic, struct TagItem * tags) (a0,a1)
==varargs
APTR ClonePicture(APTR pic, Tag tags, ...) (a0,a1)
void DeletePicture(APTR pic) (a0)
ULONG UpdatePicture(ULONG pic) (a0)
APTR AddPictureA(APTR psm, APTR pic, struct TagItem * tags) (a0,a1,a2)
==varargs
APTR AddPicture(APTR psm, APTR pic, Tag tags, ...) (a0,a1,a2)
APTR AddPaletteA(APTR psm, APTR palette, struct TagItem * tags) (a0,a1,a2)
==varargs
APTR AddPalette(APTR psm, APTR palette, Tag tags, ...) (a0,a1,a2)
APTR AddPixelArrayA(APTR psm, APTR array, UWORD width, UWORD height, struct TagItem * tags) (a0,a1,d0,d1,a2)
==varargs
APTR AddPixelArray(APTR psm, APTR array, UWORD width, UWORD height, Tag tags, ...) (a0,a1,d0,d1,a2)
void RemColorHandle(APTR colorhandle) (a0)
APTR CreatePenShareMapA(struct TagItem * tags) (a0)
==varargs
APTR CreatePenShareMap(Tag tags, ...) (a0)
void DeletePenShareMap(APTR psm) (a0)
APTR ObtainDrawHandleA(APTR psm, struct RastPort * rastport, struct ColorMap * cm, struct TagItem * tags) (a0,a1,a2,a3)
==varargs
APTR ObtainDrawHandle(APTR psm, struct RastPort * rastport, struct ColorMap * cm, Tag tags, ...) (a0,a1,a2,a3)
void ReleaseDrawHandle(APTR drawhandle) (a0)
BOOL DrawPictureA(APTR drawhandle, APTR pic, UWORD x, UWORD y, struct TagItem * tags) (a0,a1,d0,d1,a2)
==varargs
BOOL DrawPicture(APTR drawhandle, APTR pic, UWORD x, UWORD y, Tag tags, ...) (a0,a1,d0,d1,a2)
BOOL MapPaletteA(APTR drawhandle, APTR palette, UBYTE * pentab, struct TagItem * tags) (a0,a1,a2,a3)
==varargs
BOOL MapPalette(APTR drawhandle, APTR palette, UBYTE * pentab, Tag tags, ...) (a0,a1,a2,a3)
LONG MapPenA(APTR drawhandle, ULONG rgb, struct TagItem * tags) (a0,a1,a2)
==varargs
LONG MapPen(APTR drawhandle, ULONG rgb, Tag tags, ...) (a0,a1,a2)
struct BitMap * CreatePictureBitMapA(APTR drawhandle, APTR pic, struct TagItem * tags) (a0,a1,a2)
==varargs
struct BitMap * CreatePictureBitMap(APTR drawhandle, APTR pic, Tag tags, ...) (a0,a1,a2)
ULONG DoPictureMethodA(APTR pic, ULONG method, ULONG * arguments) (a0,d0,a1)
ULONG GetPictureAttrsA(APTR pic, struct TagItem * tags) (a0,a1)
==varargs
ULONG GetPictureAttrs(APTR pic, Tag tags, ...) (a0,a1)
ULONG LockPictureA(APTR pic, ULONG mode, ULONG * args) (a0,d0,a1)
void UnLockPicture(APTR pic, ULONG mode) (a0,d0)
BOOL IsPictureA(char * filename, struct TagItem * tags) (a0,a1)
==varargs
BOOL IsPicture(char * filename, Tag tags, ...) (a0,a1)
APTR CreateDirectDrawHandleA(APTR drawhandle, UWORD sw, UWORD sh, UWORD dw, UWORD dh, struct TagItem * tags) (a0,d0,d1,d2,d3,a1)
==varargs
APTR CreateDirectDrawHandle(APTR drawhandle, UWORD sw, UWORD sh, UWORD dw, UWORD dh, Tag tags, ...) (a0,d0,d1,d2,d3,a1)
void DeleteDirectDrawHandle(APTR ddh) (a0)
BOOL DirectDrawTrueColorA(APTR ddh, ULONG * array, UWORD x, UWORD y, struct TagItem * tags) (a0,a1,d0,d1,a2)
==varargs
BOOL DirectDrawTrueColor(APTR ddh, ULONG * array, UWORD x, UWORD y, Tag tags, ...) (a0,a1,d0,d1,a2)
BOOL CreatePictureMaskA(APTR pic, UBYTE * mask, UWORD maskwidth, struct TagItem * tags) (a0,a1,d0,a2)
==varargs
BOOL CreatePictureMask(APTR pic, UBYTE * mask, UWORD maskwidth, Tag tags, ...) (a0,a1,d0,a2)
==end
