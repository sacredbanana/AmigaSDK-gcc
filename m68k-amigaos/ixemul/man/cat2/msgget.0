
MSGGET(2)                  UNIX Programmer's Manual                  MSGGET(2)

NNAAMMEE
     mmssggggeett - get message queue

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<ssyyss//ttyyppeess..hh>>
     ##iinncclluuddee <<ssyyss//iippcc..hh>>
     ##iinncclluuddee <<ssyyss//mmssgg..hh>>

     _i_n_t
     mmssggggeett(_k_e_y___t _k_e_y, _i_n_t _m_s_g_f_l_g)

DDEESSCCRRIIPPTTIIOONN
     mmssggggeett() returns the message queue identifier associated with _k_e_y. A mes-
     sage queue identifier is a unique integer greater than zero.

     A message queue is created if either _k_e_y is equal to IPC_PRIVATE, or _k_e_y
     does not have a message queue identifier associated with it, and the
     IPC_CREAT bit is set in _m_s_g_f_l_g_.

     If a new message queue is created, the data structure associated with it
     (the _m_s_q_i_d___d_s structure, see msgctl(2))  is initialized as follows:

     ++oo   _m_s_g___p_e_r_m_._c_u_i_d and _m_s_g___p_e_r_m_._u_i_d are set to the effective uid of the
         calling process.

     ++oo   _m_s_g___p_e_r_m_._g_i_d and _m_s_g___p_e_r_m_._c_g_i_d are set to the effective gid of the
         calling process.

     ++oo   _m_s_g___p_e_r_m_._m_o_d_e is set to the lower 9 bits of _m_s_g_f_l_g.

     ++oo   _m_s_g___c_b_y_t_e_s, _m_s_g___q_n_u_m, _m_s_g___l_s_p_i_d, _m_s_g___l_r_p_i_d, _m_s_g___r_t_i_m_e, and _m_s_g___s_t_i_m_e
         are set to 0

     ++oo   _m_s_g___q_b_y_t_e_s is set to the system wide maximum value for the number of
         bytes in a queue (MSGMNB).

     ++oo   _m_s_g___c_t_i_m_e is set to the current time.

RREETTUURRNN VVAALLUUEESS
     Upon successful completion a positive message queue identifier is re-
     turned.  Otherwise, -1 is returned and the global variable _e_r_r_n_o is set
     to indicate the error.

EERRRROORRSS
     [EACESS]      A message queue is already associated with _k_e_y and the
                   caller has no permission to access it.

     [EEXIST]      Both IPC_CREAT and IPC_EXCL are set in _m_s_g_f_l_g, and a mes-
                   sage queue is already associated with _k_e_y.

     [ENOSPC]      A new message queue could not be created because the system
                   limit for the number of message queues has been reached.

     [ENOENT]      IPC_CREAT was not set in _m_s_g_f_l_g and no message queue asso-
                   ciated with _k_e_y was found.

SSEEEE AALLSSOO
     msgctl(2),  msgrcv(2),  msgsnd(2)

HHIISSTTOORRYY
     Message queues appeared in the first release of AT&T Unix System V.

 NetBSD                         August 17, 1995                              1
