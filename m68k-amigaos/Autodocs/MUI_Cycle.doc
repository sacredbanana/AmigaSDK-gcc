TABLE OF CONTENTS

Cycle.mui/Cycle.mui
Cycle.mui/MUIA_Cycle_Active
Cycle.mui/MUIA_Cycle_Entries
Cycle.mui/Cycle.mui

	Cycle class generates the well known cycle gadgets.
	However, MUI cycle gadgets feature a (configurable)
	popup menu to avoid clicking through many entries.
Cycle.mui/MUIA_Cycle_Active

    NAME
	MUIA_Cycle_Active -- (V4 ) [ISG], LONG

    SPECIAL INPUTS
	MUIV_Cycle_Active_Next
	MUIV_Cycle_Active_Prev

    FUNCTION
	This attributes defines the number of the active
	entry in the cycle gadgets. Valid range is from
	0 for the first entry to NumEntries-1 for the last.

	Setting MUIA_Cycle_Active causes the gadget to
	be updated. On the other hand, when the user
	plays around with the gadget, MUIA_Cycle_Active
	will always reflects the current state.

	Using MUIV_Cycle_Active_Next and MUIV_Cycle_Active_Prev
	as attribute value during set causes the gadget to
	cycle through its entries in the given direction.

    EXAMPLE
	set(cycleobj,MUIA_Cycle_Active,3);

    SEE ALSO
	MUIA_Cycle_Entries
Cycle.mui/MUIA_Cycle_Entries

    NAME
	MUIA_Cycle_Entries -- (V4 ) [I..], STRPTR *

    FUNCTION
	Here you can define what entries shall be displayed
	in your cycle gadget. You must supply a pointer to
	a string array, containing one entry for each item
	and terminated with a NULL.

	Remember that cycle gadget entries may contain any
	text formatting code such as bold, italic or
	underlined characters.

	Cycle gadgets set the preparse string for all entries
	to "\33c", this means that they will automatically
	appear centered. Of course you can override this by
	simply preceding your entries with own formatting code.

    EXAMPLES
	static const char *CYA_GroupTitleColor[] =
	{
	   "normal",
	   "highlight",
	   "3-dimensional",
	   NULL
	};

        CY_Title = CycleObject,
	   MUIA_Cycle_Entries, CYA_GroupTitleColor,
	   End;

    SEE ALSO
	MUIA_Cycle_Active, MUIA_Text_Contents
