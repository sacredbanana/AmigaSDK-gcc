TABLE OF CONTENTS

Guigfx_mcc/Guigfx.mcc
Guigfx_mcc/MUIA_Guigfx_BitmapInfo
Guigfx_mcc/MUIA_Guigfx_FileName
Guigfx_mcc/MUIA_Guigfx_ImageInfo
Guigfx_mcc/MUIA_Guigfx_Picture
Guigfx_mcc/MUIA_Guigfx_Quality
Guigfx_mcc/MUIA_Guigfx_ScaleMode
Guigfx_mcc/MUIA_Guigfx_Transparency
Guigfx_mcc/MUIA_Guigfx_TransparentColorGuigfx_mcc/Guigfx.mcc

   Guigfx.mcc was originally developed by Matthias Bethke.
   This is a native reimplementation included with MUI5 for convenience.

   Guigfx.mcc offers a convenient interface to the functions provided by
   guigfx.library to render and display arbitrary images.
Guigfx_mcc/MUIA_Guigfx_BitmapInfo

   NAME
   MUIA_Guigfx_BitmapInfo -- (V0) [IS.], struct MUIP_Guigfx_BitmapInfo *

   FUNCTION
   To display a custom bitmap supplied by your application in a Guigfx object
   instead of loading an image from disk, set this attribute to a pointer to a
   valid MUIP_Guigfx_BitmapInfo structure.
   This structure holds some additional information, which is required but not
   present in a standard BitMap:
   - the palette as a series of 32-bit RGB triplets (see
     graphics.library/GetRGB32())
   - an optional pointer to a single bitplane to be used as a transparency mask
   - the picture's horizontal/vertical pixel aspect

   The special values MUIV_Guigfx_WBPalette and MUIV_Guigfx_GreyPalette may be
   used instead of a pointer to a color table to use the WB's (e.g. to show an
   icon image read with GetDiskObject()) or a greyscale palette respectively.

   NOTES
   Before version 21 it was necessary to embed the object't parent group into
   a MUIM_Group_InitChange/MUIM_Group_ExitChange pair when setting this
   attribute. This is no longer required for Guigfx.mcc V21.

   The Version field of the MUIP_Guigfx_BitmapInfo MUST be set to
   NEWIMAGE_BITMAPINFO_VERSION, otherwise the bitmap will be ignored!

   SEE ALSO
   MUIA_Guigfx_Filename, MUIA_Guigfx_Picture, MUIA_Guigfx_ImageInfo
Guigfx_mcc/MUIA_Guigfx_FileName

   NAME
   MUIA_Guigfx_FileName -- (V0) [IS.], CONST_STRPTR

   FUNCTION
   Pointer to the filename of a picture to load and display. Files are loaded
   using guigfx.library which uses datatypes, so the format doesn't matter as
   long as the user has a datatype for it.

   NOTES
   Before version 21 it was necessary to embed the object't parent group into
   a MUIM_Group_InitChange/MUIM_Group_ExitChange pair when setting this
   attribute. This is no longer required for Guigfx.mcc V21.

   SEE ALSO
   MUIA_Guigfx_Picture, MUIA_Guigfx_BitmapInfo, MUIA_Guigfx_Image
Guigfx_mcc/MUIA_Guigfx_ImageInfo

   NAME
   MUIA_Guigfx_ImageInfo -- (V0) [IS.], struct MUIP_Guigfx_ImageInfo *

   FUNCTION
   To display a custom Intuition image supplied by your application in a Guigfx
   object  instead of loading an image from disk, set this attribute to a
   pointer to a valid MUIP_Guigfx_ImageInfo structure.
   This structure holds some additional information, which is required but not
   present in a standard Intuition image:
   - the palette as a series of 32-bit RGB triplets (see
     graphics.library/GetRGB32())

   The special values MUIV_Guigfx_WBPalette and MUIV_Guigfx_GreyPalette may be
   used instead of a pointer to a color table to use the WB's (e.g. to show an
   icon image read with GetDiskObject()) or a greyscale palette respectively.

   NOTES
   Before version 21 it was necessary to embed the object't parent group into
   a MUIM_Group_InitChange/MUIM_Group_ExitChange pair when setting this
   attribute. This is no longer required for Guigfx.mcc V21.

   The Version field of the MUIP_Guigfx_ImageInfo MUST be set to
   NEWIMAGE_IMAGEINFO_VERSION, otherwise the image will be ignored!

   SEE ALSO
   MUIA_Guigfx_BitmapInfo
Guigfx_mcc/MUIA_Guigfx_Picture

   NAME
   MUIA_Guigfx_Picture -- (V0) [ISG], APTR

   FUNCTION
   Holds an opaque pointer to a guigfx.library picture object. If you want to
   load a picture yourself using guigfx.library, you can pass in a pointer to
   the object here, or get() the pointer to the object Guigfx.mcc created from
   another source.

   NOTES
   Before version 21 it was necessary to embed the object't parent group into
   a MUIM_Group_InitChange/MUIM_Group_ExitChange pair when setting this
   attribute. This is no longer required for Guigfx.mcc V21.

   SEE ALSO
   MUIA_Guigfx_FileName, MUIA_Guigfx_BitmapInfo, MUIA_Guigfx_Image
Guigfx_mcc/MUIA_Guigfx_Quality

   NAME
   MUIA_Guigfx_Quality -- (V0) [ISG], ULONG

   FUNCTION
   Accuracy to use when remapping/dithering an image. Possible values are:

   - MUIV_Guigfx_Quality_Low
       Remapping: PRECISION_ICON
       Dithering: none

   - MUIV_Guigfx_Quality_Medium
       Remapping: PRECISION_ICON
       Dithering: EDD / automatic / threshold=250

   - MUIV_Guigfx_Quality_High
       Remapping: PRECISION_IMAGE
       Dithering: EDD / automatic / threshold=120

   - MUIV_Guigfx_Quality_Best
       Remapping: PRECISION_IMAGE
       Dithering: Floyd-Steinberg / always
Guigfx_mcc/MUIA_Guigfx_ScaleMode

   NAME
   MUIA_Guigfx_ScaleMode -- (V0) [ISG], ULONG

   FUNCTION
   Whether/how to allow image scaling. This is a 32bit value with the following
   bits currently defined:

   - NISMF_SCALEUP
     Allow image to be enlarged.

   - NISMF_SCALEDOWN
     Allow image to be reduced.

   - NISMF_SCALEFREE
     Combination of the above flags, allows any size

   Use NISMF_NONE to forbid scaling completely.

   Special flags:
   - NISMF_KEEPASPECT_PICTURE
     Keep the picture's pixel aspect when scaling. As MUI does not support
     explicit width/height ratios, this will cause some background to appear
     above and below or to the left and right to keep always the picture
     centered in the available rectangle.

   - NISMF_KEEPASPECT_SCREEN
     Take the screen's pixel aspect into account when calculating the allowed
     sizes. For example, a picture drawn for a 640x256 screenmode will have its
     pixel height multiplied by 1.87 for a 800x600 screen to make it look as
     close to the original as possible. This flag implies
     NISMF_KEEPASPECT_PICTURE, so an aspect-corrected picture will also scale
     with fixed aspect.

   NOTES
   Before version 21 it was necessary to embed the object't parent group into
   a MUIM_Group_InitChange/MUIM_Group_ExitChange pair when setting this
   attribute. This is no longer required for Guigfx.mcc V21.
Guigfx_mcc/MUIA_Guigfx_Transparency

   NAME
   MUIA_Guigfx_Transparency -- (V0) [ISG], ULONG

   FUNCTION
   Two flags may be set to determine if and what kind of transparancy should be
   used:
   - NITRF_MASK
     Some image file formats and their corresponding datatypes support an
     alphachannel, typically in 1-8 bits. If this flag is set and an
     alphachannel was found in an image, it is converted into a mask so that
     only the opaque image parts are drawn.

   - NITRF_RGB
     For formats that don't support an alphachannel you may want to use a
     certain RGB value as a background color. By setting this flag, a value set
     with MUIA_Guigfx_TransparentColor is considered to be valid.

   If both flags are set, the alphachannel is tried first. If it doesn't exist
   the class falls back to an RGB mask using MUIA_Guigfx_TransparentColor.

   SEE ALSO
   MUIA_Guigfx_TransparentColor
Guigfx_mcc/MUIA_Guigfx_TransparentColor

   NAME
   MUIA_Guigfx_TransparentColor -- (V0) [ISG], ULONG

   FUNCTION
   For image formats that don't support an alphachannel (or pictures that
   simply don't have one although the format permits it) you may want to
   specify a certain RGB value that is to be used as "background color". In
   this case, set the NITRF_RGB flag in MUIA_Guigfx_Transparency and
   MUIA_Guigfx_TransparentColor to the RGB value in format 0x00rrggbb.

   SEE ALSO
   MUIA_Guigfx_Transparency

