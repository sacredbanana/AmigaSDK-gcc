TABLE OF CONTENTS

Hyperlink.mcc/Hyperlink.mcc
Hyperlink.mcc/--URI-Schemes--
Hyperlink.mcc/MUIA_Hyperlink_HoverTip
Hyperlink.mcc/MUIA_Hyperlink_URI
Hyperlink.mcc/MUIM_Hyperlink_Copy
Hyperlink.mcc/MUIM_Hyperlink_Decode
Hyperlink.mcc/MUIM_Hyperlink_Encode
Hyperlink.mcc/MUIM_Hyperlink_FollowHyperlink.mcc/Hyperlink.mcc

   The Hyperlink class offers a convenient way to include any kind of
   clickable URIs (unique resource identifiers, i.e. website links, EMail
   addresses) into MUI applications.

   As Hyperlink.mcc is a subclass of MUI's Text class it supports all its
   attributes and methods.


   NOTES

   By default Hyperlink objects are displayed with fully user-configurable
   colors like links in a web browser application. However, if a Hyperlink
   object is initialized with any kind of frame it will convert itself into a
   normal MUI button. In this case there is no need to implement any custom
   handling of mouse clicks or whatsoever. All this will be handled
   internally by the object already.

   By default Hyperlink objects will set MUIA_Text_SetMax attribute
   automatically according to the "link" and "button" modes described above to
   TRUE and FALSE respectively for convenience. Of course this automatism can be
   overridden if it is required.
Hyperlink.mcc/--URI-Schemes--

   Hyperlink.mcc supports various URI schemes. Most of them are passed directly
   to the OpenURL system. At the time of writing the OpenURL system handles
   following URI/URL schemes:
     - file://
     - ftp://
     - http://
     - https://
     - mailto://
   Please refer to the OpenURL documentation for more information regarding
   these schemes. For AmigaOS4 the URL: device can be used as an alternative to
   the OpenURL system.

   The following URI schemes are handled by Hyperlink.mcc internally:

   about:     - When used without further parameters an Aboutbox for the current
                application is opened. It also supports the strings
                "Hyperlink.mcc" and "AmigaOS" as parameter which will open the
                respective Aboutboxes.
                Examples:
                  about:
                  about:Hyperlink.mcc
                  about:AmigaOS

   amigados:  - An URI scheme that will execute the given command in AmigaDOS
                mode. The command parameter must be encoded according to RFC
                1738. See MUIM_Hyperlink_Encode for details.
                Examples:
                  amigados:List
                  amigados:SYS%3aUtilities/MultiView
                  amigados:List%20SYS%3a

   workbench: - An URI scheme that will open the given path or command in
                Workbench mode. The path or command parameter must be encoded
                according to RFC 1738. See MUIM_Hyperlink_Encode for details.
                Examples:
                  workbench:SYS:
                  workbench:SYS%3aUtilities/MultiView

   All URI schemes except "about:", "amigados:" and "workbench:" will be
   forwarded to the OpenURL system.

   For more information about URI schemes please refer to the Wikipedia pages:
   http://en.wikipedia.org/wiki/URI_scheme

   SEE ALSO
       MUIM_Hyperlink_Encode, MUIM_Hyperlink_Decode, MUIA_Hyperlink_URI
Hyperlink.mcc/MUIA_Hyperlink_HoverTip

   NAME
   MUIA_Hyperlink_HoverTip -- [..G], STRPTR

   FUNCTION
   This attribute provides context sensitve help when the mouse pointer is moved
   over the Hyperlink object. Leaving the object will trigger this attribute
   with a NULL string. This case must be handled gracefully.

   EXAMPLE
   DoMethod(hyperlink, MUIM_Notify, MUIA_Hyperlink_HoverTip, MUIV_EveryTime,
       textobject, 3, MUIM_Set, MUIA_Text_Contents, MUIV_TriggerValue);
Hyperlink.mcc/MUIA_Hyperlink_URI

   NAME
   MUIA_Hyperlink_URI -- [ISG], STRPTR

   FUNCTION
   This attribute specifies the URI (i.e. an URI of a website) which will be
   associated with the Hyperlink object.

   By default the object's associated URI will be followed if the user clicks
   the Hyperlink object. In case of a website URI it might be loaded in a web
   browser, depending on the OpenURL system configuration.

   NOTES
   If MUIA_Text_Contents was omitted during OM_NEW the URI specified by
   MUIA_Hyperlink_URI will be used instead for MUIA_Text_Contents as visible
   object text.

   The provided URI string will be copied internally, hence it is safe to build
   URI strings on the stack or in any other volatile fashion. There is no size
   limitation either.

   EXAMPLE
   Object *mui_website = HyperlinkObject,
       MUIA_Text_Contents, "Goto MUI development site",
       MUIA_Hyperlink_URI, "http://muidev.de/",
   End;

   Object *write_mail = HyperlinkObject,
       MUIA_Text_Contents, "Send an EMail to someone...",
       MUIA_Hyperlink_URI, "mailto:user@example.com",
   End;

   Object *my_wbview = HyperlinkObject,
       MUIA_Text_Contents, "Open SYS:Utilities...",
       MUIA_Hyperlink_URI, "workbench:SYS%3aUtilities",
   End;

   SEE ALSO
   --URI-Schemes--, MUIM_Hyperlink_Follow
Hyperlink.mcc/MUIM_Hyperlink_Copy

   NAME
   MUIM_Hyperlink_Copy --

   SYNOPSIS
   DoMethod(hyperlink, MUIM_Hyperlink_Copy, ULONG unit);

   FUNCTION
   Copy the current URI associated with the Hyperlink object to the clipboard.

   INPUT
   unit - Unit number of the clipboard the URI shall be copied to. Usually this
          will be unit 0.

   RESULT
   TRUE on success or FALSE in case of an error (i.e. no URI is set or writing
   to the clipboard failed).

   SEE ALSO
   MUIA_Hyperlink_URI
Hyperlink.mcc/MUIM_Hyperlink_Decode

   NAME
   MUIM_Hyperlink_Decode --

   SYNOPSIS
   LONG count = DoMethod(hyperlink, MUIM_Hyperlink_Decode, CONST_STRPTR input,
       STRPTR output);

   FUNCTION
   This method decodes an encoded string according to RFC 1738 to its original
   representation. All encoded characters will be converted back to their ASCII
   representation. Furthermore any plus character ("+") will be converted to a
   space character. Make sure to provide a large enough storage buffer. The
   decoded string can be as long as the encoded string at most, plus the
   terminating NUL byte.

   INPUT
   input  - the string to be decoded
   output - storage for the decoded string

   RESULT
   The size of the decoded string is returned or -1 in case "input" or "output"
   were NULL. Although the decoded string will be terminated by a NUL byte the
   returned value does NOT include this NUL byte.

   SEE ALSO
   MUIA_Hyperlink_Encode
Hyperlink.mcc/MUIM_Hyperlink_Encode

   NAME
   MUIM_Hyperlink_Encode --

   SYNOPSIS
   LONG count = DoMethod(hyperlink, MUIM_Hyperlink_Encode, CONST_STRPTR input,
       STRPTR output);

   FUNCTION
   This method encodes an arbitrary ASCII string according to RFC 1738 to be
   used for an URI scheme. All non-alphanumeric characters and all "unsafe"
   characters will be replaced with a percent sign followed by two hex digits
   (i.e. "%3a" for the colon character) as described in RFC 1738. This avoids
   literal characters in such strings to be interpreted as special URI
   delimiters.

   INPUT
   input  - the string to be encoded
   output - storage for the encoded string

   SPECIAL INPUTS
   MUIV_Hyperlink_Encode_Count - use this special value to just calculate the
                                 final size of the encoded string. The returned
                                 value can be used to allocate a sufficiently
                                 large buffer for the following real encoding
                                 step.

   RESULT
   The size of the encoded string is returned or -1 in case "input" was NULL.
   Although the encoded string will be terminated by a NUL byte the returned
   value does NOT include this NUL byte. Respect this when allocating the
   "output" buffer.

   SEE ALSO
   MUIA_Hyperlink_Decode
Hyperlink.mcc/MUIM_Hyperlink_Follow

   NAME
   MUIM_Hyperlink_Follow --

   SYNOPSIS
   DoMethod(hyperlink, MUIM_Hyperlink_Follow);

   FUNCTION
   Invoke following the currently associated URI. All known URIs will either be
   handled internally or will be forwarded to the OpenURL system and therefore
   be handled there according to user's preferences. For example, an URI like
   "http://www.muidev.de" will cause a web browser to be launched to load that
   page.
   Hyperlink.mcc handles "about:", "amigados:" and "workbench:" internally.

   NOTES
   This method is performed automatically when a Hyperlink object was clicked by
   the user.

   RESULT
   TRUE on success or FALSE in case of an error.

   SEE ALSO
   MUIA_Hyperlink_URI, --URI-Schemes--

