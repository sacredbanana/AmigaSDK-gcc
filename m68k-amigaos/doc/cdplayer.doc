TABLE OF CONTENTS

cdplayer.library/CDActive
cdplayer.library/CDCurrentTitle
cdplayer.library/CDEject
cdplayer.library/CDGetVolume
cdplayer.library/CDInfo
cdplayer.library/CDJump
cdplayer.library/CDPlay
cdplayer.library/CDReadTOC
cdplayer.library/CDResume
cdplayer.library/CDSetVolume
cdplayer.library/CDStop
cdplayer.library/CDTitleTime
cdplayer.library/CDActive                           cdplayer.library/CDActive

   NAME
        CDActive -- liefert den Zustand des CDLaufwerks: steht oder spielt

   SYNOPSIS
        state = CDActive (io_ptr)
                          A5

        BOOL CDActive (struct IOStdReq *);

   FUNCTION
        Liefert bei einer Audioausgabe des Laufwerks TRUE, bei Stop oder
        Pause FALSE.

   INPUTS
        io_ptr - IORequest von OpenDevice()

   RESULT
        state - TRUE wenn aktiv, sonst FALSE

   BUGS
        keine bekannt

cdplayer.library/CDCurrentTitle               cdplayer.library/CDCurrentTitle

   NAME
        CDCurrentTitle -- liefert den aktuellen Titel

   SYNOPSIS
        title = CDCurrentTitle (io_ptr)
                                A5

        ULONG CDCurrentTitle (struct IOStdReq *);

   FUNCTION
        Liefert den aktuellen Titel, der gespielt wird.

   INPUTS
        io_ptr - IORequest von OpenDevice()

   RESULT
        title - Nummer des aktuellen Titels

   BUGS
        keine bekannt

cdplayer.library/CDEject                             cdplayer.library/CDEject

   NAME
        CDEject -- CD aus Laufwerk auswerfen

   SYNOPSIS
        result = CDEject (io_ptr)
                          A5

        BYTE CDEject (struct IOStdReq *);

   FUNCTION
        Wirft eine CD aus dem zum IORequest gehörigen Laufwerk aus. Nicht
        alle Laufwerke unterstützen dieses Kommando, mein Toshiba macht es.

   INPUTS
        io_ptr - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDGetVolume                     cdplayer.library/CDGetVolume

   NAME
        CDGetVolume -- aktuelle Lautstärke der Audiokanäle holen

   SYNOPSIS
        result = CDGetVolume (cd_vol, io_ptr)
                              A0      A5

        BYTE CDGetVolume (struct CD_Volume *, struct IOStdReq *);

   FUNCTION
        Holt die aktuelle Laufstärke der Audiokanäle aus dem Laufwerk und
        schreibt diese in einen struct CD_Volume.

   INPUTS
        cd_vol - Zeiger auf eine Struktur vom Typ struct CD_Volume
        io_ptr - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDInfo                               cdplayer.library/CDInfo

   NAME
        CDInfo -- liefert Infos über das Gerät zum struct IOStdReq *

   SYNOPSIS
        result = CDInfo (cd_info, io_ptr)
                         A0          A5

        BYTE CDInfo (struct CD_Info *, struct IOStdReq *);

   FUNCTION
        Liefert Infos über das Gerät, unter anderem Hersteller, Typ und
        SCSI-Standart.

   INPUTS
        cd_info - Zeiger auf Struktur vom Typ struct CD_Info
        io_ptr  - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDJump                               cdplayer.library/CDJump

   NAME
        CDJump -- innerhalb eines Audiotracks die Position ändern

   SYNOPSIS
        result = CDJump (blocks, io_ptr)
                         A0         A5

        BYTE CDJump (LONG, struct IOStdReq *);

   FUNCTION
        CDJump wechselt die Position innerhalb eines Audiotracks. Dabei
        spingt ein positiver Wert vorwärts, ein negativer Wert spult
        zurück. 75 Blocks sind 1 Sekunde.

   INPUTS
        blocks - Anzahl der Blöcke, die gespult werden sollen
        io_ptr - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDPlay                               cdplayer.library/CDPlay

   NAME
        CDPlay -- startet mit der Wiedergabe eines Audiotracks

   SYNOPSIS
        result = CDPlay (starttrack, endtrack, io_ptr)
                         A0             A1               A5

        BYTE CDPlay (UBYTE, UBYTE, struct IOStdReq *);

   FUNCTION
        Startet die Wiedergabe eines oder einer Reihe von Audiotracks.
        Dabei kann Start- und Endtrack definiert werden.

   INPUTS
        starttrack - erster Track, der gespielt werden soll
        endtrack   - letzter Track
        io_ptr     - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDReadTOC                         cdplayer.library/CDReadTOC

   NAME
        CDReadTOC -- liest das Inhaltsverzeichniss der aktuellen CD

   SYNOPSIS
        result = CDReadTOC (toc, io_ptr)
                            A0   A5

        BYTE CDReadTOC (struct CD_TOC *, struct IOStdReq *);

   FUNCTION
        Liest das Inhaltsverzeichniss der aktuellen CD und liefert so
        Anzahl der Tracks, aktueller Titel, Typ der Tracks und deren
        Adressen.

   INPUTS
        toc    - Zeiger auf eine Struktur vom Typ struct CD_TOC
        io_ptr - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDResume                           cdplayer.library/CDResume

   NAME
        CDResume -- schaltet zwischen Pause und Wiedergabe um

   SYNOPSIS
        result = CDResume (mode, io_ptr)
                           A0         A5

        BYTE CDResume (BOOL, struct IOStdReq *);

   FUNCTION
        Schaltet zwischen Pause und Wiedergabe eines Audiotracks um. Wenn
        kein Track gespielt wird, hat die Funktion keine Wirkung.

   INPUTS
        mode   - TRUE für Abspielen und FALSE für Pause
        io_ptr - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDSetVolume                     cdplayer.library/CDSetVolume

   NAME
        CDSetVolume -- setzt die Lautstärke der Audiokanäle

   SYNOPSIS
        result = CDSetVolume (cd_vol, io_ptr)
                              A0      A5

        BYTE CDSetVolume (struct CD_Volume *, IOStdReq *);

   FUNCTION
        Setzt die Lautstärke der Audiokanäle auf die in cd_vol übergebenen
        Werte. So kann auch eine Balance-Einstellung ermöglicht werden.
        (50% / 100%) usw.

   INPUTS
        cd_vol - Zeiger auf eine Struktur vom Typ struct CD_Volume
        io_ptr - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDStop                               cdplayer.library/CDStop

   NAME
        CDStop -- stoppt die Wiedergabe eines Audiotracks

   SYNOPSIS
        result = CDStop (io_ptr)
                         A5

        BYTE CDStop (struct IOStdReq *);

   FUNCTION
        Stoppt die Wiedergabe eines Audiotracks. Wenn gerade kein Track ge-
        spielt wird, hat die Funktion keine Wirkung.

   INPUTS
        io_ptr - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

cdplayer.library/CDTitleTime                     cdplayer.library/CDTitleTime

   NAME
        CDTitleTime -- liefert die aktuellen Zeitdaten über die CD

   SYNOPSIS
        result = CDTitleTime (cd_time, io_ptr)
                              A0       A5

        BYTE CDTitleTime (struct CD_Time *, struct IOStdReq *);

   FUNCTION
        Füllt eine Struktur vom Typ CD_Time mit den Zeitdaten der aktuellen
        CD. Dabei werden folgende Werte gesetzt:

        struct CD_Time
        {
                ULONG        cdt_TrackCurBase;
                        // Adr: aktuelle Position Track
                ULONG        cdt_TrackRemainBase;
                        // Adr: Restspielzeit Track
                ULONG        cdt_TrackCompleteBase;
                        // Adr: Gesammspielzeit Track
                ULONG        cdt_AllCurBase;
                        // Adr: aktuelle Position CD
                ULONG        cdt_AllRemainBase;
                        // Adr: Restspielzeit CD
                ULONG        cdt_AllCompleteBase;
                        // Adr: Gesammtspielzeit CD
        };

        Aus den Adressen können nun mit den in cdplayer.h definierten Macros
        BASE2MIN und BASE2SEC in Minuten/Sekunden umgerechnet werden,
        BASE2MIN liefert die Minuten und BASE2SEC die Sekunden der Adresse.

   INPUTS
        cd_time - Zeiger auf eine Struktur vom Typ struct CD_Time
        io_ptr  - IORequest von OpenDevice()

   RESULT
        result - Fehlercode

   BUGS
        keine bekannt

   EXAMPLE

        [...]

        struct CD_Time CD_Time;

        if (0 == (CDTitleTime (&CD_Time, CD_Request)))
        {
                // wir haben nun die aktuellen Daten der CD

                Printf ("Gesammtspielzeit der CD ist %02d:%02d.\n",
                        BASE2MIN (CD_Time.cdt_AllCompleteBase),
                        BASE2SEC (CD_Time.cdt_AllCompleteBase));
        }

        [...]

