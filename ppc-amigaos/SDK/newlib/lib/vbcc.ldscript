ENTRY(_start)

SECTIONS
{
  /* Read-only sections, merged into text segment: */
  .init           : { *(.init) }
  .text           : { *(.text .gnu.linkonce.t.*) }
  .fini           : { *(.fini) }
  .code68k        : { *(CODE text code) }

  /*
  PROVIDE(__etext = .);
  PROVIDE(_etext = .);
  PROVIDE(etext = .);
  */

  .rodata         : { *(.rodata .rodata.* .gnu.linkonce.r.*) }
  .sdata2         : { *(.sdata2 .sdata2.*) }
  .sbss2          : { *(.sbss2 .sbss2.*) }

  /* data segment: */
  . = ALIGN(16) + 0x10000;

  .data           : {
    PROVIDE(_DATA_BASE_ = .);
    *(.data .data.*)
    VBCC_CONSTRUCTORS_ELF
  }
  .data68k        : { *(DATA data) }
  .got            : { *(.got.plt) *(.got) }
  .sdata          : {
    _LinkerDB = . + 0x8000;
    _SDA_BASE_ = . + 0x8000;
    *(.sdata .sdata.* .tocd)
  }
  .sdata68k       : { *(__MERGED) }

  /*
  PROVIDE(_edata = .);
  PROVIDE(edata = .);
  PROVIDE(__bss_start = .);
  */

  .sbss           : {
    PROVIDE(__sbss_start = .);
    PROVIDE(___sbss_start = .);
    *(.sbss .sbss.*)
    *(.scommon)
    PROVIDE(__sbss_end = .);
    PROVIDE(___sbss_end = .);
  }
  .plt            : { *(.plt) }
  .bss            : {
    *(.bss .bss.*)
    *(COMMON)
   . = ALIGN(32 / 8);
  }
  .bss68k         : { *(BSS bss) }

  . = ALIGN(32 / 8);
  /*
  PROVIDE(_end = .);
  PROVIDE(end = .);
  */

  .comment      0 : { *(.comment) }

  __amigaos4__ = 1;

  /* DWARF debug sections.
     Symbols in the DWARF debugging sections are relative to the beginning
     of the section so we begin them at 0.  */
  /* DWARF 1 */
  .debug          0 : { *(.debug) }
  .line           0 : { *(.line) }
  /* GNU DWARF 1 extensions */
  .debug_srcinfo  0 : { *(.debug_srcinfo) }
  .debug_sfnames  0 : { *(.debug_sfnames) }
  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  0 : { *(.debug_aranges) }
  .debug_ranges  0 : { *(.debug_ranges) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  /* DWARF 2 */
  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }
}
