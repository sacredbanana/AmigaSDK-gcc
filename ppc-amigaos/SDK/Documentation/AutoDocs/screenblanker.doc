TABLE OF CONTENTS

screenblanker.library/CloseBlankerModule
screenblanker.library/GetScreenBlankerAttrs
screenblanker.library/LogFmt
screenblanker.library/LogPuts
screenblanker.library/OpenBlankerModule
screenblanker.library/SetBlankingMode
screenblanker.library/SetScreenBlankerAttrs
screenblanker.library/CloseBlankerModuleeenblanker.library/CloseBlankerModule

   NAME
      CloseBlankerModule -- Free any loaded Blanker Module.

   SYNOPSIS
      CloseBlankerModule( void );

      CloseBlankerModule( void );


   FUNCTION

   INPUTS


   RESULT
     -none-

   SEE ALSO
      OpenBlankerModule()

screenblanker.library/GetScreenBlankerAttrsnker.library/GetScreenBlankerAttrs

   NAME
      GetScreenBlankerAttrs -- Retrive blanking settings.

   SYNOPSIS
      result = GetScreenBlankerAttrsA( taglist );

      uint32 = GetScreenBlankerAttrsA( struct TagItem * );


      result = GetScreenBlankerAttrs( ... );

      uint32 = GetScreenBlankerAttrs( ... );


   FUNCTION

   INPUTS


   RESULT
     result = The number of Attributes that got Handled.

   NOTES
     Before v53.4 this function return TRUE/FALSE instead of the number
     of handled tags.

   SEE ALSO
      SetScreenBlankerAttrs()

screenblanker.library/LogFmt                     screenblanker.library/LogFmt

   NAME
      LogPuts -- Add a message to the Blanker log. (v53.4)

   SYNOPSIS
      LogFmtA( type,  context,      message,      args );

      LogFmtA( int32, CONST_STRPTR, CONST_STRPTR, uint32 * );


      LogFmt( type,  context,      message,      ... );

      LogFmt( int32, CONST_STRPTR, CONST_STRPTR, ... );


   FUNCTION
      With this function you add a single log entry to the Blanker log.
      Depending on the given error code the log entry will be added as
      either an error (<0), warning (>0) or information (==0) entry.

      The log message string may include RawDoFmt() style formatting codes,
      which will be replaced using the formatting arguments pointed to by
      <fmtargs>.
      If a varargs version of this call is needed, it is easily implemented
      by using the following code snippet:

      Please note that the user may be able to disable logging of
      individual log entry types. Just because you call this function it
      is therefore not guaranteed to make a log entry.

   INPUTS
      err      The error code for the log entry. No specific error codes
               have been defined at this time. Only the following general
               error codes are valid:
                  -1    Error entry
                   0    Information entry
                   1    Warning entry

      context  A string describing the context in which the log entry is
               generated. This could be the name of the function from which
               the log entry is created, or an indication of the process
               during which the log entry is being created.

      msg      The actual log message. Formatting codes may be used, as
               specified by RawDoFmt().

      args     Pointer to array holding data arguments to insert in place
               of the formatting codes in <msg>.

   RESULT
     -none-

   SEE ALSO
      LogPuts()

screenblanker.library/LogPuts                   screenblanker.library/LogPuts

   NAME
      LogPuts -- Add a message to the Blanker log. (v53.4)

   SYNOPSIS
      LogPuts( type,  context,      message );

      LogPuts( int32, CONST_STRPTR, CONST_STRPTR );


   FUNCTION
      With this function you add a single log entry to the Blanker log.
      Depending on the given error code the log entry will be added as
      either an error (<0), warning (>0) or information (==0) entry.

      Please note that the user may be able to disable logging of
      individual log entry types. Just because you call this function it
      is therefore not guaranteed to make a log entry.

   INPUTS
      err      The error code for the log entry. No specific error codes
               have been defined at this time. Only the following general
               error codes are valid:
                  -1    Error entry
                   0    Information entry
                   1    Warning entry

      context  A string describing the context in which the log entry is
               generated. This could be the name of the function from which
               the log entry is created, or an indication of the process
               during which the log entry is being created.

      msg      The actual log message.


   RESULT
     -none-

   SEE ALSO
      LogFmt()

screenblanker.library/OpenBlankerModulecreenblanker.library/OpenBlankerModule

   NAME
      OpenBlankerModule -- Loading of a Blanker Module.

   SYNOPSIS
      result = OpenBlankerModuleA( name, taglist );

      BOOL   = OpenBlankerModuleA( CONST_STRPTR, struct TagItem * );


      result = OpenBlankerModule( name, ... );

      BOOL   = OpenBlankerModule( CONST_STRPTR, ... );


   FUNCTION

   INPUTS


   RESULT
     result = TRUE if module got loaded other vice FALSE.

   SEE ALSO
      CloseBlankerModule()

screenblanker.library/SetBlankingMode   screenblanker.library/SetBlankingMode

   NAME
      SetBlankingMode -- Start and stop of blanking.

   SYNOPSIS
      result = SetBlankingMode( mode );

      BOOL   = SetBlankingMode( uint32 );


   FUNCTION

   INPUTS


   RESULT
     result = TRUE if mode switch worked out other vice FALSE.

   SEE ALSO

screenblanker.library/SetScreenBlankerAttrsnker.library/SetScreenBlankerAttrs

   NAME
      SetScreenBlankerAttrs -- Change of blamking settings.

   SYNOPSIS
      result = SetScreenBlankerAttrsA( taglist );

      uint32 = SetScreenBlankerAttrsA( struct TagItem * );


      result = SetScreenBlankerAttrs( ... );

      uint32 = SetScreenBlankerAttrs( ... );


   FUNCTION

   INPUTS


   RESULT
     result = The number of Attributes that got Handled.

   NOTES
     Before v53.4 this function return TRUE/FALSE instead of the number
     of handled tags.

   SEE ALSO
      GetScreenBlankerAttrs()

