TABLE OF CONTENTS

fuelgauge.gadget/--datasheet--
fuelgauge.gadget/FUELGAUGE_GetClass
fuelgauge.gadget/--datasheet--                 fuelgauge.gadget/--datasheet--

    NAME
	fuelgauge.gadget -- Create fuelgauge BOOPSI objects

    SUPERCLASS
	gadgetclass

    REQUIRES
	bevel.image, gaugeiclass

    DESCRIPTION
	The fuelgauge gadget class is used to display stage of completion
	of some operation such as formatting or downloading. Or perhaps as
	a means of indication, such as free drive space.

    METHODS
	OM_NEW -- Create the gadget. Passed to superclass first.

	OM_DISPOSE -- Delete the gadget.

	OM_SET -- Set object attributes. Passed to superclass first.

	OM_UPDATE -- Set object notification attributes.
	             Passed to superclass first.

	GM_RENDER -- Renders the gadget imagery.

	GM_HITTEST -- Always returns 0.

	GM_DOMAIN -- Obtain the minimum, nominal and maximum size.

	GM_LAYOUT -- Calculate relative gadget coordinates.

	GM_HELPTEST -- Determine if gadget help was hit.

	GM_EXTENT -- Reports gadget rendering extent.

	GM_CLIPRECT -- Installs ClipRect for virtual group support.

	All other methods are passed to the superclass.

    ATTRIBUTES
	GA_Text (CONST_STRPTR)
	    Used to specify the NULL terminated string to use as the
	    text for the gadget. The Text() function is used to render
	    the text. NULL is valid input and will enable the default
	    centered percentage rendering.

	    Changing the label will invoke GM_RENDER. The text string
	    is clipped to fit inside the gauge. The text string may
	    contain varargs format specifiers compatible with RawDoFmt()
	    if the varargs data is supplied via FUELGAUGE_VarArgs.

	    Do not forget to disable percentage display with the
	    FUELGAUGE_Percent tag or your text will not appear.

	    Applicability is (OM_NEW, OM_SET, OM_GET, OM_UPDATE)

	GA_TextAttr (struct TextAttr *)
	    Font to use for the gadget text.

	    Defaults to the screen's font.

	    Applicability is (OM_NEW, OM_SET, OM_GET)

	GA_BackFill (struct Hook *)
	    A layer backfill hook to provide a more complex
	    background pattern. See InstallLayerHook() for
	    more details about the backfill hook.

	    Defaults to NULL.

	    Applicability is (OM_NEW, OM_SET)

	GA_HintInfo (CONST_STRPTR)
	    Specify the text to use as the hint info for this gadget.
	    You can change this attribute at any time, and it will over-
	    ride any text specified in the windows HintInfo array.

	    Defaults to NULL.

	    Applicability is (OM_NEW, OM_SET).

	FUELGAUGE_Min (int32)
	    Minimum value of the gauge.

	    Applicability is (OM_NEW, OM_SET, OM_GET, OM_UPDATE)

	FUELGAUGE_Max (int32)
	    Maximum value of the gauge.

	    Applicability is (OM_NEW, OM_SET, OM_GET, OM_UPDATE)

	FUELGAUGE_Level (int32)
	    Current gauge setting, usually something between Min and Max.
	    Based on Min, Max and Current a percentage can be calculated
	    and displayed by the gadget.

	    Applicability is (OM_NEW, OM_SET, OM_GET, OM_UPDATE)

	FUELGAUGE_Orientation (int16)
	    Sets the orientation of the fuel gauge to vertical or
	    horizontal.

	    Accepted values as defined in <gadgets/fuelgauge.h> are:
	      FGORIENT_HORIZ
	      FGORIENT_VERT

	    Defaults to FGORIENT_HORIZ.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_Percent (BOOL)
	    Enable/Disable Percentage display. Percentage is displayed
	    in the center of the gauge using the requested font,
	    provided it fits within the gadget bounds.

	    Percentage overrides the GA_Text text display.

	    Defaults to TRUE.

	    Applicability is (OM_NEW, OM_SET, OM_GET, OM_UPDATE)

	FUELGAUGE_Ticks (int16)
	    Sets the number of "tickmarks" rendered along the bottom
	    of the gadget. Take note that the tickmarks are rendered
	    within the gadgets size dimensions. Values greater than
	    0 enable the tick mark(s).

	    Defaults to 4.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_ShortTicks (BOOL)
	    Enables rendering of "short ticks", smaller size tickmarks
	    rendered in between the larger tick marks.

	    Defaults to FALSE,

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_TickSize (int16)
	    Sets the size, in pixels, of the large tickmarks.
	    Short tick size is TickHeight / 2.

	    NOTE: If not setting FUELGAUGE_Ticks non-zero, then you
	    may need to 0 this as well depending on the fuelgauge
	    release version.

	    Defaults to 5 pixels

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_TickPen (int16)
	    Pen number used to render the tickmarks.

	    Note: Not currently implemented.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_PercentPen (int16)
	    Pen number used to render the percentage text label.

	    Defaults to TEXTPEN.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_EmptyPen (int16)
	    Pen number used to render the empty section of the gauge.

	    Defaults to BACKGROUNDPEN.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_FillPen (int16)
	    Pen number used to render the filled section of the gauge.

	    Defaults to BACKGROUNDPEN.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_VarArgs (APTR)
	    Varargs data array to supply data for RawDoFmt() when
	    format specifiers are to be used in GA_Text text strings.
	    The VarArgs internal result buffer is 256 bytes, take care
	    not to exceed this buffer.

	    Defaults to NULL.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

	FUELGAUGE_Justification (int16)
	    Justification mode of fuelgauge (GA_Text) text label.
	    Percentage rendering, when enabled, is always centered.

	    Supports:
	      FGJ_LEFT
	      FGJ_CENTER

	    Defaults to FGJ_LEFT.

	    Applicability is (OM_NEW, OM_SET, OM_UPDATE)

fuelgauge.gadget/FUELGAUGE_GetClass       fuelgauge.gadget/FUELGAUGE_GetClass

    NAME
	FUELGAUGE_GetClass -- Gets pointer to the fuelgauge class.

    SYNOPSIS
	Class * class = FUELGAUGE_GetClass();

    FUNCTION
	This function is deprecated as of V52.
	Use the "fuelgauge.gadget" public class ID instead.

    RESULT
	class - Pointer to the fuelgauge class.

