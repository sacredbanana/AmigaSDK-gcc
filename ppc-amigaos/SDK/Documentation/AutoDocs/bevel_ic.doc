TABLE OF CONTENTS

bevel.image/--datasheet--
bevel.image/BEVEL_GetClass
bevel.image/--datasheet--                           bevel.image/--datasheet--

    NAME
	bevel.image - Bevel image class.

    SUPERCLASS
	imageclass

    REQUIRES
	frameiclass

    DESCRIPTION
	This image class can create a varity of bevel boxes styles
	including those appropriate as gadget borders, titled or
	non-titled grouping boxes and more. This class is very similar
	in function to the frameiclass.

    BEVEL STYLE
	Several BOOPSI objects allow overriding the default bevel
	style. This is NOT recommended practice for application authors.
	But instead, its provided to add some extra flexability to BOOPSI
	class authors who may wish to sub-class a gadget or utilize it
	within a larger composite (model class) object.

	When using bevel.image directly be sure to select the appropriate
	bevel for your usage. Do not provide a bevel style override tag
	unless it makes sence to do so. The idea being that all applications
	and BOOPSI objects should be presented using a standard beveling
	style. For example, a button gadget using a BVS_FIELD string bevel
	would be an illogical choice. Any button should use BVS_BUTTON, a
	text entry field should use BVS_FIELD and of course a layout group,
	if using a bevel, should use BVS_GROUP, BVS_SBAR_VERT or
	BVS_SBAR_HORIZ.

    METHODS
	OM_NEW -- Create the bevel image. Passed to superclass then OM_SET.

	OM_DISPOSE -- Destroys the bevel image.

	OM_GET -- Get object attributes. Passed to superclass first.

	OM_SET -- Set object attributes. Passed to superclass first.

	IM_FRAMEBOX -- Gets the recommended frame.

	IM_DRAW -- Renders the images. Overrides the superclass.

	IM_DRAWFRAME -- Renders the images at the frame size.
	                Any following IM_DRAW will be at this frame size
	                without overriding OM_SET. Overrides the superclass.

	IM_ERASE -- Erase the image. Overrides the superclass.

	IM_ERASEFRAME -- Erase the images at the frame size.
	                 Overrides the superclass.

	IM_EXTENT -- Inquire about rendering extent.

	IM_EXTENTFRAME -- Inquire about rendering extent with dimensions.

	All other methods are passed to the superclass.

    ATTRIBUTES
	IA_Top (int16)
	IA_Left (int16)
	IA_Width (int16)
	IA_Height (int16)
	    Set bevel image size and position.

	    Applicability is (OM_NEW, OM_SET)

	IA_SupportsDisable (BOOL)
	    Reports TRUE if the image class can render its own
	    disable pattern.

	    Applicability is (OM_GET)

	IA_Scalable (BOOL)
	    Reports TRUE if the image class is scalable.

	    Applicability is (OM_GET)

	IA_APattern (uint16 *)
	    Optional inner fill pattern for SetAfPt() when used in
	    conjunction with BEVEL_FillPen. See also BEVEL_FillPattern.
	    Functionality is duplicated in BEVEL_FillPattern which will
	    remain for backwards compatibility.

	    Defaults to NULL.

	    Applicability is (OM_NEW, OM_SET)

	IA_APatSize (uint16)
	    Set pattern size for the pattern passed via IA_APattern.
	    With the deprecated BEVEL_FillPattern, the size was fixed.

	    Defaults to 1.

	    Applicability is (OM_NEW, OM_SET)

	IA_Recessed (BOOL)
	    Inverts SHADOW/SHINEPEN and shading rendering pens.

	    Applicability is (OM_NEW, OM_SET)

	IA_EdgesOnly (BOOL)
	    See BEVEL_Transparent.

	    Applicability is (OM_NEW, OM_SET)

	IA_FrameType (uint16)
	    Accepts all frameiclass frame types and converts them
	    the closest matching BEVEL_Style type honoring the current
	    user preference settings.

	    Applicability is (OM_SET)

	IA_Font (struct TextAttr *)
	    Text Attribute to use for any label text.

	    Applicability is (OM_NEW, OM_SET, OM_GET)

	IA_HighlightPen (uint16)
	IA_FGPen (uint16)
	    Foreground pen.

	    Defaults to SHINEPEN.

	    Applicability is (OM_NEW, OM_SET)

	IA_ShadowPen (uint16)
	IA_BGPen (uint16)
	    Background pen.

	    Defaults to SHADOWPEN.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_FillPen (uint16)
	    Inner bevel area RectFill() pen number, ~0 means to
	    ignore and not to RectFill().

	    Defaults to ~0.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_FillPattern (uint16 *)
	    Optional inner fill pattern for SetAfPt() when used in
	    conjunction with BEVEL_FillPen. See also IA_APattern.

	    Defaults to NULL.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_TextPen (uint16)
	    Bevel text rendering pen number, ~0 will render
	    in TEXTPEN.

	    Defaults to ~0.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_Style (uint16)
	    Specifies the bevel box style, may be one of the following:

	      BVS_THIN       - thin/small bevel
	      BVS_BUTTON     - standard button bevel (thin/thick pref)
	      BVS_GROUP      - layout/grouping bevel (thin/thick pref)
	      BVS_FIELD      - string/inputfield bevel (thin/thick pref)
	      BVS_NONE       - no bevel
	      BVS_DROPBOX    - standard dropbox
	      BVS_SBAR_HORIZ - vertical separator bar
	      BVS_SBAR_VERT  - horizontal separator bar
	      BVS_BOX        - plain "black" box bevel
	      BVS_STANDARD   - Simular to BVS_BUTTON, but no XEN!
	      BVS_CONTAINER  - scroller container
	      BVS_KNOB       - scroller knob
	      BVS_DISPLAY    - read-only area

	    Defaults to BVS_BUTTON

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_Label (CONST_STRPTR)
	    Specifies the text label for the bevel box.

	    Defaults to NULL.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_LabelPlace (uint32)
	    Specifies label location, may be one of the following;

	      BVJ_TOP_CENTER
	      BVJ_TOP_LEFT
	      BVJ_TOP_RIGHT
	      BVJ_IN_CENTER
	      BVJ_IN_LEFT
	      BVJ_IN_RIGHT
	      BVJ_BOT_CENTER - not yet implemented
	      BVJ_BOT_LEFT   - not yet implemented
	      BVJ_BOT_RIGHT  - not yet implemented

	    Defaults to BVJ_TOP_CENTER.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_InnerTop (int16)
	    Get only attribute, returns the inside-top offset of the
	    bevel box accounting for any BVJ_TOP text label placements.

	    Applicability is (OM_GET)

	BEVEL_InnerLeft (int16)
	    Get only attribute, returns the inside-left offset of the
	    bevel box.

	    Applicability is (OM_GET)

	BEVEL_InnerWidth (int16)
	    Get only attribute, returns the inside-width of the
	    bevel box, basically the same as:

	      IA_Width - (BEVEL_VertSize * 2) - 1

	    Except this also accounts for the BVS_TOP label placements.

	    Applicability is (OM_GET)

	BEVEL_InnerHeight (int16)
	    Get only attribute, returns the inside - height of the
	    bevel box, basically the same as:

	      IA_Height - (BEVEL_InnerTop + BEVEL_HorzSize) - 1

	    with the exception that BEVEL_InnerHeight will account for
	    any text label for a BVS_GROUP style bevel.

	    Applicability is (OM_GET)

	BEVEL_HorizSize (int16)
	    Get only attribute, returns the nominal size (in pixels) of
	    the horizontal lines the bevel will draw for the givel style.

	    Applicability is (OM_GET)

	BEVEL_VertSize (int16)
	    Get only attribute, returns the nominal size (in pixels) of
	    the vertical lines the bevel will draw for the given style.

	    Applicability is (OM_GET)

	BEVEL_SoftStyle (int16)
	    Font softstyles to apply.
	    See <graphics/text.h> for soft style definitions.

	    Defaults to 0.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_Transparent (BOOL)
	    If set TRUE, bevel will not attempt to render or erase any
	    part of the inner area of the bevel.

	    Defaults to FALSE.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_ColorMap (struct ColorMap *)
	    Screen viewport colormap pointer, use to obtain additional
	    best-match pens for XEN and possibly other future multi-pen
	    beveling options. MWB or NI3 palette recommended for best
	    results.

	    Defaults to NULL.

	    Applicability is (OM_NEW, OM_SET)

	BEVEL_Flags (uint16)
	    Intentionally left undocumented! It is used for some hidden
	    BVS_BUTTON xen style magic. Class authors inquire as needed.

	    Defaults to 0.

	    Applicability is (OM_NEW, OM_SET)

bevel.image/BEVEL_GetClass                         bevel.image/BEVEL_GetClass

    NAME
	BEVEL_GetClass -- Gets pointer to the bevel class.

    SYNOPSIS
	Class * class = BEVEL_GetClass();

    FUNCTION
	This function is deprecated as of V52.
	Use the "bevel.image" public class ID instead.

    RESULT
	class - Pointer to the bevel class.

