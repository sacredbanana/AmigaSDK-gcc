TABLE OF CONTENTS

page.gadget/--datasheet--
page.gadget/PAGE_GetClass
page.gadget/RefreshPageGadget
page.gadget/SetPageGadgetAttrsA


page.gadget/--datasheet--                           page.gadget/--datasheet--

    NAME
    page.gadget -- Gadget for easy creation of GUI pages.

    SUPERCLASS
    gadgetclass

    DESCRIPTION
    Page gadget takes a list of BOOPSI objects and treats each as a
    single page of a multi-page GUI group. Used together with
    clicktab.gadget and layout.gadget, it allows complex GUI layouts
    with hidden objects with virtually no work for the developer.

    This gadget class is contained within the layout.gadget binary.
    Thus, you will need to OpenClass() layout.gadget but not
    page.gadget.

    METHODS
    OM_NEW -- Passed to superclass, defaults set then OM_SET.

    OM_DISPOSE -- Memory freed then passed to superclass.

    OM_SET -- Custom tags set then passed to superclass.

    OM_GET -- Custom tag returned or passed to superclass.

    OM_UPDATE -- Custom tags set then passed to superclass.

    OM_NOTIFY -- Tag set then passed to superclass.

    GM_RENDER -- Passed to superclass then rendered.

    GM_DOMAIN -- Returns the specified dimensions.

    GM_LAYOUT -- Calculates the relative gadget coordinates.

    GM_EXTENT -- Reports gadget rendering extent.

    GM_CLIPRECT -- Installs ClipRect for virtual group support.

    DTM_PROCLAYOUT -- Like GM_LAYOUT but passes DTM_PROCLAYOUT
                      forward. Useful if the layout group contains
                      only datatype objects.

    All other methods are passed to the currently visible object.

    ATTRIBUTES
    PAGE_Add (Object *)
        A BOOPSI gadget (probably a layout.gadget) to add to the end of
        the page list.

        Applicability is (OM_NEW, OM_SET)

    PAGE_Remove (Object *)
        Pointer to a gadget to remove from the page list. page.gadget
        will automatically dispose all attached objects when disposed of.

        Applicability is (OM_SET)

    PAGE_Current (uint32)
        Sets/gets the currently visible page. Note that OM_SET will not
        trigger a rerender, call RethinkLayout() afterwards. OM_UPDATE
        will rerender automatically.

        Applicability is (OM_NEW, OM_SET, OM_UPDATE)

    PAGE_FixedVert (BOOL)
    PAGE_FixedHoriz (BOOL)
        Like the respective tags of layout.gadget, these will, if set
        to FALSE, force the group's dimensions to the smallest possible
        in the respective direction.

        Applicability is (OM_NEW, OM_SET, OM_UPDATE)

    PAGE_NoDispose (BOOL) (V53.22)
        Set the to True if you do not want the Objects to be Disposed.

        Applicability is (OM_NEW, OM_SET, OM_UPDATE)

    PAGE_CurrentObject (Object *) (V54.9)
        Sets/gets the currently visible page by the associated object
        pointer. Note that OM_SET will not trigger a rerender, call
        RethinkLayout() afterwards. OM_UPDATE will rerender automatically.

        Applicability is (OM_NEW, OM_SET, OM_UPDATE)

    SEE ALSO
    layout.gadget, intuition.library/OpenClass()

page.gadget/PAGE_GetClass                           page.gadget/PAGE_GetClass

    NAME
    PAGE_GetClass -- Gets pointer to the page class.

    SYNOPSIS
    Class * class = PAGE_GetClass();

    FUNCTION
    This function is deprecated as of V52.
    Use the "page.gadget" public class ID instead.

    NOTES
    PAGE_GetClass() is contained in layout.gadget.
    There is no PageBase, just LayoutBase.

    RESULT
    class - Pointer to the page class.

page.gadget/RefreshPageGadget                   page.gadget/RefreshPageGadget

    NAME
    RefreshPageGadget -- Refresh gadget in a paged layout.

    SYNOPSIS
    void RefreshPageGadget(struct Gadget *gad, Object *page,
                           struct Window *win, struct Requester *req);

    FUNCTION
    Performs a RefreshGList( gad, win, req, 1 ) if the gadget is on
    the currently visible page.

page.gadget/SetPageGadgetAttrsA               page.gadget/SetPageGadgetAttrsA

    NAME
    SetPageGadgetAttrsA -- Set gadget attributes in a paged layout.

    SYNOPSIS
    uint32 SetPageGadgetAttrsA(struct Gadget *gad, Object *page,
                               struct Window *win, struct Requester *req,
                               struct TagItem *tags);

    uint32 SetPageGadgetAttrs(struct Gadget *gad, Object *page,
                              struct Window *win, struct Requester *req,
                              Tag tag, ...);

    FUNCTION
    Like SetGadgetAttrs() but passes a NULL window and requester
    pointer if the gadget is not on the currently visible page.

