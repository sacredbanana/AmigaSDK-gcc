#ifndef GRAPHICS_INTERFACE_DEF_H
#define GRAPHICS_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.23.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef GRAPHICS_BLITATTR_H
#include <graphics/blitattr.h>
#endif
#ifndef GRAPHICS_BOARD_H
#include <graphics/board.h>
#endif
#ifndef GRAPHICS_CLIP_H
#include <graphics/clip.h>
#endif
#ifndef GRAPHICS_COERCE_H
#include <graphics/coerce.h>
#endif
#ifndef GRAPHICS_COLLIDE_H
#include <graphics/collide.h>
#endif
#ifndef GRAPHICS_COMPOSITE_H
#include <graphics/composite.h>
#endif
#ifndef GRAPHICS_COPPER_H
#include <graphics/copper.h>
#endif
#ifndef GRAPHICS_DISPLAY_H
#include <graphics/display.h>
#endif
#ifndef GRAPHICS_DISPLAYINFO_H
#include <graphics/displayinfo.h>
#endif
#ifndef GRAPHICS_GELS_H
#include <graphics/gels.h>
#endif
#ifndef GRAPHICS_GFX_H
#include <graphics/gfx.h>
#endif
#ifndef GRAPHICS_GFXBASE_H
#include <graphics/gfxbase.h>
#endif
#ifndef GRAPHICS_GFXMACROS_H
#include <graphics/gfxmacros.h>
#endif
#ifndef GRAPHICS_GFXNODES_H
#include <graphics/gfxnodes.h>
#endif
#ifndef GRAPHICS_GRAPHINT_H
#include <graphics/graphint.h>
#endif
#ifndef GRAPHICS_LAYERS_H
#include <graphics/layers.h>
#endif
#ifndef GRAPHICS_MINTERM_H
#include <graphics/minterm.h>
#endif
#ifndef GRAPHICS_MODEID_H
#include <graphics/modeid.h>
#endif
#ifndef GRAPHICS_MONITOR_H
#include <graphics/monitor.h>
#endif
#ifndef GRAPHICS_RASTPORT_H
#include <graphics/rastport.h>
#endif
#ifndef GRAPHICS_REGIONS_H
#include <graphics/regions.h>
#endif
#ifndef GRAPHICS_RPATTR_H
#include <graphics/rpattr.h>
#endif
#ifndef GRAPHICS_SCALE_H
#include <graphics/scale.h>
#endif
#ifndef GRAPHICS_SPRITE_H
#include <graphics/sprite.h>
#endif
#ifndef GRAPHICS_SPRITE_H
#include <graphics/sprite.h>
#endif
#ifndef GRAPHICS_TEXT_H
#include <graphics/text.h>
#endif
#ifndef GRAPHICS_VIDEOCONTROL_H
#include <graphics/videocontrol.h>
#endif
#ifndef GRAPHICS_VIEW_H
#include <graphics/view.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct GraphicsIFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct GraphicsIFace *Self);
	ULONG APICALL (*Release)(struct GraphicsIFace *Self);
	APTR Expunge_UNIMPLEMENTED;
	APTR Clone_UNIMPLEMENTED;
	ULONG APICALL (*BltBitMap)(struct GraphicsIFace *Self, CONST struct BitMap * srcBitMap, WORD xSrc, WORD ySrc, struct BitMap * destBitMap, WORD xDest, WORD yDest, WORD xSize, WORD ySize, UBYTE minterm, UBYTE mask, PLANEPTR tempA);
	VOID APICALL (*BltTemplate)(struct GraphicsIFace *Self, CONST PLANEPTR source, WORD xSrc, WORD srcMod, struct RastPort * destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize);
	VOID APICALL (*ClearEOL)(struct GraphicsIFace *Self, struct RastPort * rp);
	VOID APICALL (*ClearScreen)(struct GraphicsIFace *Self, struct RastPort * rp);
	WORD APICALL (*TextLength)(struct GraphicsIFace *Self, struct RastPort * rp, CONST_STRPTR string, UWORD count);
	VOID APICALL (*Text)(struct GraphicsIFace *Self, struct RastPort * rp, CONST_STRPTR string, UWORD count);
	VOID APICALL (*SetFont)(struct GraphicsIFace *Self, struct RastPort * rp, struct TextFont * textFont);
	struct TextFont * APICALL (*OpenFont)(struct GraphicsIFace *Self, CONST struct TextAttr * textAttr);
	VOID APICALL (*CloseFont)(struct GraphicsIFace *Self, struct TextFont * textFont);
	ULONG APICALL (*AskSoftStyle)(struct GraphicsIFace *Self, struct RastPort * rp);
	ULONG APICALL (*SetSoftStyle)(struct GraphicsIFace *Self, struct RastPort * rp, ULONG style, ULONG enable);
	VOID APICALL (*AddBob)(struct GraphicsIFace *Self, struct Bob * bob, struct RastPort * rp);
	VOID APICALL (*AddVSprite)(struct GraphicsIFace *Self, struct VSprite * vSprite, struct RastPort * rp);
	VOID APICALL (*DoCollision)(struct GraphicsIFace *Self, struct RastPort * rp);
	VOID APICALL (*DrawGList)(struct GraphicsIFace *Self, struct RastPort * rp, struct ViewPort * vp);
	VOID APICALL (*InitGels)(struct GraphicsIFace *Self, struct VSprite * head, struct VSprite * tail, struct GelsInfo * gelsInfo);
	VOID APICALL (*InitMasks)(struct GraphicsIFace *Self, struct VSprite * vSprite);
	VOID APICALL (*RemIBob)(struct GraphicsIFace *Self, struct Bob * bob, struct RastPort * rp, struct ViewPort * vp);
	VOID APICALL (*RemVSprite)(struct GraphicsIFace *Self, struct VSprite * vSprite);
	VOID APICALL (*SetCollision)(struct GraphicsIFace *Self, ULONG num, VOID (*routine)(struct VSprite *gelA, struct VSprite *gelB), struct GelsInfo * gelsInfo);
	VOID APICALL (*SortGList)(struct GraphicsIFace *Self, struct RastPort * rp);
	VOID APICALL (*AddAnimOb)(struct GraphicsIFace *Self, struct AnimOb * anOb, struct AnimOb ** anKey, struct RastPort * rp);
	VOID APICALL (*Animate)(struct GraphicsIFace *Self, struct AnimOb ** anKey, struct RastPort * rp);
	BOOL APICALL (*GetGBuffers)(struct GraphicsIFace *Self, struct AnimOb * anOb, struct RastPort * rp, BOOL flag);
	VOID APICALL (*InitGMasks)(struct GraphicsIFace *Self, struct AnimOb * anOb);
	VOID APICALL (*DrawEllipse)(struct GraphicsIFace *Self, struct RastPort * rp, WORD xCenter, WORD yCenter, WORD a, WORD b);
	LONG APICALL (*AreaEllipse)(struct GraphicsIFace *Self, struct RastPort * rp, WORD xCenter, WORD yCenter, WORD a, WORD b);
	VOID APICALL (*LoadRGB4)(struct GraphicsIFace *Self, struct ViewPort * vp, CONST UWORD * colors, UWORD count);
	VOID APICALL (*InitRastPort)(struct GraphicsIFace *Self, struct RastPort * rp);
	VOID APICALL (*InitVPort)(struct GraphicsIFace *Self, struct ViewPort * vp);
	ULONG APICALL (*MrgCop)(struct GraphicsIFace *Self, struct View * view);
	ULONG APICALL (*MakeVPort)(struct GraphicsIFace *Self, struct View * view, struct ViewPort * vp);
	VOID APICALL (*LoadView)(struct GraphicsIFace *Self, struct View * view);
	VOID APICALL (*WaitBlit)(struct GraphicsIFace *Self);
	VOID APICALL (*SetRast)(struct GraphicsIFace *Self, struct RastPort * rp, UBYTE pen);
	VOID APICALL (*Move)(struct GraphicsIFace *Self, struct RastPort * rp, WORD x, WORD y);
	VOID APICALL (*Draw)(struct GraphicsIFace *Self, struct RastPort * rp, WORD x, WORD y);
	LONG APICALL (*AreaMove)(struct GraphicsIFace *Self, struct RastPort * rp, WORD x, WORD y);
	LONG APICALL (*AreaDraw)(struct GraphicsIFace *Self, struct RastPort * rp, WORD x, WORD y);
	LONG APICALL (*AreaEnd)(struct GraphicsIFace *Self, struct RastPort * rp);
	VOID APICALL (*WaitTOF)(struct GraphicsIFace *Self);
	VOID APICALL (*QBlit)(struct GraphicsIFace *Self, struct bltnode * blit);
	VOID APICALL (*InitArea)(struct GraphicsIFace *Self, struct AreaInfo * areaInfo, APTR vectorBuffer, WORD maxVectors);
	VOID APICALL (*SetRGB4)(struct GraphicsIFace *Self, struct ViewPort * vp, UWORD colindex, UBYTE red, UBYTE green, UBYTE blue);
	VOID APICALL (*QBSBlit)(struct GraphicsIFace *Self, struct bltnode * blit);
	VOID APICALL (*BltClear)(struct GraphicsIFace *Self, PLANEPTR memBlock, ULONG byteCount, ULONG flags);
	void APICALL (*RectFill)(struct GraphicsIFace *Self, struct RastPort * rp, int16 xMin, int16 yMin, int16 xMax, int16 yMax);
	VOID APICALL (*BltPattern)(struct GraphicsIFace *Self, struct RastPort * rp, CONST PLANEPTR mask, WORD xMin, WORD yMin, WORD xMax, WORD yMax, UWORD maskBPR);
	int32 APICALL (*ReadPixel)(struct GraphicsIFace *Self, struct RastPort * rp, int16 x, int16 y);
	int32 APICALL (*WritePixel)(struct GraphicsIFace *Self, struct RastPort * rp, int16 x, int16 y);
	BOOL APICALL (*Flood)(struct GraphicsIFace *Self, struct RastPort * rp, ULONG mode, WORD x, WORD y);
	VOID APICALL (*PolyDraw)(struct GraphicsIFace *Self, struct RastPort * rp, WORD count, CONST WORD * polyTable);
	VOID APICALL (*SetAPen)(struct GraphicsIFace *Self, struct RastPort * rp, UBYTE pen);
	VOID APICALL (*SetBPen)(struct GraphicsIFace *Self, struct RastPort * rp, UBYTE pen);
	VOID APICALL (*SetDrMd)(struct GraphicsIFace *Self, struct RastPort * rp, UBYTE drawMode);
	VOID APICALL (*InitView)(struct GraphicsIFace *Self, struct View * view);
	VOID APICALL (*CBump)(struct GraphicsIFace *Self, struct UCopList * copList);
	VOID APICALL (*CMove)(struct GraphicsIFace *Self, struct UCopList * copList, WORD destoffset, WORD data);
	VOID APICALL (*CWait)(struct GraphicsIFace *Self, struct UCopList * copList, WORD v, WORD h);
	LONG APICALL (*VBeamPos)(struct GraphicsIFace *Self);
	VOID APICALL (*InitBitMap)(struct GraphicsIFace *Self, struct BitMap * bitMap, BYTE depth, UWORD width, UWORD height);
	VOID APICALL (*ScrollRaster)(struct GraphicsIFace *Self, struct RastPort * rp, WORD dx, WORD dy, WORD xMin, WORD yMin, WORD xMax, WORD yMax);
	VOID APICALL (*WaitBOVP)(struct GraphicsIFace *Self, struct ViewPort * vp);
	WORD APICALL (*GetSprite)(struct GraphicsIFace *Self, struct SimpleSprite * sprite, WORD num);
	VOID APICALL (*FreeSprite)(struct GraphicsIFace *Self, WORD num);
	VOID APICALL (*ChangeSprite)(struct GraphicsIFace *Self, struct ViewPort * vp, struct SimpleSprite * sprite, APTR newData);
	VOID APICALL (*MoveSprite)(struct GraphicsIFace *Self, struct ViewPort * vp, struct SimpleSprite * sprite, WORD x, WORD y);
	VOID APICALL (*LockLayerRom)(struct GraphicsIFace *Self, struct Layer * layer);
	VOID APICALL (*UnlockLayerRom)(struct GraphicsIFace *Self, struct Layer * layer);
	VOID APICALL (*SyncSBitMap)(struct GraphicsIFace *Self, struct Layer * layer);
	VOID APICALL (*CopySBitMap)(struct GraphicsIFace *Self, struct Layer * layer);
	VOID APICALL (*OwnBlitter)(struct GraphicsIFace *Self);
	VOID APICALL (*DisownBlitter)(struct GraphicsIFace *Self);
	struct TmpRas * APICALL (*InitTmpRas)(struct GraphicsIFace *Self, struct TmpRas * tmpRas, PLANEPTR buffer, int32 size);
	VOID APICALL (*AskFont)(struct GraphicsIFace *Self, struct RastPort * rp, struct TextAttr * textAttr);
	VOID APICALL (*AddFont)(struct GraphicsIFace *Self, struct TextFont * textFont);
	VOID APICALL (*RemFont)(struct GraphicsIFace *Self, struct TextFont * textFont);
	PLANEPTR APICALL (*AllocRaster)(struct GraphicsIFace *Self, UWORD width, UWORD height);
	VOID APICALL (*FreeRaster)(struct GraphicsIFace *Self, PLANEPTR p, UWORD width, UWORD height);
	VOID APICALL (*AndRectRegion)(struct GraphicsIFace *Self, struct Region * region, CONST struct Rectangle * rectangle);
	BOOL APICALL (*OrRectRegion)(struct GraphicsIFace *Self, struct Region * region, CONST struct Rectangle * rectangle);
	struct Region * APICALL (*NewRegion)(struct GraphicsIFace *Self);
	BOOL APICALL (*ClearRectRegion)(struct GraphicsIFace *Self, struct Region * region, CONST struct Rectangle * rectangle);
	VOID APICALL (*ClearRegion)(struct GraphicsIFace *Self, struct Region * region);
	VOID APICALL (*DisposeRegion)(struct GraphicsIFace *Self, struct Region * region);
	VOID APICALL (*FreeVPortCopLists)(struct GraphicsIFace *Self, struct ViewPort * vp);
	VOID APICALL (*FreeCopList)(struct GraphicsIFace *Self, struct CopList * copList);
	VOID APICALL (*ClipBlit)(struct GraphicsIFace *Self, struct RastPort * srcRP, WORD xSrc, WORD ySrc, struct RastPort * destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize, UBYTE minterm);
	BOOL APICALL (*XorRectRegion)(struct GraphicsIFace *Self, struct Region * region, CONST struct Rectangle * rectangle);
	VOID APICALL (*FreeCprList)(struct GraphicsIFace *Self, struct cprlist * cprList);
	struct ColorMap * APICALL (*GetColorMap)(struct GraphicsIFace *Self, UWORD entries);
	VOID APICALL (*FreeColorMap)(struct GraphicsIFace *Self, struct ColorMap * colorMap);
	LONG APICALL (*GetRGB4)(struct GraphicsIFace *Self, struct ColorMap * colorMap, UWORD entry);
	VOID APICALL (*ScrollVPort)(struct GraphicsIFace *Self, struct ViewPort * vp);
	struct CopList * APICALL (*UCopperListInit)(struct GraphicsIFace *Self, struct UCopList * uCopList, WORD n);
	VOID APICALL (*FreeGBuffers)(struct GraphicsIFace *Self, struct AnimOb * anOb, struct RastPort * rp, BOOL flag);
	BOOL APICALL (*BltBitMapRastPort)(struct GraphicsIFace *Self, CONST struct BitMap * srcBitMap, WORD xSrc, WORD ySrc, struct RastPort * destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize, UBYTE minterm);
	BOOL APICALL (*OrRegionRegion)(struct GraphicsIFace *Self, CONST struct Region * srcRegion, struct Region * destRegion);
	BOOL APICALL (*XorRegionRegion)(struct GraphicsIFace *Self, CONST struct Region * srcRegion, struct Region * destRegion);
	BOOL APICALL (*AndRegionRegion)(struct GraphicsIFace *Self, CONST struct Region * srcRegion, struct Region * destRegion);
	VOID APICALL (*SetRGB4CM)(struct GraphicsIFace *Self, struct ColorMap * colorMap, UWORD colindex, UBYTE red, UBYTE green, UBYTE blue);
	VOID APICALL (*BltMaskBitMapRastPort)(struct GraphicsIFace *Self, struct BitMap * srcBitMap, WORD xSrc, WORD ySrc, struct RastPort * destRP, WORD xDest, WORD yDest, WORD xSize, WORD ySize, UBYTE minterm, PLANEPTR bltMask);
	VOID APICALL (*GfxInternal1)(struct GraphicsIFace *Self);
	VOID APICALL (*GfxInternal2)(struct GraphicsIFace *Self);
	BOOL APICALL (*AttemptLockLayerRom)(struct GraphicsIFace *Self, struct Layer * layer);
	APTR APICALL (*GfxNew)(struct GraphicsIFace *Self, ULONG gfxNodeType);
	VOID APICALL (*GfxFree)(struct GraphicsIFace *Self, struct ExtendedNode * gfxNodePtr);
	VOID APICALL (*GfxAssociate)(struct GraphicsIFace *Self, CONST APTR associateNode, struct ExtendedNode * gfxNodePtr);
	VOID APICALL (*BitMapScale)(struct GraphicsIFace *Self, struct BitScaleArgs * bitScaleArgs);
	UWORD APICALL (*ScalerDiv)(struct GraphicsIFace *Self, UWORD factor, UWORD numerator, UWORD denominator);
	VOID APICALL (*TextExtent)(struct GraphicsIFace *Self, struct RastPort * rp, CONST_STRPTR string, UWORD count, struct TextExtent * textExtent);
	UWORD APICALL (*TextFit)(struct GraphicsIFace *Self, struct RastPort * rp, CONST_STRPTR string, UWORD strLen, struct TextExtent * textExtent, CONST struct TextExtent * constrainingExtent, WORD strDirection, UWORD constrainingBitWidth, UWORD constrainingBitHeight);
	APTR APICALL (*GfxLookUp)(struct GraphicsIFace *Self, CONST APTR associateNode);
	uint32 APICALL (*VideoControl)(struct GraphicsIFace *Self, struct ColorMap * colorMap, struct TagItem * tagarray);
	uint32 APICALL (*VideoControlTags)(struct GraphicsIFace *Self, struct ColorMap * colorMap, ...);
	struct MonitorSpec * APICALL (*OpenMonitor)(struct GraphicsIFace *Self, CONST_STRPTR monitorName, ULONG displayID);
	LONG APICALL (*CloseMonitor)(struct GraphicsIFace *Self, struct MonitorSpec * monitorSpec);
	DisplayInfoHandle APICALL (*FindDisplayInfo)(struct GraphicsIFace *Self, uint32 displayID);
	uint32 APICALL (*NextDisplayInfo)(struct GraphicsIFace *Self, uint32 displayID);
	VOID APICALL (*AddDisplayInfo)(struct GraphicsIFace *Self, APTR displayInfoRecord);
	VOID APICALL (*AddDisplayInfoData)(struct GraphicsIFace *Self, DisplayInfoHandle handle, UBYTE * buf, ULONG size, ULONG tagID, ULONG displayID);
	DisplayInfoHandle APICALL (*SetDisplayInfoData)(struct GraphicsIFace *Self, DisplayInfoHandle handle, APTR buf, uint32 size, Tag tagID, uint32 displayID);
	uint32 APICALL (*GetDisplayInfoData)(struct GraphicsIFace *Self, CONST DisplayInfoHandle handle, APTR buf, uint32 size, Tag tagID, uint32 displayID);
	VOID APICALL (*FontExtent)(struct GraphicsIFace *Self, CONST struct TextFont * font, struct TextExtent * fontExtent);
	int32 APICALL (*ReadPixelLine8)(struct GraphicsIFace *Self, struct RastPort * rp, uint16 xstart, uint16 ystart, uint16 width, uint8 * array, struct RastPort * tempRP);
	int32 APICALL (*WritePixelLine8)(struct GraphicsIFace *Self, struct RastPort * rp, uint16 xstart, uint16 ystart, uint16 width, uint8 * array, struct RastPort * tempRP);
	int32 APICALL (*ReadPixelArray8)(struct GraphicsIFace *Self, struct RastPort * rp, uint16 xstart, uint16 ystart, uint16 xstop, uint16 ystop, uint8 * array, struct RastPort * temprp);
	int32 APICALL (*WritePixelArray8)(struct GraphicsIFace *Self, struct RastPort * rp, uint16 xstart, uint16 ystart, uint16 xstop, uint16 ystop, uint8 * array, struct RastPort * temprp);
	ULONG APICALL (*GetVPModeID)(struct GraphicsIFace *Self, CONST struct ViewPort * vp);
	uint32 APICALL (*ModeNotAvailable)(struct GraphicsIFace *Self, uint32 modeID);
	WORD APICALL (*WeighTAMatch)(struct GraphicsIFace *Self, struct TextAttr * reqTextAttr, struct TextAttr * targetTextAttr, CONST struct TagItem * targetTags);
	WORD APICALL (*WeighTAMatchTags)(struct GraphicsIFace *Self, struct TextAttr * reqTextAttr, struct TextAttr * targetTextAttr, ...);
	VOID APICALL (*EraseRect)(struct GraphicsIFace *Self, struct RastPort * rp, WORD xMin, WORD yMin, WORD xMax, WORD yMax);
	ULONG APICALL (*ExtendFont)(struct GraphicsIFace *Self, struct TextFont * font, CONST struct TagItem * fontTags);
	ULONG APICALL (*ExtendFontTags)(struct GraphicsIFace *Self, struct TextFont * font, ...);
	VOID APICALL (*StripFont)(struct GraphicsIFace *Self, struct TextFont * font);
	UWORD APICALL (*CalcIVG)(struct GraphicsIFace *Self, struct View * v, struct ViewPort * vp);
	LONG APICALL (*AttachPalExtra)(struct GraphicsIFace *Self, struct ColorMap * cm, struct ViewPort * vp);
	LONG APICALL (*ObtainBestPenA)(struct GraphicsIFace *Self, struct ColorMap * cm, ULONG r, ULONG g, ULONG b, CONST struct TagItem * tags);
	LONG APICALL (*ObtainBestPen)(struct GraphicsIFace *Self, struct ColorMap * cm, ULONG r, ULONG g, ULONG b, ...);
	VOID APICALL (*GfxInternal3)(struct GraphicsIFace *Self);
	VOID APICALL (*SetRGB32)(struct GraphicsIFace *Self, struct ViewPort * vp, ULONG n, ULONG r, ULONG g, ULONG b);
	ULONG APICALL (*GetAPen)(struct GraphicsIFace *Self, struct RastPort * rp);
	ULONG APICALL (*GetBPen)(struct GraphicsIFace *Self, struct RastPort * rp);
	ULONG APICALL (*GetDrMd)(struct GraphicsIFace *Self, struct RastPort * rp);
	ULONG APICALL (*GetOutlinePen)(struct GraphicsIFace *Self, struct RastPort * rp);
	VOID APICALL (*LoadRGB32)(struct GraphicsIFace *Self, struct ViewPort * vp, CONST ULONG * table);
	ULONG APICALL (*SetChipRev)(struct GraphicsIFace *Self, ULONG want);
	VOID APICALL (*SetABPenDrMd)(struct GraphicsIFace *Self, struct RastPort * rp, ULONG apen, ULONG bpen, ULONG drawmode);
	VOID APICALL (*GetRGB32)(struct GraphicsIFace *Self, CONST struct ColorMap * cm, UWORD firstcolor, UWORD ncolors, ULONG * table);
	LONG APICALL (*BltBitMapTagList)(struct GraphicsIFace *Self, CONST struct TagItem * tags);
	BOOL APICALL (*SetDefaultMonitor)(struct GraphicsIFace *Self, UWORD mon);
	struct BitMap * APICALL (*AllocBitMap)(struct GraphicsIFace *Self, uint32 sizex, uint32 sizey, uint32 depth, uint32 flags, CONST struct BitMap * friendBitmap);
	VOID APICALL (*FreeBitMap)(struct GraphicsIFace *Self, struct BitMap * bm);
	LONG APICALL (*GetExtSpriteA)(struct GraphicsIFace *Self, struct ExtSprite * ss, CONST struct TagItem * tags);
	LONG APICALL (*GetExtSprite)(struct GraphicsIFace *Self, struct ExtSprite * ss, ...);
	ULONG APICALL (*CoerceMode)(struct GraphicsIFace *Self, struct ViewPort * vp, ULONG monitorid, ULONG flags);
	VOID APICALL (*ChangeVPBitMap)(struct GraphicsIFace *Self, struct ViewPort * vp, struct BitMap * bm, struct DBufInfo * db);
	VOID APICALL (*ReleasePen)(struct GraphicsIFace *Self, struct ColorMap * cm, LONG n);
	LONG APICALL (*ObtainPen)(struct GraphicsIFace *Self, struct ColorMap * cm, LONG n, ULONG r, ULONG g, ULONG b, LONG f);
	uint32 APICALL (*GetBitMapAttr)(struct GraphicsIFace *Self, CONST struct BitMap * bm, uint32 attrnum);
	struct DBufInfo * APICALL (*AllocDBufInfo)(struct GraphicsIFace *Self, struct ViewPort * vp);
	VOID APICALL (*FreeDBufInfo)(struct GraphicsIFace *Self, struct DBufInfo * dbi);
	ULONG APICALL (*SetOutlinePen)(struct GraphicsIFace *Self, struct RastPort * rp, ULONG pen);
	ULONG APICALL (*SetWriteMask)(struct GraphicsIFace *Self, struct RastPort * rp, ULONG msk);
	VOID APICALL (*SetMaxPen)(struct GraphicsIFace *Self, struct RastPort * rp, ULONG maxpen);
	VOID APICALL (*SetRGB32CM)(struct GraphicsIFace *Self, struct ColorMap * cm, UWORD n, ULONG r, ULONG g, ULONG b);
	VOID APICALL (*ScrollRasterBF)(struct GraphicsIFace *Self, struct RastPort * rp, WORD dx, WORD dy, WORD xMin, WORD yMin, WORD xMax, WORD yMax);
	UWORD APICALL (*FindColor)(struct GraphicsIFace *Self, struct ColorMap * cm, ULONG r, ULONG g, ULONG b, LONG maxcolor);
	LONG APICALL (*BltBitMapTags)(struct GraphicsIFace *Self, ...);
	struct ExtSprite * APICALL (*AllocSpriteDataA)(struct GraphicsIFace *Self, CONST struct BitMap * bm, CONST struct TagItem * tags);
	struct ExtSprite * APICALL (*AllocSpriteData)(struct GraphicsIFace *Self, CONST struct BitMap * bm, ...);
	LONG APICALL (*ChangeExtSpriteA)(struct GraphicsIFace *Self, struct ViewPort * vp, struct ExtSprite * oldsprite, struct ExtSprite * newsprite, CONST struct TagItem * tags);
	LONG APICALL (*ChangeExtSprite)(struct GraphicsIFace *Self, struct ViewPort * vp, struct ExtSprite * oldsprite, struct ExtSprite * newsprite, ...);
	VOID APICALL (*FreeSpriteData)(struct GraphicsIFace *Self, struct ExtSprite * sp);
	uint32 APICALL (*SetRPAttrsA)(struct GraphicsIFace *Self, struct RastPort * rp, CONST struct TagItem * tags);
	uint32 APICALL (*SetRPAttrs)(struct GraphicsIFace *Self, struct RastPort * rp, ...);
	uint32 APICALL (*GetRPAttrsA)(struct GraphicsIFace *Self, CONST struct RastPort * rp, CONST struct TagItem * tags);
	uint32 APICALL (*GetRPAttrs)(struct GraphicsIFace *Self, CONST struct RastPort * rp, ...);
	uint32 APICALL (*BestModeIDA)(struct GraphicsIFace *Self, CONST struct TagItem * tags);
	uint32 APICALL (*BestModeID)(struct GraphicsIFace *Self, ...);
	VOID APICALL (*WriteChunkyPixels)(struct GraphicsIFace *Self, struct RastPort * rp, UWORD xstart, UWORD ystart, UWORD xstop, UWORD ystop, CONST UBYTE * array, LONG bytesperrow);
	uint32 APICALL (*CompositeTagList)(struct GraphicsIFace *Self, CONST uint32 Operator, CONST struct BitMap * Source, CONST struct BitMap * Destination, CONST struct TagItem * tags);
	uint32 APICALL (*CompositeTags)(struct GraphicsIFace *Self, CONST uint32 Operator, CONST struct BitMap * Source, CONST struct BitMap * Destination, ...);
	struct BitMap * APICALL (*AllocBitMapTagList)(struct GraphicsIFace *Self, uint32 sizex, uint32 sizey, uint32 depth, CONST struct TagItem * tags);
	struct BitMap * APICALL (*AllocBitMapTags)(struct GraphicsIFace *Self, uint32 sizex, uint32 sizey, uint32 depth, ...);
	int32 APICALL (*GetMonitorDataTagList)(struct GraphicsIFace *Self, uint32 boardNum, uint32 monitorNum, struct TagItem * tags);
	int32 APICALL (*GetMonitorDataTags)(struct GraphicsIFace *Self, uint32 boardNum, uint32 monitorNum, ...);
	int32 APICALL (*GetBoardDataTagList)(struct GraphicsIFace *Self, uint32 boardNum, struct TagItem * tags);
	int32 APICALL (*GetBoardDataTags)(struct GraphicsIFace *Self, uint32 boardNum, ...);
	APTR APICALL (*LockBitMapTagList)(struct GraphicsIFace *Self, struct BitMap * bitMap, struct TagItem * tags);
	APTR APICALL (*LockBitMapTags)(struct GraphicsIFace *Self, struct BitMap * bitMap, ...);
	void APICALL (*UnlockBitMap)(struct GraphicsIFace *Self, APTR lock);
	void APICALL (*RectFillColor)(struct GraphicsIFace *Self, struct RastPort * rp, uint32 xMin, uint32 yMin, uint32 xMax, uint32 yMax, uint32 color);
	int32 APICALL (*WritePixelColor)(struct GraphicsIFace *Self, struct RastPort * rp, uint32 x, uint32 y, uint32 color);
	uint32 APICALL (*ReadPixelColor)(struct GraphicsIFace *Self, struct RastPort * rp, uint32 x, uint32 y);
	void APICALL (*ReadPixelArray)(struct GraphicsIFace *Self, struct RastPort * src, uint32 srcX, uint32 srcY, uint8 * dst, uint32 dstX, uint32 dstY, uint32 dstBytesPerRow, PIX_FMT dstPixelFormat, uint32 sizeX, uint32 sizeY);
	void APICALL (*WritePixelArray)(struct GraphicsIFace *Self, uint8 * src, uint32 srcX, uint32 srcY, uint32 srcBytesPerRow, PIX_FMT srcPixelFormat, struct RastPort * dst, uint32 dstX, uint32 dstY, uint32 sizeX, uint32 sizeY);
	uint32 APICALL (*GraphicsControlTagList)(struct GraphicsIFace *Self, const struct TagItem * tags);
	uint32 APICALL (*GraphicsControlTags)(struct GraphicsIFace *Self, ...);
	APTR APICALL (*LockBitMapToBoardTagList)(struct GraphicsIFace *Self, struct BitMap * bitMap, uint32 boardNum, struct TagItem * tags);
	APTR APICALL (*LockBitMapToBoardTags)(struct GraphicsIFace *Self, struct BitMap * bitMap, uint32 boardNum, ...);
	void APICALL (*UnlockBitMapFromBoard)(struct GraphicsIFace *Self, APTR lock, BOOL modified);
	uint32 APICALL (*GetBoardBytesPerRow)(struct GraphicsIFace *Self, uint32 boardNum, PIX_FMT pixelFormat, uint32 width);
	APTR APICALL (*InitBoardTagList)(struct GraphicsIFace *Self, CONST_STRPTR boardName, struct TagItem * tags);
	APTR APICALL (*InitBoardTags)(struct GraphicsIFace *Self, CONST_STRPTR boardName, ...);
	BOOL APICALL (*CreateDisplayInfoData)(struct GraphicsIFace *Self, APTR boardInfo);
	struct Window * APICALL (*PIP_OpenTagList)(struct GraphicsIFace *Self, struct TagItem * Tags);
	struct Window * APICALL (*PIP_OpenTags)(struct GraphicsIFace *Self, ...);
	BOOL APICALL (*PIP_Close)(struct GraphicsIFace *Self, struct Window * window);
	uint32 APICALL (*PIP_SetTagList)(struct GraphicsIFace *Self, struct Window * window, struct TagItem * Tags);
	uint32 APICALL (*PIP_SetTags)(struct GraphicsIFace *Self, struct Window * window, ...);
	uint32 APICALL (*PIP_GetTagList)(struct GraphicsIFace *Self, struct Window * window, struct TagItem * Tags);
	uint32 APICALL (*PIP_GetTags)(struct GraphicsIFace *Self, struct Window * window, ...);
	VOID APICALL (*SetRastColor)(struct GraphicsIFace *Self, struct RastPort * rp, uint32 color);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* GRAPHICS_INTERFACE_DEF_H */
