#ifndef INTUITION_INTERFACE_DEF_H
#define INTUITION_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 52.7.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef INTUITION_INTUITIONBASE_H
#include <intuition/intuitionbase.h>
#endif
#ifndef INTUITION_CLASSES_H
#include <intuition/classes.h>
#endif
#ifndef INTUITION_CGHOOKS_H
#include <intuition/cghooks.h>
#endif
#ifndef INTUITION_SGHOOKS_H
#include <intuition/sghooks.h>
#endif
#ifndef INTUITION_CLASSUSR_H
#include <intuition/classusr.h>
#endif
#ifndef INTUITION_NOTIFY_H
#include <intuition/notify.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct IntuitionIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct IntuitionIFace *Self);
	uint32 APICALL (*Release)(struct IntuitionIFace *Self);
	void APICALL (*Expunge)(struct IntuitionIFace *Self);
	struct Interface * APICALL (*Clone)(struct IntuitionIFace *Self);
	VOID APICALL (*OpenIntuition)(struct IntuitionIFace *Self);
	VOID APICALL (*Intuition)(struct IntuitionIFace *Self, struct InputEvent * iEvent);
	UWORD APICALL (*AddGadget)(struct IntuitionIFace *Self, struct Window * window, struct Gadget * gadget, UWORD position);
	BOOL APICALL (*ClearDMRequest)(struct IntuitionIFace *Self, struct Window * window);
	VOID APICALL (*ClearMenuStrip)(struct IntuitionIFace *Self, struct Window * window);
	VOID APICALL (*ClearPointer)(struct IntuitionIFace *Self, struct Window * window);
	BOOL APICALL (*CloseScreen)(struct IntuitionIFace *Self, struct Screen * screen);
	VOID APICALL (*CloseWindow)(struct IntuitionIFace *Self, struct Window * window);
	LONG APICALL (*CloseWorkBench)(struct IntuitionIFace *Self);
	VOID APICALL (*CurrentTime)(struct IntuitionIFace *Self, ULONG * seconds, ULONG * micros);
	BOOL APICALL (*DisplayAlert)(struct IntuitionIFace *Self, uint32 alertNumber, CONST_STRPTR string, uint16 height);
	VOID APICALL (*DisplayBeep)(struct IntuitionIFace *Self, struct Screen * screen);
	BOOL APICALL (*DoubleClick)(struct IntuitionIFace *Self, ULONG sSeconds, ULONG sMicros, ULONG cSeconds, ULONG cMicros);
	VOID APICALL (*DrawBorder)(struct IntuitionIFace *Self, struct RastPort * rp, const struct Border * border, WORD leftOffset, WORD topOffset);
	VOID APICALL (*DrawImage)(struct IntuitionIFace *Self, struct RastPort * rp, struct Image * image, WORD leftOffset, WORD topOffset);
	VOID APICALL (*EndRequest)(struct IntuitionIFace *Self, struct Requester * requester, struct Window * window);
	struct Preferences * APICALL (*GetDefPrefs)(struct IntuitionIFace *Self, struct Preferences * preferences, WORD size);
	struct Preferences * APICALL (*GetPrefs)(struct IntuitionIFace *Self, struct Preferences * preferences, WORD size);
	VOID APICALL (*InitRequester)(struct IntuitionIFace *Self, struct Requester * requester);
	struct MenuItem * APICALL (*ItemAddress)(struct IntuitionIFace *Self, const struct Menu * menuStrip, UWORD menuNumber);
	BOOL APICALL (*ModifyIDCMP)(struct IntuitionIFace *Self, struct Window * window, ULONG flags);
	VOID APICALL (*ModifyProp)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * requester, UWORD flags, UWORD horizPot, UWORD vertPot, UWORD horizBody, UWORD vertBody);
	VOID APICALL (*MoveScreen)(struct IntuitionIFace *Self, struct Screen * screen, WORD dx, WORD dy);
	VOID APICALL (*MoveWindow)(struct IntuitionIFace *Self, struct Window * window, WORD dx, WORD dy);
	VOID APICALL (*OffGadget)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * requester);
	VOID APICALL (*OffMenu)(struct IntuitionIFace *Self, struct Window * window, UWORD menuNumber);
	VOID APICALL (*OnGadget)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * requester);
	VOID APICALL (*OnMenu)(struct IntuitionIFace *Self, struct Window * window, UWORD menuNumber);
	struct Screen * APICALL (*OpenScreen)(struct IntuitionIFace *Self, const struct NewScreen * newScreen);
	struct Window * APICALL (*OpenWindow)(struct IntuitionIFace *Self, const struct NewWindow * newWindow);
	ULONG APICALL (*OpenWorkBench)(struct IntuitionIFace *Self);
	VOID APICALL (*PrintIText)(struct IntuitionIFace *Self, struct RastPort * rp, const struct IntuiText * iText, WORD left, WORD top);
	VOID APICALL (*RefreshGadgets)(struct IntuitionIFace *Self, struct Gadget * gadgets, struct Window * window, struct Requester * requester);
	UWORD APICALL (*RemoveGadget)(struct IntuitionIFace *Self, struct Window * window, struct Gadget * gadget);
	VOID APICALL (*ReportMouse)(struct IntuitionIFace *Self, BOOL flag, struct Window * window);
	VOID APICALL (*ReportMouse1)(struct IntuitionIFace *Self, struct Window * window, BOOL flag);
	BOOL APICALL (*Request)(struct IntuitionIFace *Self, struct Requester * requester, struct Window * window);
	VOID APICALL (*ScreenToBack)(struct IntuitionIFace *Self, struct Screen * screen);
	VOID APICALL (*ScreenToFront)(struct IntuitionIFace *Self, struct Screen * screen);
	BOOL APICALL (*SetDMRequest)(struct IntuitionIFace *Self, struct Window * window, struct Requester * requester);
	BOOL APICALL (*SetMenuStrip)(struct IntuitionIFace *Self, struct Window * window, struct Menu * menu);
	VOID APICALL (*SetPointer)(struct IntuitionIFace *Self, struct Window * window, UWORD * pointer, WORD height, WORD width, WORD xOffset, WORD yOffset);
	void APICALL (*SetWindowTitles)(struct IntuitionIFace *Self, struct Window * window, CONST_STRPTR windowTitle, CONST_STRPTR screenTitle);
	VOID APICALL (*ShowTitle)(struct IntuitionIFace *Self, struct Screen * screen, BOOL showIt);
	VOID APICALL (*SizeWindow)(struct IntuitionIFace *Self, struct Window * window, WORD dx, WORD dy);
	struct View * APICALL (*ViewAddress)(struct IntuitionIFace *Self);
	struct ViewPort * APICALL (*ViewPortAddress)(struct IntuitionIFace *Self, const struct Window * window);
	VOID APICALL (*WindowToBack)(struct IntuitionIFace *Self, struct Window * window);
	VOID APICALL (*WindowToFront)(struct IntuitionIFace *Self, struct Window * window);
	BOOL APICALL (*WindowLimits)(struct IntuitionIFace *Self, struct Window * window, LONG widthMin, LONG heightMin, ULONG widthMax, ULONG heightMax);
	struct Preferences * APICALL (*SetPrefs)(struct IntuitionIFace *Self, const struct Preferences * preferences, LONG size, BOOL inform);
	LONG APICALL (*IntuiTextLength)(struct IntuitionIFace *Self, const struct IntuiText * iText);
	BOOL APICALL (*WBenchToBack)(struct IntuitionIFace *Self);
	BOOL APICALL (*WBenchToFront)(struct IntuitionIFace *Self);
	BOOL APICALL (*AutoRequest)(struct IntuitionIFace *Self, struct Window * window, const struct IntuiText * body, const struct IntuiText * posText, const struct IntuiText * negText, ULONG pFlag, ULONG nFlag, UWORD width, UWORD height);
	VOID APICALL (*BeginRefresh)(struct IntuitionIFace *Self, struct Window * window);
	struct Window * APICALL (*BuildSysRequest)(struct IntuitionIFace *Self, struct Window * window, const struct IntuiText * body, const struct IntuiText * posText, const struct IntuiText * negText, ULONG flags, UWORD width, UWORD height);
	VOID APICALL (*EndRefresh)(struct IntuitionIFace *Self, struct Window * window, LONG complete);
	VOID APICALL (*FreeSysRequest)(struct IntuitionIFace *Self, struct Window * window);
	LONG APICALL (*MakeScreen)(struct IntuitionIFace *Self, struct Screen * screen);
	LONG APICALL (*RemakeDisplay)(struct IntuitionIFace *Self);
	LONG APICALL (*RethinkDisplay)(struct IntuitionIFace *Self);
	APTR APICALL (*AllocRemember)(struct IntuitionIFace *Self, struct Remember ** rememberKey, ULONG size, ULONG flags);
	VOID APICALL (*AlohaWorkbench)(struct IntuitionIFace *Self, LONG wbport);
	VOID APICALL (*FreeRemember)(struct IntuitionIFace *Self, struct Remember ** rememberKey, BOOL reallyForget);
	ULONG APICALL (*LockIBase)(struct IntuitionIFace *Self, ULONG dontknow);
	VOID APICALL (*UnlockIBase)(struct IntuitionIFace *Self, ULONG ibLock);
	LONG APICALL (*GetScreenData)(struct IntuitionIFace *Self, APTR buffer, UWORD size, UWORD type, const struct Screen * screen);
	VOID APICALL (*RefreshGList)(struct IntuitionIFace *Self, struct Gadget * gadgets, struct Window * window, struct Requester * requester, WORD numGad);
	UWORD APICALL (*AddGList)(struct IntuitionIFace *Self, struct Window * window, struct Gadget * gadget, UWORD position, WORD numGad, struct Requester * requester);
	UWORD APICALL (*RemoveGList)(struct IntuitionIFace *Self, struct Window * remPtr, struct Gadget * gadget, WORD numGad);
	VOID APICALL (*ActivateWindow)(struct IntuitionIFace *Self, struct Window * window);
	VOID APICALL (*RefreshWindowFrame)(struct IntuitionIFace *Self, struct Window * window);
	BOOL APICALL (*ActivateGadget)(struct IntuitionIFace *Self, struct Gadget * gadgets, struct Window * window, struct Requester * requester);
	VOID APICALL (*NewModifyProp)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * requester, UWORD flags, UWORD horizPot, UWORD vertPot, UWORD horizBody, UWORD vertBody, WORD numGad);
	LONG APICALL (*QueryOverscan)(struct IntuitionIFace *Self, ULONG displayID, struct Rectangle * rect, WORD oScanType);
	VOID APICALL (*MoveWindowInFrontOf)(struct IntuitionIFace *Self, struct Window * window, struct Window * behindWindow);
	VOID APICALL (*ChangeWindowBox)(struct IntuitionIFace *Self, struct Window * window, WORD left, WORD top, WORD width, WORD height);
	struct Hook * APICALL (*SetEditHook)(struct IntuitionIFace *Self, struct Hook * hook);
	LONG APICALL (*SetMouseQueue)(struct IntuitionIFace *Self, struct Window * window, UWORD queueLength);
	VOID APICALL (*ZipWindow)(struct IntuitionIFace *Self, struct Window * window);
	struct Screen * APICALL (*LockPubScreen)(struct IntuitionIFace *Self, CONST_STRPTR name);
	void APICALL (*UnlockPubScreen)(struct IntuitionIFace *Self, CONST_STRPTR name, struct Screen * screen);
	struct List * APICALL (*LockPubScreenList)(struct IntuitionIFace *Self);
	VOID APICALL (*UnlockPubScreenList)(struct IntuitionIFace *Self);
	STRPTR APICALL (*NextPubScreen)(struct IntuitionIFace *Self, const struct Screen * screen, STRPTR namebuf);
	void APICALL (*SetDefaultPubScreen)(struct IntuitionIFace *Self, CONST_STRPTR name);
	UWORD APICALL (*SetPubScreenModes)(struct IntuitionIFace *Self, UWORD modes);
	UWORD APICALL (*PubScreenStatus)(struct IntuitionIFace *Self, struct Screen * screen, UWORD statusFlags);
	struct RastPort * APICALL (*ObtainGIRPort)(struct IntuitionIFace *Self, struct GadgetInfo * gInfo);
	VOID APICALL (*ReleaseGIRPort)(struct IntuitionIFace *Self, struct RastPort * rp);
	VOID APICALL (*GadgetMouse)(struct IntuitionIFace *Self, struct Gadget * gadget, struct GadgetInfo * gInfo, WORD * mousePoint);
	APTR APICALL (*SetIPrefs)(struct IntuitionIFace *Self, APTR ptr, LONG size, LONG type);
	VOID APICALL (*GetDefaultPubScreen)(struct IntuitionIFace *Self, STRPTR nameBuffer);
	LONG APICALL (*EasyRequestArgs)(struct IntuitionIFace *Self, struct Window * window, const struct EasyStruct * easyStruct, ULONG * idcmpPtr, const APTR args);
	LONG APICALL (*EasyRequest)(struct IntuitionIFace *Self, struct Window * window, const struct EasyStruct * easyStruct, ULONG * idcmpPtr, ...);
	struct Window * APICALL (*BuildEasyRequestArgs)(struct IntuitionIFace *Self, struct Window * window, const struct EasyStruct * easyStruct, ULONG idcmp, const APTR args);
	struct Window * APICALL (*BuildEasyRequest)(struct IntuitionIFace *Self, struct Window * window, const struct EasyStruct * easyStruct, ULONG idcmp, ...);
	LONG APICALL (*SysReqHandler)(struct IntuitionIFace *Self, struct Window * window, ULONG * idcmpPtr, BOOL waitInput);
	struct Window * APICALL (*OpenWindowTagList)(struct IntuitionIFace *Self, const struct NewWindow * newWindow, const struct TagItem * tagList);
	struct Window * APICALL (*OpenWindowTags)(struct IntuitionIFace *Self, const struct NewWindow * newWindow, ...);
	struct Screen * APICALL (*OpenScreenTagList)(struct IntuitionIFace *Self, const struct NewScreen * newScreen, const struct TagItem * tagList);
	struct Screen * APICALL (*OpenScreenTags)(struct IntuitionIFace *Self, const struct NewScreen * newScreen, ...);
	VOID APICALL (*DrawImageState)(struct IntuitionIFace *Self, struct RastPort * rp, struct Image * image, WORD leftOffset, WORD topOffset, ULONG state, const struct DrawInfo * drawInfo);
	BOOL APICALL (*PointInImage)(struct IntuitionIFace *Self, ULONG point, struct Image * image);
	VOID APICALL (*EraseImage)(struct IntuitionIFace *Self, struct RastPort * rp, struct Image * image, WORD leftOffset, WORD topOffset);
	Object * APICALL (*NewObjectA)(struct IntuitionIFace *Self, Class * cl, ClassID classID, const struct TagItem * tagList);
	Object * APICALL (*NewObject)(struct IntuitionIFace *Self, Class * cl, ClassID classID, ...);
	void APICALL (*DisposeObject)(struct IntuitionIFace *Self, Object * object);
	uint32 APICALL (*SetAttrsA)(struct IntuitionIFace *Self, Object * object, const struct TagItem * tagList);
	uint32 APICALL (*SetAttrs)(struct IntuitionIFace *Self, APTR object, ...);
	uint32 APICALL (*GetAttr)(struct IntuitionIFace *Self, uint32 attrID, Object * object, uint32 * storagePtr);
	uint32 APICALL (*SetGadgetAttrsA)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * requester, const struct TagItem * tagList);
	uint32 APICALL (*SetGadgetAttrs)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * requester, ...);
	Object * APICALL (*NextObject)(struct IntuitionIFace *Self, Object ** objectPtrPtr);
	Class * APICALL (*FindClass)(struct IntuitionIFace *Self, ClassID classID);
	Class * APICALL (*MakeClass)(struct IntuitionIFace *Self, ClassID classID, ClassID superClassID, const Class * superClassPtr, uint16 instanceSize, uint32 flags);
	void APICALL (*AddClass)(struct IntuitionIFace *Self, Class * cl);
	struct DrawInfo * APICALL (*GetScreenDrawInfo)(struct IntuitionIFace *Self, struct Screen * screen);
	VOID APICALL (*FreeScreenDrawInfo)(struct IntuitionIFace *Self, struct Screen * screen, struct DrawInfo * drawInfo);
	BOOL APICALL (*ResetMenuStrip)(struct IntuitionIFace *Self, struct Window * window, struct Menu * menu);
	void APICALL (*RemoveClass)(struct IntuitionIFace *Self, Class * cl);
	BOOL APICALL (*FreeClass)(struct IntuitionIFace *Self, Class * cl);
	struct List * APICALL (*LockClassList)(struct IntuitionIFace *Self);
	VOID APICALL (*UnlockClassList)(struct IntuitionIFace *Self);
	void APICALL (*Reserved1)(struct IntuitionIFace *Self);
	void APICALL (*Reserved2)(struct IntuitionIFace *Self);
	void APICALL (*Reserved3)(struct IntuitionIFace *Self);
	void APICALL (*Reserved4)(struct IntuitionIFace *Self);
	void APICALL (*Reserved5)(struct IntuitionIFace *Self);
	void APICALL (*Reserved6)(struct IntuitionIFace *Self);
	struct ScreenBuffer * APICALL (*AllocScreenBuffer)(struct IntuitionIFace *Self, struct Screen * sc, struct BitMap * bm, ULONG flags);
	VOID APICALL (*FreeScreenBuffer)(struct IntuitionIFace *Self, struct Screen * sc, struct ScreenBuffer * sb);
	ULONG APICALL (*ChangeScreenBuffer)(struct IntuitionIFace *Self, struct Screen * sc, struct ScreenBuffer * sb);
	VOID APICALL (*ScreenDepth)(struct IntuitionIFace *Self, struct Screen * screen, ULONG flags, APTR reserved);
	VOID APICALL (*ScreenPosition)(struct IntuitionIFace *Self, struct Screen * screen, ULONG flags, LONG x1, LONG y1, LONG x2, LONG y2);
	VOID APICALL (*ScrollWindowRaster)(struct IntuitionIFace *Self, struct Window * win, WORD dx, WORD dy, WORD xMin, WORD yMin, WORD xMax, WORD yMax);
	VOID APICALL (*LendMenus)(struct IntuitionIFace *Self, struct Window * fromwindow, struct Window * towindow);
	uint32 APICALL (*DoGadgetMethodA)(struct IntuitionIFace *Self, struct Gadget * gad, struct Window * win, struct Requester * req, Msg message);
	uint32 APICALL (*DoGadgetMethod)(struct IntuitionIFace *Self, struct Gadget * gad, struct Window * win, struct Requester * req, ...);
	VOID APICALL (*SetWindowPointerA)(struct IntuitionIFace *Self, struct Window * win, const struct TagItem * taglist);
	VOID APICALL (*SetWindowPointer)(struct IntuitionIFace *Self, struct Window * win, ...);
	BOOL APICALL (*TimedDisplayAlert)(struct IntuitionIFace *Self, uint32 alertNumber, CONST_STRPTR string, uint16 height, uint32 Time);
	VOID APICALL (*HelpControl)(struct IntuitionIFace *Self, struct Window * win, ULONG flags);
	BOOL APICALL (*ShowWindow)(struct IntuitionIFace *Self, struct Window * window, struct Window * other);
	BOOL APICALL (*HideWindow)(struct IntuitionIFace *Self, struct Window * window);
	uint32 APICALL (*GetAttrsA)(struct IntuitionIFace *Self, Object * object, struct TagItem * tagList);
	uint32 APICALL (*GetAttrs)(struct IntuitionIFace *Self, APTR object, ...);
	APTR APICALL (*LockGUIPrefs)(struct IntuitionIFace *Self, ULONG reserved);
	VOID APICALL (*UnlockGUIPrefs)(struct IntuitionIFace *Self, APTR lock);
	ULONG APICALL (*SetGUIAttrsA)(struct IntuitionIFace *Self, APTR reserved, struct DrawInfo * drawinfo, struct TagItem * taglist);
	ULONG APICALL (*SetGUIAttrs)(struct IntuitionIFace *Self, APTR reserved, struct DrawInfo * drawinfo, ...);
	ULONG APICALL (*GetGUIAttrsA)(struct IntuitionIFace *Self, APTR reserved, struct DrawInfo * drawinfo, struct TagItem * taglist);
	ULONG APICALL (*GetGUIAttrs)(struct IntuitionIFace *Self, APTR reserved, struct DrawInfo * drawinfo, ...);
	ULONG APICALL (*GetHalfPens)(struct IntuitionIFace *Self, struct DrawInfo * drawinfo, ULONG basepen, UWORD * halfshineptr, UWORD * halfshadowptr);
	ULONG APICALL (*GadgetBox)(struct IntuitionIFace *Self, struct Gadget * gadget, APTR domain, ULONG domaintype, ULONG flags, APTR box);
	void APICALL (*RefreshSetGadgetAttrsA)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * req, struct TagItem * taglist);
	void APICALL (*RefreshSetGadgetAttrs)(struct IntuitionIFace *Self, struct Gadget * gadget, struct Window * window, struct Requester * req, ...);
	uint32 APICALL (*IDoSuperMethodA)(struct IntuitionIFace *Self, Class * cl, Object * object, Msg msg);
	uint32 APICALL (*IDoSuperMethod)(struct IntuitionIFace *Self, Class * cl, Object * object, ...);
	uint32 APICALL (*ISetSuperAttrsA)(struct IntuitionIFace *Self, Class * cl, Object * object, struct TagItem * taglist);
	uint32 APICALL (*ISetSuperAttrs)(struct IntuitionIFace *Self, Class * cl, Object * object, ...);
	uint32 APICALL (*ICoerceMethodA)(struct IntuitionIFace *Self, Class * cl, Object * object, Msg msg);
	uint32 APICALL (*ICoerceMethod)(struct IntuitionIFace *Self, Class * cl, Object * object, ...);
	uint32 APICALL (*IDoMethodA)(struct IntuitionIFace *Self, Object * object, Msg msg);
	uint32 APICALL (*IDoMethod)(struct IntuitionIFace *Self, Object * object, ...);
	struct ClassLibrary * APICALL (*OpenClass)(struct IntuitionIFace *Self, CONST_STRPTR name, uint32 version, Class ** cl_ptr);
	void APICALL (*CloseClass)(struct IntuitionIFace *Self, struct ClassLibrary * cl);
	struct Hook * APICALL (*SetDisplayBeepHook)(struct IntuitionIFace *Self, struct Hook * hook);
	BOOL APICALL (*LockScreen)(struct IntuitionIFace *Self, struct Screen * screen, ULONG micros);
	VOID APICALL (*UnlockScreen)(struct IntuitionIFace *Self, struct Screen * screen);
	LONG APICALL (*GetWindowAttrsA)(struct IntuitionIFace *Self, struct Window * win, struct TagItem * taglist);
	LONG APICALL (*GetWindowAttrs)(struct IntuitionIFace *Self, struct Window * win, ...);
	LONG APICALL (*SetWindowAttrsA)(struct IntuitionIFace *Self, struct Window * win, struct TagItem * taglist);
	LONG APICALL (*SetWindowAttrs)(struct IntuitionIFace *Self, struct Window * win, ...);
	LONG APICALL (*GetWindowAttr)(struct IntuitionIFace *Self, struct Window * win, ULONG attr, APTR data, ULONG size);
	LONG APICALL (*SetWindowAttr)(struct IntuitionIFace *Self, struct Window * win, ULONG attr, APTR data, ULONG size);
	VOID APICALL (*StripIntuiMessages)(struct IntuitionIFace *Self, struct MsgPort * port, struct Window * win);
	void APICALL (*Reserved7)(struct IntuitionIFace *Self);
	void APICALL (*Reserved8)(struct IntuitionIFace *Self);
	LONG APICALL (*GetScreenAttrsA)(struct IntuitionIFace *Self, struct Screen * scr, struct TagItem * taglist);
	LONG APICALL (*GetScreenAttrs)(struct IntuitionIFace *Self, struct Screen * scr, ...);
	LONG APICALL (*SetScreenAttrsA)(struct IntuitionIFace *Self, struct Screen * scr, struct TagItem * taglist);
	LONG APICALL (*SetScreenAttrs)(struct IntuitionIFace *Self, struct Screen * scr, ...);
	LONG APICALL (*GetScreenAttr)(struct IntuitionIFace *Self, struct Screen * scr, ULONG attr, APTR data, ULONG size);
	LONG APICALL (*SetScreenAttr)(struct IntuitionIFace *Self, struct Screen * scr, ULONG attr, APTR data, ULONG size);
	struct Screen * APICALL (*LockScreenList)(struct IntuitionIFace *Self);
	VOID APICALL (*UnlockScreenList)(struct IntuitionIFace *Self);
	struct RastPort * APICALL (*LockScreenGI)(struct IntuitionIFace *Self, struct GadgetInfo * gi, ULONG micros);
	VOID APICALL (*UnlockScreenGI)(struct IntuitionIFace *Self, struct GadgetInfo * gi, struct RastPort * rp);
	ULONG APICALL (*GetMarkedBlock)(struct IntuitionIFace *Self, struct SGWork * sgw);
	VOID APICALL (*SetMarkedBlock)(struct IntuitionIFace *Self, struct SGWork * sgw, ULONG block);
	APTR APICALL (*ObtainBitMapSourceA)(struct IntuitionIFace *Self, CONST_STRPTR name, struct TagItem * taglist);
	APTR APICALL (*ObtainBitMapSource)(struct IntuitionIFace *Self, CONST_STRPTR name, ...);
	VOID APICALL (*ReleaseBitMapSource)(struct IntuitionIFace *Self, APTR bitmapsource);
	APTR APICALL (*ObtainBitMapInstanceA)(struct IntuitionIFace *Self, APTR bitmapsource, struct Screen * screen, struct TagItem * taglist);
	APTR APICALL (*ObtainBitMapInstance)(struct IntuitionIFace *Self, APTR bitmapsource, struct Screen * screen, ...);
	VOID APICALL (*ReleaseBitMapInstance)(struct IntuitionIFace *Self, APTR bitmapinstance);
	void APICALL (*EmbossDisableRect)(struct IntuitionIFace *Self, struct RastPort * rp, int32 minx, int32 miny, int32 maxx, int32 maxy, uint32 backtype, uint32 contrast, struct DrawInfo * dri);
	void APICALL (*EmbossDisableText)(struct IntuitionIFace *Self, struct RastPort * rp, CONST_STRPTR text, uint32 len, uint32 backtype, uint32 contrast, struct DrawInfo * dri);
	VOID APICALL (*PrintEmbossedDisabledIText)(struct IntuitionIFace *Self, struct RastPort * rp, struct IntuiText * itext, LONG left, LONG top, ULONG backtype, ULONG contrast, struct DrawInfo * dri);
	ULONG APICALL (*IntuiTextExtent)(struct IntuitionIFace *Self, struct RastPort * rp, struct IntuiText * itext, struct TextExtent * textent);
	ULONG APICALL (*ShadeRectOld)(struct IntuitionIFace *Self, struct RastPort * rp, LONG minx, LONG miny, LONG maxx, LONG maxy, ULONG shadelevel, ULONG backtype, ULONG state, struct DrawInfo * dri);
	VOID APICALL (*DisableTemplateRGB)(struct IntuitionIFace *Self, struct RastPort * rp, LONG left, LONG top, LONG width, LONG height, PLANEPTR template_ptr, ULONG brightlevel, ULONG darklevel);
	ULONG APICALL (*SetScreenBitMapInstance)(struct IntuitionIFace *Self, struct Screen * scr, ULONG id, APTR source);
	UWORD APICALL (*FindMenuKey)(struct IntuitionIFace *Self, struct Menu * menu, LONG code);
	ULONG APICALL (*BitMapInstanceControlA)(struct IntuitionIFace *Self, APTR bitmapinstance, struct TagItem * taglist);
	ULONG APICALL (*BitMapInstanceControl)(struct IntuitionIFace *Self, APTR bitmapinstance, ...);
	struct List * APICALL (*ObtainIPluginList)(struct IntuitionIFace *Self, ULONG type, ULONG attrmask, ULONG applymask);
	VOID APICALL (*ReleaseIPluginList)(struct IntuitionIFace *Self, struct List * list);
	struct GUIPlugin * APICALL (*OpenGUIPlugin)(struct IntuitionIFace *Self, STRPTR name, ULONG version, ULONG type, ULONG attrmask, ULONG applymask);
	VOID APICALL (*CloseGUIPlugin)(struct IntuitionIFace *Self, struct GUIPlugin * plugin);
	ULONG APICALL (*DrawSysImageA)(struct IntuitionIFace *Self, struct RastPort * rp, LONG left, LONG top, LONG width, LONG height, ULONG which, ULONG backtype, ULONG state, struct DrawInfo * dri, struct TagItem * taglist);
	ULONG APICALL (*DrawSysImage)(struct IntuitionIFace *Self, struct RastPort * rp, LONG left, LONG top, LONG width, LONG height, ULONG which, ULONG backtype, ULONG state, struct DrawInfo * dri, ...);
	uint32 APICALL (*DoRender)(struct IntuitionIFace *Self, Object * o, struct GadgetInfo * gi, uint32 flags);
	ULONG APICALL (*SetRenderDomain)(struct IntuitionIFace *Self, struct RastPort * rp, struct Rectangle * domain);
	ULONG APICALL (*GetRenderDomain)(struct IntuitionIFace *Self, struct RastPort * rp, struct Rectangle * domain);
	ULONG APICALL (*DrawGradient)(struct IntuitionIFace *Self, struct RastPort * rp, LONG left, LONG top, LONG width, LONG height, struct IBox * domain, ULONG reserved, struct GradientSpec * gradientspec, struct DrawInfo * dri);
	ULONG APICALL (*DirectionVector)(struct IntuitionIFace *Self, ULONG degrees);
	ULONG APICALL (*ShadeRectA)(struct IntuitionIFace *Self, struct RastPort * rp, LONG minx, LONG miny, LONG maxx, LONG maxy, ULONG shadelevel, ULONG backtype, ULONG state, struct DrawInfo * dri, struct TagItem * taglist);
	ULONG APICALL (*ShadeRect)(struct IntuitionIFace *Self, struct RastPort * rp, LONG minx, LONG miny, LONG maxx, LONG maxy, ULONG shadelevel, ULONG backtype, ULONG state, struct DrawInfo * dri, ...);
	VOID APICALL (*DoScrollHook)(struct IntuitionIFace *Self, struct ScrollHook * scrollhook, LONG scrollmode);
	struct Hook * APICALL (*ObtainIBackFill)(struct IntuitionIFace *Self, struct DrawInfo * dri, ULONG element, ULONG state, ULONG flags);
	VOID APICALL (*ReleaseIBackFill)(struct IntuitionIFace *Self, struct Hook * hook);
	ULONG APICALL (*IntuitionControlA)(struct IntuitionIFace *Self, APTR object, struct TagItem * taglist);
	ULONG APICALL (*IntuitionControl)(struct IntuitionIFace *Self, APTR object, ...);
	APTR APICALL (*StartScreenNotifyTagList)(struct IntuitionIFace *Self, struct TagItem * taglist);
	APTR APICALL (*StartScreenNotifyTags)(struct IntuitionIFace *Self, ...);
	BOOL APICALL (*EndScreenNotify)(struct IntuitionIFace *Self, APTR request);
	VOID APICALL (*DisableTemplate)(struct IntuitionIFace *Self, struct RastPort * rp, LONG left, LONG top, LONG width, LONG height, APTR template_ptr, LONG offx, ULONG template_type, ULONG bytesperrow, ULONG backtype, struct DrawInfo * dri);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* INTUITION_INTERFACE_DEF_H */
