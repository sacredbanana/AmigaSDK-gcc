#ifndef BZIP2_INTERFACE_DEF_H
#define BZIP2_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.5.
** Do not edit
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_BZIP2_H
#include <libraries/bzip2.h>
#endif

#include <stdio.h>

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct BZip2IFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct BZip2IFace *Self);
	uint32 APICALL (*Release)(struct BZip2IFace *Self);
	void APICALL (*Expunge)(struct BZip2IFace *Self);
	struct Interface * APICALL (*Clone)(struct BZip2IFace *Self);
	const char * APICALL (*BZ2_bzlibVersion)(struct BZip2IFace *Self);
	int APICALL (*BZ2_bzCompressInit)(struct BZip2IFace *Self, bz_stream * strm, int blockSize100k, int verbosity, int workFactor);
	int APICALL (*BZ2_bzCompress)(struct BZip2IFace *Self, bz_stream * strm, int action);
	int APICALL (*BZ2_bzCompressEnd)(struct BZip2IFace *Self, bz_stream * strm);
	int APICALL (*BZ2_bzDecompressInit)(struct BZip2IFace *Self, bz_stream * strm, int verbosity, int small);
	int APICALL (*BZ2_bzDecompress)(struct BZip2IFace *Self, bz_stream * strm);
	int APICALL (*BZ2_bzDecompressEnd)(struct BZip2IFace *Self, bz_stream * strm);
	int APICALL (*BZ2_bzBuffToBuffCompress)(struct BZip2IFace *Self, char * dest, unsigned int * destLen, char * source, unsigned int sourceLen, int blockSize100k, int verbosity, int workFactor);
	int APICALL (*BZ2_bzBuffToBuffDecompress)(struct BZip2IFace *Self, char * dest, unsigned int * destLen, char * source, unsigned int sourceLen, int small, int verbosity);
	BZFILE * APICALL (*BZ2_bzReadOpen)(struct BZip2IFace *Self, int * bzerror, FILE * f, int verbosity, int small, void * unused, int nUnused);
	void APICALL (*BZ2_bzReadClose)(struct BZip2IFace *Self, int * bzerror, BZFILE * b);
	void APICALL (*BZ2_bzReadGetUnused)(struct BZip2IFace *Self, int * bzerror, BZFILE * b, void ** unused, int * nUnused);
	int APICALL (*BZ2_bzRead)(struct BZip2IFace *Self, int * bzerror, BZFILE * b, void * buf, int len);
	BZFILE * APICALL (*BZ2_bzWriteOpen)(struct BZip2IFace *Self, int * bzerror, FILE * f, int blockSize100k, int verbosity, int workFactor);
	void APICALL (*BZ2_bzWrite)(struct BZip2IFace *Self, int * bzerror, BZFILE * b, void * buf, int len);
	void APICALL (*BZ2_bzWriteClose)(struct BZip2IFace *Self, int * bzerror, BZFILE * b, int abandon, unsigned int * nbytes_in, unsigned int * nbytes_out);
	void APICALL (*BZ2_bzWriteClose64)(struct BZip2IFace *Self, int * bzerror, BZFILE * b, int abandon, unsigned int * nbytes_in_lo32, unsigned int * nbytes_in_hi32, unsigned int * nbytes_out_lo32, unsigned int * nbytes_out_hi32);
	BZFILE * APICALL (*BZ2_bzopen)(struct BZip2IFace *Self, const char *path, const char *mode);
	BZFILE * APICALL (*BZ2_bzdopen)(struct BZip2IFace *Self, int fd, const char *mode);
	int APICALL (*BZ2_bzread)(struct BZip2IFace *Self, BZFILE* b, void* buf, int len);
	int APICALL (*BZ2_bzwrite)(struct BZip2IFace *Self, BZFILE* b, void* buf, int len);
	int APICALL (*BZ2_bzflush)(struct BZip2IFace *Self, BZFILE* b);
	void APICALL (*BZ2_bzclose)(struct BZip2IFace *Self, BZFILE* b);
	const char * APICALL (*BZ2_bzerror)(struct BZip2IFace *Self, BZFILE *b, int *errnum);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* BZIP2_INTERFACE_DEF_H */
