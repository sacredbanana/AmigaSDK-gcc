#ifndef INLINE4_ELF_H
#define INLINE4_ELF_H

/*
** This file was auto generated by idltool 51.6.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_ELF_H
#include <libraries/elf.h>
#endif
#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif

/* Inline macros for Interface "main" */
#define OpenElf(taglist) IElf->OpenElf(taglist) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define OpenElfTags(...) IElf->OpenElfTags(__VA_ARGS__) 
#endif
#define CloseElf(ElfHandle, TagList) IElf->CloseElf(ElfHandle, TagList) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define CloseElfTags(...) IElf->CloseElfTags(__VA_ARGS__) 
#endif
#define GetElfAttrs(ElfHandle, taglist) IElf->GetElfAttrs(ElfHandle, taglist) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define GetElfAttrsTags(...) IElf->GetElfAttrsTags(__VA_ARGS__) 
#endif
#define SetElfAttrs(ElfHandle, taglist) IElf->SetElfAttrs(ElfHandle, taglist) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define SetElfAttrsTags(...) IElf->SetElfAttrsTags(__VA_ARGS__) 
#endif
#define GetSectionHeader(ElfHandle, TagList) IElf->GetSectionHeader(ElfHandle, TagList) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define GetSectionHeaderTags(...) IElf->GetSectionHeaderTags(__VA_ARGS__) 
#endif
#define GetSection(ElfHandle, TagList) IElf->GetSection(ElfHandle, TagList) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define GetSectionTags(...) IElf->GetSectionTags(__VA_ARGS__) 
#endif
#define ElfLoadSeg(ElfHandle, taglist) IElf->ElfLoadSeg(ElfHandle, taglist) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define ElfLoadSegTags(...) IElf->ElfLoadSegTags(__VA_ARGS__) 
#endif
#define GetElfString(ElfHandle, SectionIndex, StringIndex) IElf->GetElfString(ElfHandle, SectionIndex, StringIndex) 
#define SymbolQuery(ElfHandle, NumQueries, Queries) IElf->SymbolQuery(ElfHandle, NumQueries, Queries) 
#define UnloadSection(ElfHandle, taglist) IElf->UnloadSection(ElfHandle, taglist) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define UnloadSectionTags(...) IElf->UnloadSectionTags(__VA_ARGS__) 
#endif
#define AddressToSection(ElfHandle, Address) IElf->AddressToSection(ElfHandle, Address) 
#define ScanSymbolTable(ElfHandle, hook, tagList) IElf->ScanSymbolTable(ElfHandle, hook, tagList) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define ScanSymbolTableTags(ElfHandle, ...) IElf->ScanSymbolTableTags(ElfHandle, __VA_ARGS__) 
#endif
#define RelocateSection(ElfHandle, taglist) IElf->RelocateSection(ElfHandle, taglist) 
#if !defined(__cplusplus) && (__GNUC__ >= 3    \
    || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95) \
    || (__STDC_VERSION__ && __STDC_VERSION__ >= 199901L))
#define RelocateSectionTags(...) IElf->RelocateSectionTags(__VA_ARGS__) 
#endif
#define CopyDataSegment(ElfHandle, baseOffset) IElf->CopyDataSegment(ElfHandle, baseOffset) 
#define FreeDataSegmentCopy(ElfHandle, SegmentCopy) IElf->FreeDataSegmentCopy(ElfHandle, SegmentCopy) 
#define InitSHLibs(ElfHandle, DoInit) IElf->InitSHLibs(ElfHandle, DoInit) 
#define DLOpen(RootHandle, Name, Flags) IElf->DLOpen(RootHandle, Name, Flags) 
#define DLClose(RootHandle, Handle) IElf->DLClose(RootHandle, Handle) 
#define DLSym(RootHandle, Handle, SymbolName, Result) IElf->DLSym(RootHandle, Handle, SymbolName, Result) 

#endif /* INLINE4_ELF_H */
