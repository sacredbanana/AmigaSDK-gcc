<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE library SYSTEM "library.dtd">
<library name="dos" basename="DOSBase" basetype="DosLibrary" openname="dos.library">
	<include>dos/dos.h</include>
	<include>dos/dosextens.h</include>
	<include>dos/record.h</include>
	<include>dos/rdargs.h</include>
	<include>dos/dosasl.h</include>
	<include>dos/var.h</include>
	<include>dos/notify.h</include>
	<include>dos/datetime.h</include>
	<include>dos/exall.h</include>
	<include>dos/filehandler.h</include>
	<include>dos/dostags.h</include>
	<include>dos/mount.h</include>
	<include>dos/doshunks.h</include>
	<include>dos/path.h</include>
	<include>dos/anchorpath.h</include>
	<interface name="main" version="1.0" struct="DOSIFace" prefix="J_" asmprefix="IDOS" global="IDOS">
		<method name="Obtain" result="ULONG"/>
		<method name="Release" result="ULONG"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>
		<method name="Open" result="BPTR">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="accessMode" type="LONG"/>
		</method>
		<method name="Close" result="LONG">
			<arg name="file" type="BPTR"/>
		</method>
		<method name="Read" result="LONG">
			<arg name="file" type="BPTR"/>
			<arg name="buffer" type="APTR"/>
			<arg name="length" type="LONG"/>
		</method>
		<method name="Write" result="LONG">
			<arg name="file" type="BPTR"/>
			<arg name="buffer" type="CONST_APTR"/>
			<arg name="length" type="LONG"/>
		</method>
		<method name="Input" result="BPTR">
		</method>
		<method name="Output" result="BPTR">
		</method>
		<method name="OBSOLETESeek" result="DEPRECATED LONG">
			<arg name="file" type="BPTR"/>
			<arg name="position" type="LONG"/>
			<arg name="offset" type="LONG"/>
		</method>
		<method name="Delete" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="Rename" result="LONG">
			<arg name="oldName" type="CONST_STRPTR"/>
			<arg name="newName" type="CONST_STRPTR"/>
		</method>
		<method name="Lock" result="BPTR">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="type" type="LONG"/>
		</method>
		<method name="UnLock" result="VOID">
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="DupLock" result="BPTR">
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="OBSOLETEExamine" result="DEPRECATED LONG">
			<arg name="lock" type="BPTR"/>
			<arg name="fileInfoBlock" type="struct FileInfoBlock *"/>
		</method>
		<method name="OBSOLETEExNext" result="DEPRECATED LONG">
			<arg name="lock" type="BPTR"/>
			<arg name="fileInfoBlock" type="struct FileInfoBlock *"/>
		</method>
		<method name="Info" result="LONG">
			<arg name="lock" type="BPTR"/>
			<arg name="parameterBlock" type="struct InfoData *"/>
		</method>
		<method name="CreateDir" result="BPTR">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="SetCurrentDir" result="BPTR">
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="IoErr" result="LONG">
		</method>
		<method name="OBSOLETECreateProc" result="DEPRECATED struct MsgPort *">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="pri" type="LONG"/>
			<arg name="segList" type="BPTR"/>
			<arg name="stackSize" type="LONG"/>
		</method>
		<method name="OBSOLETEExit" result="DEPRECATED VOID" status="private">
			<arg name="returnCode" type="LONG"/>
		</method>
		<method name="OBSOLETELoadSeg" result="DEPRECATED BPTR" status="private">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="hunktab" type="BPTR"/>
			<arg name="stream" type="BPTR"/>
		</method>
		<method name="UnLoadSeg" result="LONG">
			<arg name="seglist" type="BPTR"/>
		</method>
		<method name="PRIVATEDoPkt32" result="int32" status="private">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="action" type="LONG"/>
			<arg name="arg1" type="LONG"/>
			<arg name="arg2" type="LONG"/>
			<arg name="arg3" type="LONG"/>
			<arg name="arg4" type="LONG"/>
			<arg name="arg5" type="LONG"/>
			<arg name="arg6" type="LONG"/>
			<arg name="arg7" type="LONG"/>
		</method>
		<method name="LoadSeg" result="BPTR">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="OBSOLETEDeviceProc" result="DEPRECATED struct MsgPort *">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="SetComment" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="comment" type="CONST_STRPTR"/>
		</method>
		<method name="SetProtection" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="protect" type="ULONG"/>
		</method>
		<method name="DateStamp" result="struct DateStamp *">
			<arg name="date" type="struct DateStamp *"/>
		</method>
		<method name="Delay" result="VOID">
			<arg name="timeout" type="ULONG"/>
		</method>
		<method name="WaitForChar" result="LONG">
			<arg name="file" type="BPTR"/>
			<arg name="timeout" type="LONG"/>
		</method>
		<method name="ParentDir" result="BPTR">
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="IsInteractive" result="LONG">
			<arg name="file" type="BPTR"/>
		</method>
		<method name="OBSOLETEExecute" result="DEPRECATED LONG">
			<arg name="string" type="CONST_STRPTR"/>
			<arg name="file" type="BPTR"/>
			<arg name="file2" type="BPTR"/>
		</method>
		<method name="AllocDosObject" result="APTR">
			<arg name="type" type="ULONG"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="AllocDosObjectTagList" result="APTR">
			<arg name="type" type="ULONG"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="AllocDosObjectTags" result="APTR">
			<arg name="type" type="ULONG"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="FreeDosObject" result="VOID">
			<arg name="type" type="ULONG"/>
			<arg name="ptr" type="APTR"/>
		</method>
		<method name="DoPkt" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="action" type="LONG"/>
			<arg name="arg1" type="LONG"/>
			<arg name="arg2" type="LONG"/>
			<arg name="arg3" type="LONG"/>
			<arg name="arg4" type="LONG"/>
			<arg name="arg5" type="LONG"/>
		</method>
		<method name="DoPkt0" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="action" type="LONG"/>
		</method>
		<method name="DoPkt1" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="action" type="LONG"/>
			<arg name="arg1" type="LONG"/>
		</method>
		<method name="DoPkt2" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="action" type="LONG"/>
			<arg name="arg1" type="LONG"/>
			<arg name="arg2" type="LONG"/>
		</method>
		<method name="DoPkt3" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="action" type="LONG"/>
			<arg name="arg1" type="LONG"/>
			<arg name="arg2" type="LONG"/>
			<arg name="arg3" type="LONG"/>
		</method>
		<method name="DoPkt4" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="action" type="LONG"/>
			<arg name="arg1" type="LONG"/>
			<arg name="arg2" type="LONG"/>
			<arg name="arg3" type="LONG"/>
			<arg name="arg4" type="LONG"/>
		</method>
		<method name="SendPkt" result="VOID">
			<arg name="dp" type="struct DosPacket *"/>
			<arg name="port" type="struct MsgPort *"/>
			<arg name="replyport" type="struct MsgPort *"/>
		</method>
		<method name="WaitPkt" result="struct DosPacket *">
			<arg name="task_replyport" type="struct MsgPort *"/>
		</method>
		<method name="ReplyPkt" result="LONG">
			<arg name="dp" type="struct DosPacket *"/>
			<arg name="res1" type="LONG"/>
			<arg name="res2" type="LONG"/>
		</method>
		<method name="Reserved2" result="void" status="unimplemented"/>
		<method name="OBSOLETELockRecord" result="DEPRECATED LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="offset" type="ULONG"/>
			<arg name="length" type="ULONG"/>
			<arg name="mode" type="ULONG"/>
			<arg name="timeout" type="ULONG"/>
		</method>
		<method name="LockRecords" result="LONG">
			<arg name="recArray" type="struct RecordLock *"/>
			<arg name="timeout" type="ULONG"/>
		</method>
		<method name="OBSOLETEUnLockRecord" result="DEPRECATED LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="offset" type="ULONG"/>
			<arg name="length" type="ULONG"/>
		</method>
		<method name="UnLockRecords" result="LONG">
			<arg name="recArray" type="struct RecordLock *"/>
		</method>
		<method name="SelectInput" result="BPTR">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="SelectOutput" result="BPTR">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="FGetC" result="LONG">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="FPutC" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="ch" type="LONG"/>
		</method>
		<method name="FUnGetC" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="character" type="LONG"/>
		</method>
		<method name="FRead" result="ULONG">
			<arg name="fh" type="BPTR"/>
			<arg name="block" type="APTR"/>
			<arg name="blocklen" type="ULONG"/>
			<arg name="number" type="ULONG"/>
		</method>
		<method name="FWrite" result="ULONG">
			<arg name="fh" type="BPTR"/>
			<arg name="block" type="CONST_APTR"/>
			<arg name="blocklen" type="ULONG"/>
			<arg name="number" type="ULONG"/>
		</method>
		<method name="FGets" result="STRPTR">
			<arg name="fh" type="BPTR"/>
			<arg name="buf" type="STRPTR"/>
			<arg name="buflen" type="ULONG"/>
		</method>
		<method name="FPuts" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="str" type="CONST_STRPTR"/>
		</method>
		<method name="OBSOLETEVFWritef" result="DEPRECATED VOID" status="private">
			<arg name="fh" type="BPTR"/>
			<arg name="format" type="CONST_STRPTR"/>
			<arg name="argarray" type="LONG *"/>
		</method>
		<method name="OBSOLETEFWritef" result="DEPRECATED VOID" status="private">
			<arg name="fh" type="BPTR"/>
			<arg name="format" type="CONST_STRPTR"/>
			<vararg name="tag1" type="const LONG *"/>
		</method>
		<method name="VFPrintf" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="format" type="CONST_STRPTR"/>
			<arg name="argarray" type="CONST_APTR"/>
		</method>
		<method name="FPrintf" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="format" type="CONST_STRPTR"/>
			<vararg name="arg1" type="ULONG"/>
		</method>
		<method name="FFlush" result="LONG">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="OBSOLETESetVBuf" result="DEPRECATED LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="buff" type="STRPTR"/>
			<arg name="type" type="LONG"/>
			<arg name="size" type="LONG"/>
		</method>
		<method name="DupLockFromFH" result="BPTR">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="OpenFromLock" result="BPTR">
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="ParentOfFH" result="BPTR">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="OBSOLETEExamineFH" result="DEPRECATED LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="fib" type="struct FileInfoBlock *"/>
		</method>
		<method name="SetDate" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="date" type="const struct DateStamp *"/>
		</method>
		<method name="NameFromLock" result="LONG">
			<arg name="lock" type="BPTR"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="len" type="LONG"/>
		</method>
		<method name="NameFromFH" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="len" type="LONG"/>
		</method>
		<method name="SplitName" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="separator" type="LONG"/>
			<arg name="buf" type="STRPTR"/>
			<arg name="oldpos" type="LONG"/>
			<arg name="size" type="LONG"/>
		</method>
		<method name="SameLock" result="LONG">
			<arg name="lock1" type="BPTR"/>
			<arg name="lock2" type="BPTR"/>
		</method>
		<method name="SetMode" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="mode" type="LONG"/>
		</method>
		<method name="OBSOLETEExAll" result="DEPRECATED LONG">
			<arg name="lock" type="BPTR"/>
			<arg name="buffer" type="struct ExAllData *"/>
			<arg name="size" type="LONG"/>
			<arg name="data" type="LONG"/>
			<arg name="control" type="struct ExAllControl *"/>
		</method>
		<method name="ReadSoftLink" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="lock" type="BPTR"/>
			<arg name="path" type="CONST_STRPTR"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="size" type="ULONG"/>
		</method>
		<method name="MakeLink" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="dest" type="APTR"/>
			<arg name="soft" type="LONG"/>
		</method>
		<method name="ChangeMode" result="LONG">
			<arg name="type" type="LONG"/>
			<arg name="fh" type="BPTR"/>
			<arg name="newmode" type="LONG"/>
		</method>
		<method name="OBSOLETESetFileSize" result="DEPRECATED LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="pos" type="LONG"/>
			<arg name="mode" type="LONG"/>
		</method>
		<method name="SetIoErr" result="LONG">
			<arg name="result" type="LONG"/>
		</method>
		<method name="Fault" result="LONG">
			<arg name="code" type="LONG"/>
			<arg name="header" type="CONST_STRPTR"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="len" type="LONG"/>
		</method>
		<method name="PrintFault" result="LONG">
			<arg name="code" type="LONG"/>
			<arg name="header" type="CONST_STRPTR"/>
		</method>
		<method name="ErrorReport" result="LONG">
			<arg name="code" type="LONG"/>
			<arg name="type" type="LONG"/>
			<arg name="arg1" type="ULONG"/>
			<arg name="device" type="struct MsgPort *"/>
		</method>
		<method name="PRIVATERequester" result="LONG" status="private">
			<arg name="s1" type="CONST_STRPTR"/>
			<arg name="s2" type="CONST_STRPTR"/>
			<arg name="s3" type="CONST_STRPTR"/>
			<arg name="idcmp" type="LONG"/>
		</method>
		<method name="Cli" result="struct CommandLineInterface *">
		</method>
		<method name="CreateNewProc" result="struct Process *">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="CreateNewProcTagList" result="struct Process *">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="CreateNewProcTags" result="struct Process *">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="RunCommand" result="LONG">
			<arg name="seg" type="BPTR"/>
			<arg name="stack" type="ULONG"/>
			<arg name="paramptr" type="CONST_STRPTR"/>
			<arg name="paramlen" type="LONG"/>
		</method>
		<method name="GetConsolePort" result="struct MsgPort *">
		</method>
		<method name="SetConsolePort" result="struct MsgPort *">
			<arg name="port" type="const struct MsgPort *"/>
		</method>
		<method name="GetFileSysPort" result="struct MsgPort *">
		</method>
		<method name="SetFileSysPort" result="struct MsgPort *">
			<arg name="port" type="const struct MsgPort *"/>
		</method>
		<method name="GetArgStr" result="STRPTR">
		</method>
		<method name="SetArgStr" result="STRPTR">
			<arg name="string" type="CONST_STRPTR"/>
		</method>
		<method name="FindCliProc" result="struct Process *">
			<arg name="num" type="ULONG"/>
		</method>
		<method name="MaxCli" result="ULONG">
		</method>
		<method name="SetCliCurrentDirName" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="GetCliCurrentDirName" result="LONG">
			<arg name="buf" type="STRPTR"/>
			<arg name="len" type="LONG"/>
		</method>
		<method name="SetCliProgramName" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="GetCliProgramName" result="LONG">
			<arg name="buf" type="STRPTR"/>
			<arg name="len" type="LONG"/>
		</method>
		<method name="SetCliPrompt" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="GetCliPrompt" result="LONG">
			<arg name="buf" type="STRPTR"/>
			<arg name="len" type="LONG"/>
		</method>
		<method name="SetProgramDir" result="BPTR">
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="GetProgramDir" result="BPTR">
		</method>
		<method name="SystemTagList" result="LONG">
			<arg name="command" type="CONST_STRPTR"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="System" result="LONG">
			<arg name="command" type="CONST_STRPTR"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="SystemTags" result="LONG">
			<arg name="command" type="CONST_STRPTR"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="AssignLock" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="AssignLate" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="path" type="CONST_STRPTR"/>
		</method>
		<method name="AssignPath" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="path" type="CONST_STRPTR"/>
		</method>
		<method name="AssignAdd" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="RemAssignList" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="GetDeviceProc" result="struct DevProc *">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="dp" type="struct DevProc *"/>
		</method>
		<method name="FreeDeviceProc" result="VOID">
			<arg name="dp" type="struct DevProc *"/>
		</method>
		<method name="LockDosList" result="struct DosList *">
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="UnLockDosList" result="VOID">
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="AttemptLockDosList" result="struct DosList *">
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="RemDosEntry" result="LONG">
			<arg name="dlist" type="struct DosList *"/>
		</method>
		<method name="AddDosEntry" result="LONG">
			<arg name="dlist" type="struct DosList *"/>
		</method>
		<method name="FindDosEntry" result="struct DosList *">
			<arg name="dlist" type="const struct DosList *"/>
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="NextDosEntry" result="struct DosList *">
			<arg name="dlist" type="const struct DosList *"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="MakeDosEntry" result="struct DosList *">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="type" type="LONG"/>
		</method>
		<method name="FreeDosEntry" result="VOID">
			<arg name="dlist" type="struct DosList *"/>
		</method>
		<method name="IsFileSystem" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="Format" result="int32">
			<arg name="filesystem" type="CONST_STRPTR"/>
			<arg name="volumename" type="CONST_STRPTR"/>
			<arg name="dostype" type="uint32"/>
			<arg name="flags" type="uint32"/>
		</method>
		<method name="Relabel" result="LONG">
			<arg name="drive" type="CONST_STRPTR"/>
			<arg name="newname" type="CONST_STRPTR"/>
		</method>
		<method name="Inhibit" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="onoff" type="LONG"/>
		</method>
		<method name="AddBuffers" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="number" type="LONG"/>
		</method>
		<method name="CompareDates" result="LONG">
			<arg name="date1" type="const struct DateStamp *"/>
			<arg name="date2" type="const struct DateStamp *"/>
		</method>
		<method name="DateToStr" result="LONG">
			<arg name="datetime" type="struct DateTime *"/>
		</method>
		<method name="StrToDate" result="LONG">
			<arg name="datetime" type="struct DateTime *"/>
		</method>
		<method name="OBSOLETEInternalLoadSeg" result="DEPRECATED BPTR" status="private">
			<arg name="fh" type="BPTR"/>
			<arg name="table" type="BPTR"/>
			<arg name="funcarray" type="const LONG *"/>
		</method>
		<method name="OBSOLETEInternalUnLoadSeg" result="DEPRECATED LONG" status="private">
			<arg name="seglist" type="BPTR"/>
			<arg name="freefunc " type="VOID (*)()"/>
		</method>
		<method name="OBSOLETENewLoadSeg" result="BPTR" status="private">
			<arg name="file" type="CONST_STRPTR"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="OBSOLETENewLoadSegTagList" result="BPTR" status="private">
			<arg name="file" type="CONST_STRPTR"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="OBSOLETENewLoadSegTags" result="BPTR" status="private">
			<arg name="file" type="CONST_STRPTR"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="AddSegment" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="seg" type="BPTR"/>
			<arg name="type" type="LONG"/>
		</method>
		<method name="FindSegment" result="struct DosResidentSeg *">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="seg" type="const struct DosResidentSeg *"/>
			<arg name="sys" type="LONG"/>
		</method>
		<method name="RemSegment" result="LONG">
			<arg name="seg" type="struct DosResidentSeg *"/>
		</method>
		<method name="CheckSignal" result="ULONG">
			<arg name="mask" type="ULONG"/>
		</method>
		<method name="ReadArgs" result="struct RDArgs *">
			<arg name="arg_template" type="CONST_STRPTR"/>
			<arg name="array" type="LONG *"/>
			<arg name="args" type="struct RDArgs *"/>
		</method>
		<method name="FindArg" result="LONG">
			<arg name="arg_template" type="CONST_STRPTR"/>
			<arg name="keyword" type="CONST_STRPTR"/>
		</method>
		<method name="ReadItem" result="LONG">
			<arg name="buffer" type="STRPTR"/>
			<arg name="maxchars" type="LONG"/>
			<arg name="cSource" type="struct CSource *"/>
		</method>
		<method name="StrToLong" result="LONG">
			<arg name="string" type="CONST_STRPTR"/>
			<arg name="value" type="LONG *"/>
		</method>
		<method name="MatchFirst" result="LONG">
			<arg name="pat" type="CONST_STRPTR"/>
			<arg name="anchor" type="struct AnchorPath *"/>
		</method>
		<method name="MatchNext" result="LONG">
			<arg name="anchor" type="struct AnchorPath *"/>
		</method>
		<method name="MatchEnd" result="VOID">
			<arg name="anchor" type="struct AnchorPath *"/>
		</method>
		<method name="ParsePattern" result="LONG">
			<arg name="pat" type="CONST_STRPTR"/>
			<arg name="buf" type="STRPTR"/>
			<arg name="buflen" type="LONG"/>
		</method>
		<method name="MatchPattern" result="LONG">
			<arg name="pat" type="CONST_STRPTR"/>
			<arg name="str" type="CONST_STRPTR"/>
		</method>
		<method name="Reserved3" result="void" status="unimplemented"/>
		<method name="FreeArgs" result="VOID">
			<arg name="args" type="struct RDArgs *"/>
		</method>
		<method name="StartPart" result="STRPTR">
			<arg name="path" type="CONST_STRPTR"/>
		</method>
		<method name="FilePart" result="CONST_STRPTR">
			<arg name="path" type="CONST_STRPTR"/>
		</method>
		<method name="PathPart" result="STRPTR">
			<arg name="path" type="CONST_STRPTR"/>
		</method>
		<method name="AddPart" result="LONG">
			<arg name="destdirname" type="STRPTR"/>
			<arg name="filename" type="CONST_STRPTR"/>
			<arg name="size" type="ULONG"/>
		</method>
		<method name="StartNotify" result="LONG">
			<arg name="notify" type="struct NotifyRequest *"/>
		</method>
		<method name="EndNotify" result="LONG">
			<arg name="notify" type="struct NotifyRequest *"/>
		</method>
		<method name="SetVar" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="buffer" type="CONST_STRPTR"/>
			<arg name="size" type="LONG"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="GetVar" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="size" type="LONG"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="DeleteVar" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="FindVar" result="struct LocalVar *">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="type" type="ULONG"/>
		</method>
		<method name="PRIVATECliInit" result="LONG" status="private">
			<arg name="dp" type="struct DosPacket *"/>
		</method>
		<method name="CliInitNewcli" result="LONG">
			<arg name="dp" type="struct DosPacket *"/>
		</method>
		<method name="CliInitRun" result="LONG">
			<arg name="dp" type="struct DosPacket *"/>
		</method>
		<method name="WriteChars" result="LONG">
			<arg name="buf" type="CONST_STRPTR"/>
			<arg name="buflen" type="ULONG"/>
		</method>
		<method name="PutStr" result="LONG">
			<arg name="str" type="CONST_STRPTR"/>
		</method>
		<method name="VPrintf" result="LONG">
			<arg name="format" type="CONST_STRPTR"/>
			<arg name="argarray" type="CONST_APTR"/>
		</method>
		<method name="Printf" result="LONG">
			<arg name="format" type="CONST_STRPTR"/>
			<vararg name="arg1" type="ULONG"/>
		</method>
		<method name="Reserved5" result="void" status="unimplemented"/>
		<method name="ParsePatternNoCase" result="LONG">
			<arg name="pat" type="CONST_STRPTR"/>
			<arg name="buf" type="STRPTR"/>
			<arg name="buflen" type="LONG"/>
		</method>
		<method name="MatchPatternNoCase" result="LONG">
			<arg name="pat" type="CONST_STRPTR"/>
			<arg name="str" type="CONST_STRPTR"/>
		</method>
		<method name="PRIVATEDosGetString" result="STRPTR" status="private">
			<arg name="num" type="LONG"/>
		</method>
		<method name="SameDevice" result="LONG">
			<arg name="lock1" type="BPTR"/>
			<arg name="lock2" type="BPTR"/>
		</method>
		<method name="OBSOLETEExAllEnd" result="DEPRECATED VOID">
			<arg name="lock" type="BPTR"/>
			<arg name="buffer" type="struct ExAllData *"/>
			<arg name="size" type="LONG"/>
			<arg name="data" type="LONG"/>
			<arg name="control" type="struct ExAllControl *"/>
		</method>
		<method name="OBSOLETESetOwner" result="DEPRECATED LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="owner_info" type="ULONG"/>
		</method>
		<method name="GetEntryData" result="LONG">
		</method>
		<method name="ReadLineItem" result="LONG">
			<arg name="buffer" type="STRPTR"/>
			<arg name="maxchars" type="LONG"/>
			<arg name="taglist" type="const struct TagItem *"/>
		</method>
		<method name="ReadLineItemTags" result="LONG">
			<arg name="buffer" type="STRPTR"/>
			<arg name="maxchars" type="LONG"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="PRIVATEInternalRunCommand" result="LONG" status="private">
			<arg name="seg" type="BPTR"/>
			<arg name="stksize" type="ULONG"/>
			<arg name="args" type="CONST_STRPTR"/>
			<arg name="arglen" type="LONG"/>
		</method>
		<method name="GetCurrentDir" result="BPTR">
		</method>
		<method name="NonBlockingModifyDosEntry" result="LONG">
			<arg name="dl" type="struct DosList *"/>
			<arg name="mode" type="LONG"/>
			<arg name="arg1" type="APTR"/>
			<arg name="arg2" type="APTR"/>
		</method>
		<method name="SecondsToDateStamp" result="struct DateStamp *">
			<arg name="seconds" type="ULONG"/>
			<arg name="ds" type="struct DateStamp *"/>
		</method>
		<method name="DateStampToSeconds" result="ULONG">
			<arg name="ds" type="const struct DateStamp *"/>
		</method>
		<method name="FixDateStamp" result="LONG">
			<arg name="ds" type="struct DateStamp *"/>
		</method>
		<method name="AddDates" result="LONG">
			<arg name="to" type="struct DateStamp *"/>
			<arg name="from" type="const struct DateStamp *"/>
		</method>
		<method name="SubtractDates" result="LONG">
			<arg name="to" type="struct DateStamp *"/>
			<arg name="from" type="const struct DateStamp *"/>
		</method>
		<method name="AddSegmentTagList" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="type" type="LONG"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="ParseCapturePattern" result="LONG">
			<arg name="pat" type="CONST_STRPTR"/>
			<arg name="dst" type="STRPTR"/>
			<arg name="length" type="LONG"/>
			<arg name="casesen" type="LONG"/>
		</method>
		<method name="CapturePattern" result="LONG">
			<arg name="pat" type="CONST_STRPTR"/>
			<arg name="str" type="CONST_STRPTR"/>
			<arg name="casesen" type="LONG"/>
			<arg name="cap" type="struct CapturedExpression **"/>
		</method>
		<method name="ReleaseCapturedExpressions" result="VOID">
			<arg name="first" type="struct CapturedExpression *"/>
		</method>
		<method name="FindTrackedAddress" result="VOID">
			<arg name="address" type="CONST_APTR"/>
			<arg name="hook" type="struct Hook *"/>
		</method>
		<method name="TrackAddressList" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="segment" type="BPTR"/>
			<arg name="extra_info" type="CONST_APTR"/>
			<arg name="extra_info_size" type="LONG"/>
			<arg name="aas" type="const struct AddressAndSize *"/>
			<arg name="num_pairs" type="LONG"/>
		</method>
		<method name="TrackSegmentList" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="segment" type="BPTR"/>
			<arg name="extra_info" type="CONST_APTR"/>
			<arg name="extra_info_size" type="LONG"/>
		</method>
		<method name="UnTrackAddress" result="VOID">
			<arg name="address" type="APTR"/>
		</method>
		<method name="UnTrackSegmentList" result="VOID">
			<arg name="segment" type="BPTR"/>
		</method>
		<method name="GetExitData" result="LONG">
		</method>
		<method name="PutErrStr" result="LONG">
			<arg name="str" type="CONST_STRPTR"/>
		</method>
		<method name="ErrorOutput" result="BPTR">
		</method>
		<method name="SelectErrorOutput" result="BPTR">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="MountDevice" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="type" type="LONG"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="MountDeviceTags" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="type" type="LONG"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="SetProcWindow" result="APTR">
			<arg name="win" type="CONST_APTR"/>
		</method>
		<method name="FindSegmentStackSize" result="ULONG">
			<arg name="segment" type="BPTR"/>
		</method>
		<method name="CalculateSegmentChecksum" result="ULONG">
			<arg name="segment" type="BPTR"/>
		</method>
		<method name="AllocSegList" result="BPTR">
			<arg name="entry" type="CONST_APTR"/>
			<arg name="data" type="CONST_APTR"/>
			<arg name="datalen" type="ULONG"/>
			<arg name="identkey" type="ULONG"/>
		</method>
		<method name="GetSegListInfo" result="LONG">
			<arg name="seglist" type="BPTR"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="GetSegListInfoTags" result="LONG">
			<arg name="seglist" type="BPTR"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="AddSegListTail" result="LONG">
			<arg name="bseglist_head" type="BPTR"/>
			<arg name="bseg_new" type="BPTR"/>
		</method>
		<method name="DevNameFromLock" result="LONG">
			<arg name="lock" type="BPTR"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="buflen" type="LONG"/>
			<arg name="mode"   type="LONG"/>
		</method>
		<method name="GetProcMsgPort" result="struct MsgPort *">
			<arg name="proc" type="const struct Process *"/>
		</method>
		<method name="WaitForData" result="LONG">
			<arg name="stream" type="BPTR"/>
			<arg name="data_direction" type="LONG"/>
			<arg name="timeout" type="LONG"/>
		</method>
		<method name="SetBlockingMode" result="LONG">
			<arg name="stream" type="BPTR"/>
			<arg name="new_blocking_mode" type="LONG"/>
		</method>
		<method name="SetCurrentCmdPathList" result="struct PathNode *">
			<arg name="pn" type="struct PathNode *"/>
		</method>
		<method name="AllocateCmdPathList" result="struct PathNode *">
			<arg name="first_lock" type="BPTR"/>
		</method>
		<method name="FreeCmdPathList" result="VOID">
			<arg name="pn" type="struct PathNode *"/>
		</method>
		<method name="RemoveCmdPathNode" result="struct PathNode *">
			<arg name="pn" type="struct PathNode *"/>
			<arg name="lock" type="BPTR"/>
		</method>
		<method name="AddCmdPathNode" result="struct PathNode *">
			<arg name="pn" type="struct PathNode *"/>
			<arg name="lock" type="BPTR"/>
			<arg name="where" type="LONG"/>
		</method>
		<method name="SearchCmdPathList" result="LONG">
			<arg name="pn" type="const struct PathNode *"/>
			<arg name="h" type="const struct Hook *"/>
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="SearchCmdPathListTags" result="LONG">
			<arg name="pn" type="const struct PathNode *"/>
			<arg name="h" type="const struct Hook *"/>
			<arg name="name" type="CONST_STRPTR"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="ScanVars" result="LONG">
			<arg name="hook" type="const struct Hook *"/>
			<arg name="flags" type="ULONG"/>
			<arg name="userdata" type="CONST_APTR"/>
		</method>
		<method name="GetProcSegList" result="BPTR">
			<arg name="proc" type="const struct Process *"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="HexToLong" result="LONG">
			<arg name="string" type="CONST_STRPTR"/>
			<arg name="value_ptr" type="ULONG *"/>
		</method>
		<method name="GetDeviceProcFlags" result="struct DevProc *">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="odp" type="struct DevProc *"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="DosControl" result="LONG">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="DosControlTags" result="LONG">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="CreateDirTree" result="BPTR">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="NotifyVar" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="hook" type="const struct Hook *"/>
			<arg name="flags" type="LONG"/>
			<arg name="userdata" type="CONST_APTR"/> 
		</method>
		<method name="GetDiskFileSystemData" result="struct FileSystemData *">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="FreeDiskFileSystemData" result="VOID">
			<arg name="fsd" type="struct FileSystemData *"/>
		</method>
		<method name="FOpen" result="BPTR">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="mode" type="LONG"/>
			<arg name="bufsize" type="LONG"/>
		</method>
		<method name="FClose" result="LONG">
			<arg name="scb" type="BPTR"/>
		</method>
		<method name="FOpenFromLock" result="BPTR">
			<arg name="lock" type="BPTR"/>
			<arg name="bufsize" type="LONG"/>
		</method>
		<method name="DupCmdPathList" result="struct PathNode *">
			<arg name="source" type="const struct PathNode *"/>
		</method>
		<method name="TimedDosRequester" result="LONG">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="TimedDosRequesterTags" result="LONG">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="RenameDosEntry" result="LONG">
			<arg name="dlist" type="struct DosList *"/>
			<arg name="newname" type="CONST_STRPTR"/>
		</method>
		<method name="DismountDevice" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="flags" type="ULONG"/>
			<arg name="reserved" type="APTR"/>
		</method>
		<method name="DupFileHandle" result="BPTR">
			<arg name="scb" type="BPTR"/>
		</method>
		<method name="DevNameFromFH" result="LONG">
			<arg name="scb" type="BPTR"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="buflen" type="LONG"/>
			<arg name="mode"   type="LONG"/>
		</method>
		<method name="AssignAddToList" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="lock" type="BPTR"/>
			<arg name="endpos" type="LONG"/>
		</method>
		<method name="SetFileHandleAttr" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="SetFileHandleAttrTags" result="LONG">
			<arg name="fh" type="BPTR"/>
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="FileSystemAttr" result="LONG">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="FileSystemAttrTags" result="LONG">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="FReadLine" result="LONG">
			<arg name="fh" type="BPTR"/>
			<arg name="frld" type="struct FReadLineData *"/>
		</method>
		<method name="CopyStringBSTRToC" result="ULONG">
			<arg name="bsrc" type="BSTR"/>
			<arg name="dst" type="STRPTR"/>
			<arg name="siz" type="ULONG"/>
		</method>
		<method name="CopyStringCToBSTR" result="ULONG">
			<arg name="src" type="CONST_STRPTR"/>
			<arg name="bdest" type="BSTR"/>
			<arg name="siz" type="ULONG"/>
		</method>
		<method name="GetFilePosition" result="int64">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="ChangeFilePosition" result="int32">
			<arg name="file" type="BPTR"/>
			<arg name="position" type="int64"/>
			<arg name="offset" type="int32"/>
		</method>
		<method name="ChangeFileSize" result="int32">
			<arg name="fh" type="BPTR"/>
			<arg name="pos" type="int64"/>
			<arg name="mode" type="int32"/>
		</method>
		<method name="GetFileSize" result="int64">
			<arg name="fh" type="BPTR"/>
		</method>
		<method name="DoPkt64" result="int64">
			<arg name="sendport" type="struct MsgPort *"/>
			<arg name="type" type="int32"/>
			<arg name="arg1" type="int32"/>
			<arg name="arg2" type="int64"/>
			<arg name="arg3" type="int32"/>
			<arg name="arg4" type="int32"/>
			<arg name="arg5" type="int64"/>
		</method>
		<method name="PRIVATEDoPkt64" result="int64" status="private">
			<arg name="sendport" type="struct MsgPort *"/>
			<arg name="type" type="int32"/>
			<arg name="arg1" type="int32"/>
			<arg name="arg2" type="int64"/>
			<arg name="arg3" type="int32"/>
			<arg name="arg4" type="int32"/>
			<arg name="arg5" type="int64"/>
		</method>
		<method name="Reserved8" result="void" status="unimplemented"/>
		<method name="Reserved9" result="void" status="unimplemented"/>
		<method name="Reserved10" result="void" status="unimplemented"/>
		<method name="ProcessScan" result="LONG">
			<arg name="hook" type="const struct Hook *"/>
			<arg name="userdata" type="CONST_APTR"/>
			<arg name="reserved" type="ULONG"/>
		</method>
		<method name="NotifyDosListChange" result="LONG">
			<arg name="process" type="struct Process *"/>
			<arg name="signalnum" type="ULONG"/>
			<arg name="reserved" type="ULONG"/>
		</method>
		<method name="NotifyProcListChange" result="LONG">
			<arg name="process" type="struct Process *"/>
			<arg name="signalnum" type="ULONG"/>
			<arg name="reserved" type="ULONG"/>
		</method>
		<method name="GetDiskInfo" result="LONG">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="GetDiskInfoTags" result="LONG">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="WriteProtectVolume" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="on_off" type="LONG"/>
			<arg name="passkey" type="ULONG"/>
			<arg name="reserved" type="LONG"/>
		</method>
		<method name="ExamineObject" result="struct ExamineData *">
			<arg name="ctags" type="const struct TagItem *"/>
		</method>
		<method name="ExamineObjectTags" result="struct ExamineData *">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="ExamineDir" result="struct ExamineData *">
			<arg name="context" type="APTR"/>
		</method>
		<method name="ObtainDirContext" result="APTR">
			<arg name="ctags" type="const struct TagItem *"/>
		</method>
		<method name="ObtainDirContextTags" result="APTR">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="ReleaseDirContext" result="VOID">
			<arg name="contx" type="APTR"/>
		</method>
		<method name="GetOwnerInfo" result="LONG">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="GetOwnerInfoTags" result="LONG">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="SetOwnerInfo" result="LONG">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="SetOwnerInfoTags" result="LONG">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="LockTagList" result="BPTR">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="LockTags" result="BPTR">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="GetPID" result="ULONG">
			<arg name="process" type="const struct Process *"/>
			<arg name="which" type="LONG"/>
		</method>
		<method name="FlushVolume" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="ObtainConsoleData" result="struct ConsoleWindowData *">
			<arg name="ctags" type="const struct TagItem *"/>
		</method>
		<method name="ObtainConsoleDataTags" result="struct ConsoleWindowData *">
			<vararg name="tag1" type="ULONG"/>
		</method>
		<method name="ReleaseConsoleData" result="VOID">
			<arg name="data" type="struct ConsoleWindowData *"/>
		</method>
		<method name="Serialize" result="LONG">
			<arg name="name" type="CONST_STRPTR"/>
		</method>
		<method name="NameFromPort" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="buflen" type="LONG"/>
			<arg name="add_colon" type="LONG"/>
		</method>
		<method name="DevNameFromPort" result="LONG">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="buffer" type="STRPTR"/>
			<arg name="buflen" type="LONG"/>
			<arg name="add_colon" type="LONG"/>
		</method>
		<method name="SameFH" result="LONG">
			<arg name="scb1" type="BPTR"/>
			<arg name="scb2" type="BPTR"/>
		</method>
		<method name="LockRecord" result="int32">
			<arg name="fh" type="BPTR"/>
			<arg name="offset" type="int64"/>
			<arg name="length" type="int64"/>
			<arg name="mode" type="uint32"/>
			<arg name="timeout" type="uint32"/>
		</method>
		<method name="UnLockRecord" result="int32">
			<arg name="fh" type="BPTR"/>
			<arg name="offset" type="int64"/>
			<arg name="length" type="int64"/>
		</method>
		<method name="IsFileSystemPort" result="int32">
			<arg name="port" type="struct MsgPort *"/>
		</method>
		<method name="InhibitPort" result="int32">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="state" type="int32"/>
		</method>
		<method name="FormatPort" result="int32">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="volumename" type="CONST_STRPTR"/>
			<arg name="dostype" type="uint32"/>
			<arg name="flags" type="uint32"/>
		</method>
		<method name="SerializePort" result="int32">
			<arg name="port" type="struct MsgPort *"/>
		</method>
		<method name="FlushVolumePort" result="int32">
			<arg name="port" type="struct MsgPort *"/>
		</method>
		<method name="FileHandleScan" result="LONG">
			<arg name="hook" type="const struct Hook *"/>
			<arg name="userdata" type="CONST_APTR"/>
			<arg name="reserved" type="ULONG"/>
		</method>
		<method name="GetFileSystemVectorPort" result="struct FileSystemVectorPort *">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="min_version" type="uint32"/>
		</method>
		<method name="ResolvePath" result="int32">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="path" type="CONST_STRPTR"/>
			<arg name="inlock" type="BPTR"/>
			<arg name="out"  type="STRPTR"/>
			<arg name="outlen" type="uint32"/>
			<arg name="outdir" type="BPTR *"/>
			<arg name="slcount" type="uint32 *"/>
		</method>
		<method name="WriteProtectVolumePort" result="int32">
			<arg name="port" type="struct MsgPort *"/>
			<arg name="on_off" type="int32"/>
			<arg name="passkey" type="uint32"/>
			<arg name="reserved" type="int32"/>
		</method>
		<method name="AsyncIO" result="int32">
			<arg name="tags" type="const struct TagItem *"/>
		</method>
		<method name="AsyncIOTags" result="int32">
			<vararg name="tag1" type="uint32"/>
		</method>
		<method name="WaitForChildExit" result="int32">
			<arg name="pid" type="uint32"/>
		</method>
		<method name="CheckForChildExit" result="int32">
			<arg name="pid" type="uint32"/>
		</method>
		<method name="Reserved15" result="void" status="unimplemented"/>
		<method name="Reserved16" result="void" status="unimplemented"/>
		<method name="Reserved17" result="void" status="unimplemented"/>
		<method name="Reserved18" result="void" status="unimplemented"/>
	</interface>
</library>


