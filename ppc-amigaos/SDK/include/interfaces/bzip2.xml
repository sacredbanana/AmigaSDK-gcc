<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE library SYSTEM "library.dtd">
<!-- autogenerated by fdtrans v52.1 -->
<library name="bzip2" basename="BZip2Base" basetype="Library" openname="bzip2.library">
	<include>libraries/bzip2.h</include>
	<include>stdio.h</include>
	<interface name="main" version="1.0" struct="BZip2IFace" prefix="_BZip2_" asmprefix="IBZip2" global="IBZip2">
		<method name="Obtain" result="uint32"/>
		<method name="Release" result="uint32"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>
		<method name="BZ2_bzlibVersion" result="const char *">
		</method>
		<method name="BZ2_bzCompressInit" result="int">
			<arg name="strm" type="bz_stream *"/>
			<arg name="blockSize100k" type="int"/>
			<arg name="verbosity" type="int"/>
			<arg name="workFactor" type="int"/>
		</method>
		<method name="BZ2_bzCompress" result="int">
			<arg name="strm" type="bz_stream *"/>
			<arg name="action" type="int"/>
		</method>
		<method name="BZ2_bzCompressEnd" result="int">
			<arg name="strm" type="bz_stream *"/>
		</method>
		<method name="BZ2_bzDecompressInit" result="int">
			<arg name="strm" type="bz_stream *"/>
			<arg name="verbosity" type="int"/>
			<arg name="small" type="int"/>
		</method>
		<method name="BZ2_bzDecompress" result="int">
			<arg name="strm" type="bz_stream *"/>
		</method>
		<method name="BZ2_bzDecompressEnd" result="int">
			<arg name="strm" type="bz_stream *"/>
		</method>
		<method name="BZ2_bzBuffToBuffCompress" result="int">
			<arg name="dest" type="char *"/>
			<arg name="destLen" type="unsigned int *"/>
			<arg name="source" type="char *"/>
			<arg name="sourceLen" type="unsigned int"/>
			<arg name="blockSize100k" type="int"/>
			<arg name="verbosity" type="int"/>
			<arg name="workFactor" type="int"/>
		</method>
		<method name="BZ2_bzBuffToBuffDecompress" result="int">
			<arg name="dest" type="char *"/>
			<arg name="destLen" type="unsigned int *"/>
			<arg name="source" type="char *"/>
			<arg name="sourceLen" type="unsigned int"/>
			<arg name="small" type="int"/>
			<arg name="verbosity" type="int"/>
		</method>
		<method name="BZ2_bzReadOpen" result="BZFILE *">
			<arg name="bzerror" type="int *"/>
			<arg name="f" type="FILE *"/>
			<arg name="verbosity" type="int"/>
			<arg name="small" type="int"/>
			<arg name="unused" type="void *"/>
			<arg name="nUnused" type="int"/>
		</method>
		<method name="BZ2_bzReadClose" result="void">
			<arg name="bzerror" type="int *"/>
			<arg name="b" type="BZFILE *"/>
		</method>
		<method name="BZ2_bzReadGetUnused" result="void">
			<arg name="bzerror" type="int *"/>
			<arg name="b" type="BZFILE *"/>
			<arg name="unused" type="void **"/>
			<arg name="nUnused" type="int *"/>
		</method>
		<method name="BZ2_bzRead" result="int">
			<arg name="bzerror" type="int *"/>
			<arg name="b" type="BZFILE *"/>
			<arg name="buf" type="void *"/>
			<arg name="len" type="int"/>
		</method>
		<method name="BZ2_bzWriteOpen" result="BZFILE *">
			<arg name="bzerror" type="int *"/>
			<arg name="f" type="FILE *"/>
			<arg name="blockSize100k" type="int"/>
			<arg name="verbosity" type="int"/>
			<arg name="workFactor" type="int"/>
		</method>
		<method name="BZ2_bzWrite" result="void">
			<arg name="bzerror" type="int *"/>
			<arg name="b" type="BZFILE *"/>
			<arg name="buf" type="void *"/>
			<arg name="len" type="int"/>
		</method>
		<method name="BZ2_bzWriteClose" result="void">
			<arg name="bzerror" type="int *"/>
			<arg name="b" type="BZFILE *"/>
			<arg name="abandon" type="int"/>
			<arg name="nbytes_in" type="unsigned int *"/>
			<arg name="nbytes_out" type="unsigned int *"/>
		</method>
		<method name="BZ2_bzWriteClose64" result="void">
			<arg name="bzerror" type="int *"/>
			<arg name="b" type="BZFILE *"/>
			<arg name="abandon" type="int"/>
			<arg name="nbytes_in_lo32" type="unsigned int *"/>
			<arg name="nbytes_in_hi32" type="unsigned int *"/>
			<arg name="nbytes_out_lo32" type="unsigned int *"/>
			<arg name="nbytes_out_hi32" type="unsigned int *"/>
		</method>
		<method name="BZ2_bzopen" result="BZFILE *">
			<arg name="path" type="const char *"/>
			<arg name="mode" type="const char *"/>
		</method>
		<method name="BZ2_bzdopen" result="BZFILE *">
			<arg name="fd" type="int"/>
			<arg name="mode" type="const char *"/>
		</method>
		<method name="BZ2_bzread" result="int">
			<arg name="b" type="BZFILE *"/>
			<arg name="buf" type="void *"/>
			<arg name="len" type="int"/>
		</method>
		<method name="BZ2_bzwrite" result="int">
			<arg name="b" type="BZFILE *"/>
			<arg name="buf" type="void *"/>
			<arg name="len" type="int"/>
		</method>
		<method name="BZ2_bzflush" result="int">
			<arg name="b" type="BZFILE *"/>
		</method>
		<method name="BZ2_bzclose" result="void">
			<arg name="b" type="BZFILE *"/>
		</method>
		<method name="BZ2_bzerror" result="const char *">
			<arg name="b" type="BZFILE *"/>
			<arg name="errnum" type="int *"/>
		</method>
	</interface>
</library>
