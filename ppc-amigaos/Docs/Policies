------------------------------------------------------------------------
                   Using MUI in your own applications
------------------------------------------------------------------------

The  following  text  describes the rules and caveats if you want to use
the  MUI  system  in  one of your applications. Please read the complete
document,  following  the  rules  are  some  paragraphs that try to give
reasons why things are handled this way.

Since  the  rules  are different for freely distributable and commercial
applications, some definitions follow before we get started:

In  this  document,  the  term "freely distributable" refers to software
which  is  either really for free (costs nothing) or which lets the user
decide  if  he  wants  to  pay.  Some  restrictions for not paying users
(better: enhancements for paying users) are acceptable, but the software
has to work even without paying. Freely distributable software is one of
public  domain (not copyrighted), freeware (copyrighted but for free) or
shareware (copyrighted and requesting a rather low fee).

Every  program  that  doesn't fit into the freely distributable group is
considered  commercial.  If  you  are  unsure  about  the  type  of your
application, just ask.


------------------------------------------------------------------------
                     Freely Distributable Software
------------------------------------------------------------------------

Freely  distributable  software may use MUI for free, no special license
agreements  are needed. However, redistributing parts of MUI (libraries,
classes,  preferences) together with your application is neither allowed
nor  necessary.  Users of FD applications are usually enough experienced
to  look out for the complete MUI package themselves. Not redistributing
MUI  helps  eliminating  network traffic and keeps down archive size. If
you really feel that your application absolutely needs a MUI coming with
it, just contact me. I am sure we will find a solution.

The  copyright  information  contained in all programs using MUI and the
accompanying  documentation  should state that this program uses MUI and
that MUI was written by Stefan Stuntz.

Freely distributable software should also contain some basic information
about MUI to help unexperienced users to find it and to make some little
advertisement  for  my  system. You can either directly use the supplied
"ReadMe.mui"  for  this  purpose or say something similiar with your own
words.  If  you  really  dislike  the advertisement, I won't mind if you
remove  the  registration  part from the readme file. But hey... you got
this fantastic MUI for free so why not help me making some money? :-)


------------------------------------------------------------------------
                          Commercial Software
------------------------------------------------------------------------

MUI  within  commercial software is not for free. Your company will have
to pay a licensing fee somewhere between US$ 50.- for very small and US$
500.-  for  very  big  applications. Usually, the price is calculated by
multiplying  the suggested retail price of your product with a factor of
five, but this is only some kind of very rough example. Rather expensive
applications  with  probably  very  few customers (e.g. mailbox or other
"special  purpose"  software) will of course get other conditions. Also,
if you plan to use MUI for more applications, multi application licenses
are available. Just contact me and ask.

The  license  agreement  will  allow  you  to  use  the  current and all
following versions of MUI with the current and all following versions of
your product. You will also get the rights to reproduce and redistribute
some  of  the  files  from  the  MUI  distribution, including the master
library,  the  classes  and  the preferences program. Special commercial
versions  of  this  preferences  program without shareware reminders are
available on demand.

The  copyright  information  contained in all programs using MUI and the
accompanying  documentation  should state that this program uses MUI and
that  MUI  is  copyrighted  by  and reproduced under license from Stefan
Stuntz.


------------------------------------------------------------------------
                               Discussion
------------------------------------------------------------------------

First  of  all,  these  policies  are  not  some  kind  of quick hack. I
considered lots of other possibilities and it took quite a long time for
me to decide. Please read the following paragraphs carefully, I hope you
will understand my reasons.

There are some main destinations I wanted to reach:

- MUI shall become a standard in user interface generation on the Amiga.
  I  really  want  to  see lots of products having powerful and flexible
  GUIs  that  adapt to a users wishes. And I don't want to see hardcoded
  topaz/8 applications on a 1280x1024 resolution making my eyes go crazy
  anymore.

- MUI  shall  be  used  in all kinds of applications, regardless whether
  they  are distributed as Public Domain, Freeware, Giftware, Shareware,
  Commercial Ware or whatever else.

- And... please excuse me... I want to make some money with MUI. :-)


First  of all, if something wants to become a standard on the Amiga, the
public  domain  and  freeware  scene  is  the  most  important  thing to
consider.  There  is  a really huge number of programmers that work just
for  fun,  supplying  all the little (and sometimes big) tools that make
our  lifes  easier.  These  people do a really great job and surely will
help keeping the Amiga alive for a long long time.

Of  course I could have released MUI as a completely commercial product,
sold  for  a somewhat high price. Some companies might have bought it to
create  some  of  their applications, but only very few public domain or
shareware programmers would have been willing to pay such a considerable
amount  of  money.  And even if some of them would, MUI would never have
the  chance  to become a real standard. Besides this fact, I don't think
that  it's  a  good idea to take money from people who spend their spare
time  in  writing  public  domain applications. If an application is for
free, the use of MUI has to be free too.

Since  charging programmers is not what I wanted to do, the only way for
me to get some money out of MUI is to have the users of applications pay
for  it.  Well,  in fact they are the ones who benefit from flexible and
configurable  programs,  charging  them seems quite reasonable. Luckily,
there  are a lot more users than programmers. This results in a very low
price  which  seems  to be even more cheap if you consider that a single
registration  allows  configuration  of  all  currently existing and all
future MUI applications.

Furthermore,  I  do  not  force people to register. Most other shareware
products  allow some period of evaluation time after that one either has
to  register  or  to  delete  the  program.  This  is  not true for MUI.
Registration  is only necessary when some advanced configuration options
are  wanted.  If  one feels he doesn't need fancy background patterns or
customized  listview  smoothing,  he  may perfectly use MUI applications
without registrating for MUI.

Distribution policies for commercial applications are kind of different.
If I see someone making real money with the aid of my work, it should be
easily  understandable  that  I  also want to get a little piece of that
cake. That's why the use of MUI is not for free in commercial programs.

My  first  ideas  were  to  have  some  kind  of percentage fee per sold
application  but this would become uncontrollable and too complicated to
handle  quite  soon.  So  I  decided to have a fixed license fee which's
amount  depends  on  the size of the product. Thus, small and relatively
cheap  programs with probably not too much financial profit will be able
to  get  a cheap MUI license whereas big products will have to pay a bit
more.

If  you consider the licensing fee as too high, please think of how long
a  programmer would work for some $100 and how long it would take him to
create  a  flexible  and  powerful user interface. Of course, building a
hard  coded topaz/8 GUI with some of the available interface builders is
not  that  difficult either, but if that's what you want for your users,
why are you actually thinking about MUI?

I  understand  that  it's nearly impossible to sell a commercial product
together  with  a MUI preferences program with some disabled options and
shareware  reminders.  Therefore, commercial licensees may get a special
stripped  version of this tool which only contains the possible settings
of  an unregistered MUI but doesn't contain any reminders or other stuff
unsuitable  for  commercial applications. I am also thinking of a system
that  allows commercial programs to come with full featured preferences,
restricted  only to the specific application. These application specific
prefs  would  probably  be supplied as linkable code and could simply be
called with a "GUI Preferences" menu item for better integration.

I really hope that these policies will satisfy the requirements of both,
freeware  authors  and  commercial  companies  and  of  course  also  of
application  users. Currently, this seems to work quite well. Anyway, if
you  have  some  other  ideas or suggestions how things could be handled
better,  feel  free  to  tell me about them. I am always looking for new
ideas.  But  please  keep  in  mind my main destinations mentioned above
since I won't give up any of them.



                             Stefan Stuntz
