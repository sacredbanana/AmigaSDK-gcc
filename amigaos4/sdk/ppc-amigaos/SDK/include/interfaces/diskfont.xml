<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE library SYSTEM "library.dtd">
<!-- autogenerated by fdtrans v51.17 -->
<library name="diskfont" basename="DiskfontBase" openname="diskfont.library">
	<include>dos/dos.h</include>
	<include>libraries/diskfont.h</include>
	<include>utility/tagitem.h</include>
	<include>graphics/rastport.h</include>
	<interface name="main" version="1.0" struct="DiskfontIFace" prefix="_Diskfont_" asmprefix="IDiskfont" global="IDiskfont">
		<method name="Obtain" result="ULONG"/>
		<method name="Release" result="ULONG"/>
		<method name="Expunge" result="void" status="unimplemented"/>
		<method name="Clone" result="struct Interface *" status="unimplemented"/>
		<method name="OpenDiskFont" result="struct TextFont *">
			<arg name="textAttr" type="const struct TextAttr *"/>
		</method>
		<method name="AvailFonts" result="LONG">
			<arg name="buffer" type="STRPTR"/>
			<arg name="bufBytes" type="LONG"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="NewFontContents" result="struct FontContentsHeader *">
			<arg name="fontsLock" type="BPTR"/>
			<arg name="fontName" type="CONST_STRPTR"/>
		</method>
		<method name="DisposeFontContents" result="VOID">
			<arg name="fontContentsHeader" type="struct FontContentsHeader *"/>
		</method>
		<method name="NewScaledDiskFont" result="struct DiskFontHeader *">
			<arg name="sourceFont" type="struct TextFont *"/>
			<arg name="destTextAttr" type="struct TextAttr *"/>
		</method>
		<method name="GetDiskFontCtrl" result="LONG">
			<arg name="tagid" type="LONG"/>
		</method>
		<method name="SetDiskFontCtrlA" result="VOID">
			<arg name="taglist" type="const struct TagItem *"/>
		</method>
		<method name="SetDiskFontCtrl" result="VOID">
			<vararg name="tag1" type="Tag"/>
		</method>
		<method name="EOpenEngine" result="LONG">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
		</method>
		<method name="ECloseEngine" result="VOID">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
		</method>
		<method name="ESetInfoA" result="ULONG">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
			<arg name="taglist" type="const struct TagItem *"/>
		</method>
		<method name="ESetInfo" result="ULONG">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
			<vararg name="tag1" type="Tag"/>
		</method>
		<method name="EObtainInfoA" result="ULONG">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
			<arg name="taglist" type="const struct TagItem *"/>
		</method>
		<method name="EObtainInfo" result="ULONG">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
			<vararg name="tag1" type="Tag"/>
		</method>
		<method name="EReleaseInfoA" result="ULONG">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
			<arg name="taglist" type="const struct TagItem *"/>
		</method>
		<method name="EReleaseInfo" result="ULONG">
			<arg name="EEngine" type="struct EGlyphEngine *"/>
			<vararg name="tag1" type="Tag"/>
		</method>
		<method name="OpenOutlineFont" result="struct OutlineFont *">
			<arg name="name" type="CONST_STRPTR"/>
			<arg name="list" type="struct List *"/>
			<arg name="flags" type="ULONG"/>
		</method>
		<method name="CloseOutlineFont" result="VOID">
			<arg name="olf" type="struct OutlineFont *"/>
			<arg name="list" type="struct List *"/>
		</method>
		<method name="WriteFontContents" result="LONG">
			<arg name="fontsLock" type="BPTR"/>
			<arg name="fontName" type="CONST_STRPTR"/>
			<arg name="fontContentsHeader" type="struct FontContentsHeader *"/>
		</method>
		<method name="WriteDiskFontHeaderA" result="LONG">
			<arg name="font" type="struct TextFont *"/>
			<arg name="fileName" type="CONST_STRPTR"/>
			<arg name="taglist" type="const struct TagItem *"/>
		</method>
		<method name="WriteDiskFontHeader" result="LONG">
			<arg name="font" type="struct TextFont *"/>
			<arg name="fileName" type="CONST_STRPTR"/>
			<vararg name="tag1" type="Tag"/>
		</method>
		<method name="ObtainCharsetInfo" result="ULONG">
			<arg name="knownTag" type="ULONG"/>
			<arg name="knownValue" type="ULONG"/>
			<arg name="wantedTag" type="ULONG"/>
		</method>
		<method name="ObtainTTextAttr" result="struct TTextAttr *">
			<arg name="textFont" type="struct TextFont *"/>
		</method>
		<method name="FreeTTextAttr" result="VOID">
			<arg name="tta" type="struct TTextAttr *"/>
		</method>
	</interface>
</library>
