#ifndef INLINE4_COMMODITIES_H
#define INLINE4_COMMODITIES_H

/*
** This file was auto generated by idltool 53.5.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef EXEC_NODES_H
#include <exec/nodes.h>
#endif
#ifndef LIBRARIES_COMMODITIES_H
#include <libraries/commodities.h>
#endif
#ifndef DEVICES_INPUTEVENT_H
#include <devices/inputevent.h>
#endif
#ifndef DEVICES_KEYMAP_H
#include <devices/keymap.h>
#endif
#include <interfaces/commodities.h>

/* Inline macros for Interface "main" */
#define CreateCxObj(type, arg1, arg2) ICommodities->CreateCxObj((type), (arg1), (arg2)) 
#define CxBroker(nb, error) ICommodities->CxBroker((nb), (error)) 
#define ActivateCxObj(co, doIt) ICommodities->ActivateCxObj((co), (doIt)) 
#define DeleteCxObj(co) ICommodities->DeleteCxObj((co)) 
#define DeleteCxObjAll(co) ICommodities->DeleteCxObjAll((co)) 
#define CxObjType(co) ICommodities->CxObjType((co)) 
#define CxObjError(co) ICommodities->CxObjError((co)) 
#define ClearCxObjError(co) ICommodities->ClearCxObjError((co)) 
#define SetCxObjPri(co, pri) ICommodities->SetCxObjPri((co), (pri)) 
#define AttachCxObj(headObj, co) ICommodities->AttachCxObj((headObj), (co)) 
#define EnqueueCxObj(headObj, co) ICommodities->EnqueueCxObj((headObj), (co)) 
#define InsertCxObj(headObj, co, pred) ICommodities->InsertCxObj((headObj), (co), (pred)) 
#define RemoveCxObj(co) ICommodities->RemoveCxObj((co)) 
#define CxReserved0() ICommodities->CxReserved0() 
#define SetTranslate(translator, events) ICommodities->SetTranslate((translator), (events)) 
#define SetFilter(filter, text) ICommodities->SetFilter((filter), (text)) 
#define SetFilterIX(filter, ix) ICommodities->SetFilterIX((filter), (ix)) 
#define ParseIX(description, ix) ICommodities->ParseIX((description), (ix)) 
#define CxMsgType(cxm) ICommodities->CxMsgType((cxm)) 
#define CxMsgData(cxm) ICommodities->CxMsgData((cxm)) 
#define CxMsgID(cxm) ICommodities->CxMsgID((cxm)) 
#define DivertCxMsg(cxm, headObj, returnObj) ICommodities->DivertCxMsg((cxm), (headObj), (returnObj)) 
#define RouteCxMsg(cxm, co) ICommodities->RouteCxMsg((cxm), (co)) 
#define DisposeCxMsg(cxm) ICommodities->DisposeCxMsg((cxm)) 
#define InvertKeyMap(ansiCode, event, km) ICommodities->InvertKeyMap((ansiCode), (event), (km)) 
#define AddIEvents(events) ICommodities->AddIEvents((events)) 
#define CopyBrokerList(blist) ICommodities->CopyBrokerList((blist)) 
#define FreeBrokerList(list) ICommodities->FreeBrokerList((list)) 
#define BrokerCommand(name, id) ICommodities->BrokerCommand((name), (id)) 
#define MatchIX(event, ix) ICommodities->MatchIX((event), (ix)) 

#endif /* INLINE4_COMMODITIES_H */
