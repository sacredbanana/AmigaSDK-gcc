#ifndef INLINE4_IFFPARSE_H
#define INLINE4_IFFPARSE_H

/*
** This file was auto generated by idltool 51.8.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_IFFPARSE_H
#include <libraries/iffparse.h>
#endif
#ifndef UTILITY_HOOKS_H
#include <utility/hooks.h>
#endif

/* Inline macros for Interface "main" */
#define AllocIFF() IIFFParse->AllocIFF() 
#define OpenIFF(iff, rwMode) IIFFParse->OpenIFF(iff, rwMode) 
#define ParseIFF(iff, control) IIFFParse->ParseIFF(iff, control) 
#define CloseIFF(iff) IIFFParse->CloseIFF(iff) 
#define FreeIFF(iff) IIFFParse->FreeIFF(iff) 
#define ReadChunkBytes(iff, buf, numBytes) IIFFParse->ReadChunkBytes(iff, buf, numBytes) 
#define WriteChunkBytes(iff, buf, numBytes) IIFFParse->WriteChunkBytes(iff, buf, numBytes) 
#define ReadChunkRecords(iff, buf, bytesPerRecord, numRecords) IIFFParse->ReadChunkRecords(iff, buf, bytesPerRecord, numRecords) 
#define WriteChunkRecords(iff, buf, bytesPerRecord, numRecords) IIFFParse->WriteChunkRecords(iff, buf, bytesPerRecord, numRecords) 
#define PushChunk(iff, type, id, size) IIFFParse->PushChunk(iff, type, id, size) 
#define PopChunk(iff) IIFFParse->PopChunk(iff) 
#define EntryHandler(iff, type, id, position, handler, object) IIFFParse->EntryHandler(iff, type, id, position, handler, object) 
#define ExitHandler(iff, type, id, position, handler, object) IIFFParse->ExitHandler(iff, type, id, position, handler, object) 
#define PropChunk(iff, type, id) IIFFParse->PropChunk(iff, type, id) 
#define PropChunks(iff, propArray, numPairs) IIFFParse->PropChunks(iff, propArray, numPairs) 
#define StopChunk(iff, type, id) IIFFParse->StopChunk(iff, type, id) 
#define StopChunks(iff, propArray, numPairs) IIFFParse->StopChunks(iff, propArray, numPairs) 
#define CollectionChunk(iff, type, id) IIFFParse->CollectionChunk(iff, type, id) 
#define CollectionChunks(iff, propArray, numPairs) IIFFParse->CollectionChunks(iff, propArray, numPairs) 
#define StopOnExit(iff, type, id) IIFFParse->StopOnExit(iff, type, id) 
#define FindProp(iff, type, id) IIFFParse->FindProp(iff, type, id) 
#define FindCollection(iff, type, id) IIFFParse->FindCollection(iff, type, id) 
#define FindPropContext(iff) IIFFParse->FindPropContext(iff) 
#define CurrentChunk(iff) IIFFParse->CurrentChunk(iff) 
#define ParentChunk(contextNode) IIFFParse->ParentChunk(contextNode) 
#define AllocLocalItem(type, id, ident, dataSize) IIFFParse->AllocLocalItem(type, id, ident, dataSize) 
#define LocalItemData(localItem) IIFFParse->LocalItemData(localItem) 
#define SetLocalItemPurge(localItem, purgeHook) IIFFParse->SetLocalItemPurge(localItem, purgeHook) 
#define FreeLocalItem(localItem) IIFFParse->FreeLocalItem(localItem) 
#define FindLocalItem(iff, type, id, ident) IIFFParse->FindLocalItem(iff, type, id, ident) 
#define StoreLocalItem(iff, localItem, position) IIFFParse->StoreLocalItem(iff, localItem, position) 
#define StoreItemInContext(iff, localItem, contextNode) IIFFParse->StoreItemInContext(iff, localItem, contextNode) 
#define InitIFF(iff, flags, streamHook) IIFFParse->InitIFF(iff, flags, streamHook) 
#define InitIFFasDOS(iff) IIFFParse->InitIFFasDOS(iff) 
#define InitIFFasClip(iff) IIFFParse->InitIFFasClip(iff) 
#define OpenClipboard(unitNumber) IIFFParse->OpenClipboard(unitNumber) 
#define CloseClipboard(clipHandle) IIFFParse->CloseClipboard(clipHandle) 
#define GoodID(id) IIFFParse->GoodID(id) 
#define GoodType(type) IIFFParse->GoodType(type) 
#define IDtoStr(id, buf) IIFFParse->IDtoStr(id, buf) 

#endif /* INLINE4_IFFPARSE_H */
