#ifndef INLINE4_GRAPHICS_H
#define INLINE4_GRAPHICS_H

/*
** This file was auto generated by idltool 53.23.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef GRAPHICS_BLITATTR_H
#include <graphics/blitattr.h>
#endif
#ifndef GRAPHICS_BOARD_H
#include <graphics/board.h>
#endif
#ifndef GRAPHICS_CLIP_H
#include <graphics/clip.h>
#endif
#ifndef GRAPHICS_COERCE_H
#include <graphics/coerce.h>
#endif
#ifndef GRAPHICS_COLLIDE_H
#include <graphics/collide.h>
#endif
#ifndef GRAPHICS_COMPOSITE_H
#include <graphics/composite.h>
#endif
#ifndef GRAPHICS_COPPER_H
#include <graphics/copper.h>
#endif
#ifndef GRAPHICS_DISPLAY_H
#include <graphics/display.h>
#endif
#ifndef GRAPHICS_DISPLAYINFO_H
#include <graphics/displayinfo.h>
#endif
#ifndef GRAPHICS_GELS_H
#include <graphics/gels.h>
#endif
#ifndef GRAPHICS_GFX_H
#include <graphics/gfx.h>
#endif
#ifndef GRAPHICS_GFXBASE_H
#include <graphics/gfxbase.h>
#endif
#ifndef GRAPHICS_GFXMACROS_H
#include <graphics/gfxmacros.h>
#endif
#ifndef GRAPHICS_GFXNODES_H
#include <graphics/gfxnodes.h>
#endif
#ifndef GRAPHICS_GRAPHINT_H
#include <graphics/graphint.h>
#endif
#ifndef GRAPHICS_LAYERS_H
#include <graphics/layers.h>
#endif
#ifndef GRAPHICS_MINTERM_H
#include <graphics/minterm.h>
#endif
#ifndef GRAPHICS_MODEID_H
#include <graphics/modeid.h>
#endif
#ifndef GRAPHICS_MONITOR_H
#include <graphics/monitor.h>
#endif
#ifndef GRAPHICS_RASTPORT_H
#include <graphics/rastport.h>
#endif
#ifndef GRAPHICS_REGIONS_H
#include <graphics/regions.h>
#endif
#ifndef GRAPHICS_RPATTR_H
#include <graphics/rpattr.h>
#endif
#ifndef GRAPHICS_SCALE_H
#include <graphics/scale.h>
#endif
#ifndef GRAPHICS_SPRITE_H
#include <graphics/sprite.h>
#endif
#ifndef GRAPHICS_SPRITE_H
#include <graphics/sprite.h>
#endif
#ifndef GRAPHICS_TEXT_H
#include <graphics/text.h>
#endif
#ifndef GRAPHICS_VIDEOCONTROL_H
#include <graphics/videocontrol.h>
#endif
#ifndef GRAPHICS_VIEW_H
#include <graphics/view.h>
#endif
#include <interfaces/graphics.h>

/* Inline macros for Interface "main" */
#define BltBitMap(srcBitMap, xSrc, ySrc, destBitMap, xDest, yDest, xSize, ySize, minterm, mask, tempA) IGraphics->BltBitMap((srcBitMap), (xSrc), (ySrc), (destBitMap), (xDest), (yDest), (xSize), (ySize), (minterm), (mask), (tempA))
#define BltTemplate(source, xSrc, srcMod, destRP, xDest, yDest, xSize, ySize) IGraphics->BltTemplate((source), (xSrc), (srcMod), (destRP), (xDest), (yDest), (xSize), (ySize))
#define ClearEOL(rp) IGraphics->ClearEOL((rp))
#define ClearScreen(rp) IGraphics->ClearScreen((rp))
#define TextLength(rp, string, count) IGraphics->TextLength((rp), (string), (count))
#define Text(rp, string, count) IGraphics->Text((rp), (string), (count))
#define SetFont(rp, textFont) IGraphics->SetFont((rp), (textFont))
#define OpenFont(textAttr) IGraphics->OpenFont((textAttr))
#define CloseFont(textFont) IGraphics->CloseFont((textFont))
#define AskSoftStyle(rp) IGraphics->AskSoftStyle((rp))
#define SetSoftStyle(rp, style, enable) IGraphics->SetSoftStyle((rp), (style), (enable))
#define AddBob(bob, rp) IGraphics->AddBob((bob), (rp))
#define AddVSprite(vSprite, rp) IGraphics->AddVSprite((vSprite), (rp))
#define DoCollision(rp) IGraphics->DoCollision((rp))
#define DrawGList(rp, vp) IGraphics->DrawGList((rp), (vp))
#define InitGels(head, tail, gelsInfo) IGraphics->InitGels((head), (tail), (gelsInfo))
#define InitMasks(vSprite) IGraphics->InitMasks((vSprite))
#define RemIBob(bob, rp, vp) IGraphics->RemIBob((bob), (rp), (vp))
#define RemVSprite(vSprite) IGraphics->RemVSprite((vSprite))
#define SetCollision(num, routine, gelsInfo) IGraphics->SetCollision((num), (routine), (gelsInfo))
#define SortGList(rp) IGraphics->SortGList((rp))
#define AddAnimOb(anOb, anKey, rp) IGraphics->AddAnimOb((anOb), (anKey), (rp))
#define Animate(anKey, rp) IGraphics->Animate((anKey), (rp))
#define GetGBuffers(anOb, rp, flag) IGraphics->GetGBuffers((anOb), (rp), (flag))
#define InitGMasks(anOb) IGraphics->InitGMasks((anOb))
#define DrawEllipse(rp, xCenter, yCenter, a, b) IGraphics->DrawEllipse((rp), (xCenter), (yCenter), (a), (b))
#define AreaEllipse(rp, xCenter, yCenter, a, b) IGraphics->AreaEllipse((rp), (xCenter), (yCenter), (a), (b))
#define LoadRGB4(vp, colors, count) IGraphics->LoadRGB4((vp), (colors), (count))
#define InitRastPort(rp) IGraphics->InitRastPort((rp))
#define InitVPort(vp) IGraphics->InitVPort((vp))
#define MrgCop(view) IGraphics->MrgCop((view))
#define MakeVPort(view, vp) IGraphics->MakeVPort((view), (vp))
#define LoadView(view) IGraphics->LoadView((view))
#define WaitBlit() IGraphics->WaitBlit()
#define SetRast(rp, pen) IGraphics->SetRast((rp), (pen))
#define Move(rp, x, y) IGraphics->Move((rp), (x), (y))
#define Draw(rp, x, y) IGraphics->Draw((rp), (x), (y))
#define AreaMove(rp, x, y) IGraphics->AreaMove((rp), (x), (y))
#define AreaDraw(rp, x, y) IGraphics->AreaDraw((rp), (x), (y))
#define AreaEnd(rp) IGraphics->AreaEnd((rp))
#define WaitTOF() IGraphics->WaitTOF()
#define QBlit(blit) IGraphics->QBlit((blit))
#define InitArea(areaInfo, vectorBuffer, maxVectors) IGraphics->InitArea((areaInfo), (vectorBuffer), (maxVectors))
#define SetRGB4(vp, colindex, red, green, blue) IGraphics->SetRGB4((vp), (colindex), (red), (green), (blue))
#define QBSBlit(blit) IGraphics->QBSBlit((blit))
#define BltClear(memBlock, byteCount, flags) IGraphics->BltClear((memBlock), (byteCount), (flags))
#define RectFill(rp, xMin, yMin, xMax, yMax) IGraphics->RectFill((rp), (xMin), (yMin), (xMax), (yMax))
#define BltPattern(rp, mask, xMin, yMin, xMax, yMax, maskBPR) IGraphics->BltPattern((rp), (mask), (xMin), (yMin), (xMax), (yMax), (maskBPR))
#define ReadPixel(rp, x, y) IGraphics->ReadPixel((rp), (x), (y))
#define WritePixel(rp, x, y) IGraphics->WritePixel((rp), (x), (y))
#define Flood(rp, mode, x, y) IGraphics->Flood((rp), (mode), (x), (y))
#define PolyDraw(rp, count, polyTable) IGraphics->PolyDraw((rp), (count), (polyTable))
#define SetAPen(rp, pen) IGraphics->SetAPen((rp), (pen))
#define SetBPen(rp, pen) IGraphics->SetBPen((rp), (pen))
#define SetDrMd(rp, drawMode) IGraphics->SetDrMd((rp), (drawMode))
#define InitView(view) IGraphics->InitView((view))
#define CBump(copList) IGraphics->CBump((copList))
#define CMove(copList, destoffset, data) IGraphics->CMove((copList), (destoffset), (data))
#define CWait(copList, v, h) IGraphics->CWait((copList), (v), (h))
#define VBeamPos() IGraphics->VBeamPos()
#define InitBitMap(bitMap, depth, width, height) IGraphics->InitBitMap((bitMap), (depth), (width), (height))
#define ScrollRaster(rp, dx, dy, xMin, yMin, xMax, yMax) IGraphics->ScrollRaster((rp), (dx), (dy), (xMin), (yMin), (xMax), (yMax))
#define WaitBOVP(vp) IGraphics->WaitBOVP((vp))
#define GetSprite(sprite, num) IGraphics->GetSprite((sprite), (num))
#define FreeSprite(num) IGraphics->FreeSprite((num))
#define ChangeSprite(vp, sprite, newData) IGraphics->ChangeSprite((vp), (sprite), (newData))
#define MoveSprite(vp, sprite, x, y) IGraphics->MoveSprite((vp), (sprite), (x), (y))
#define LockLayerRom(layer) IGraphics->LockLayerRom((layer))
#define UnlockLayerRom(layer) IGraphics->UnlockLayerRom((layer))
#define SyncSBitMap(layer) IGraphics->SyncSBitMap((layer))
#define CopySBitMap(layer) IGraphics->CopySBitMap((layer))
#define OwnBlitter() IGraphics->OwnBlitter()
#define DisownBlitter() IGraphics->DisownBlitter()
#define InitTmpRas(tmpRas, buffer, size) IGraphics->InitTmpRas((tmpRas), (buffer), (size))
#define AskFont(rp, textAttr) IGraphics->AskFont((rp), (textAttr))
#define AddFont(textFont) IGraphics->AddFont((textFont))
#define RemFont(textFont) IGraphics->RemFont((textFont))
#define AllocRaster(width, height) IGraphics->AllocRaster((width), (height))
#define FreeRaster(p, width, height) IGraphics->FreeRaster((p), (width), (height))
#define AndRectRegion(region, rectangle) IGraphics->AndRectRegion((region), (rectangle))
#define OrRectRegion(region, rectangle) IGraphics->OrRectRegion((region), (rectangle))
#define NewRegion() IGraphics->NewRegion()
#define ClearRectRegion(region, rectangle) IGraphics->ClearRectRegion((region), (rectangle))
#define ClearRegion(region) IGraphics->ClearRegion((region))
#define DisposeRegion(region) IGraphics->DisposeRegion((region))
#define FreeVPortCopLists(vp) IGraphics->FreeVPortCopLists((vp))
#define FreeCopList(copList) IGraphics->FreeCopList((copList))
#define ClipBlit(srcRP, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm) IGraphics->ClipBlit((srcRP), (xSrc), (ySrc), (destRP), (xDest), (yDest), (xSize), (ySize), (minterm))
#define XorRectRegion(region, rectangle) IGraphics->XorRectRegion((region), (rectangle))
#define FreeCprList(cprList) IGraphics->FreeCprList((cprList))
#define GetColorMap(entries) IGraphics->GetColorMap((entries))
#define FreeColorMap(colorMap) IGraphics->FreeColorMap((colorMap))
#define GetRGB4(colorMap, entry) IGraphics->GetRGB4((colorMap), (entry))
#define ScrollVPort(vp) IGraphics->ScrollVPort((vp))
#define UCopperListInit(uCopList, n) IGraphics->UCopperListInit((uCopList), (n))
#define FreeGBuffers(anOb, rp, flag) IGraphics->FreeGBuffers((anOb), (rp), (flag))
#define BltBitMapRastPort(srcBitMap, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm) IGraphics->BltBitMapRastPort((srcBitMap), (xSrc), (ySrc), (destRP), (xDest), (yDest), (xSize), (ySize), (minterm))
#define OrRegionRegion(srcRegion, destRegion) IGraphics->OrRegionRegion((srcRegion), (destRegion))
#define XorRegionRegion(srcRegion, destRegion) IGraphics->XorRegionRegion((srcRegion), (destRegion))
#define AndRegionRegion(srcRegion, destRegion) IGraphics->AndRegionRegion((srcRegion), (destRegion))
#define SetRGB4CM(colorMap, colindex, red, green, blue) IGraphics->SetRGB4CM((colorMap), (colindex), (red), (green), (blue))
#define BltMaskBitMapRastPort(srcBitMap, xSrc, ySrc, destRP, xDest, yDest, xSize, ySize, minterm, bltMask) IGraphics->BltMaskBitMapRastPort((srcBitMap), (xSrc), (ySrc), (destRP), (xDest), (yDest), (xSize), (ySize), (minterm), (bltMask))
#define GfxInternal1() IGraphics->GfxInternal1()
#define GfxInternal2() IGraphics->GfxInternal2()
#define AttemptLockLayerRom(layer) IGraphics->AttemptLockLayerRom((layer))
#define GfxNew(gfxNodeType) IGraphics->GfxNew((gfxNodeType))
#define GfxFree(gfxNodePtr) IGraphics->GfxFree((gfxNodePtr))
#define GfxAssociate(associateNode, gfxNodePtr) IGraphics->GfxAssociate((associateNode), (gfxNodePtr))
#define BitMapScale(bitScaleArgs) IGraphics->BitMapScale((bitScaleArgs))
#define ScalerDiv(factor, numerator, denominator) IGraphics->ScalerDiv((factor), (numerator), (denominator))
#define TextExtent(rp, string, count, textExtent) IGraphics->TextExtent((rp), (string), (count), (textExtent))
#define TextFit(rp, string, strLen, textExtent, constrainingExtent, strDirection, constrainingBitWidth, constrainingBitHeight) IGraphics->TextFit((rp), (string), (strLen), (textExtent), (constrainingExtent), (strDirection), (constrainingBitWidth), (constrainingBitHeight))
#define GfxLookUp(associateNode) IGraphics->GfxLookUp((associateNode))
#define VideoControl(colorMap, tagarray) IGraphics->VideoControl((colorMap), (tagarray))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define VideoControlTags(...) IGraphics->VideoControlTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define VideoControlTags(vargs...) IGraphics->VideoControlTags(## vargs)
#endif
#define OpenMonitor(monitorName, displayID) IGraphics->OpenMonitor((monitorName), (displayID))
#define CloseMonitor(monitorSpec) IGraphics->CloseMonitor((monitorSpec))
#define FindDisplayInfo(displayID) IGraphics->FindDisplayInfo((displayID))
#define NextDisplayInfo(displayID) IGraphics->NextDisplayInfo((displayID))
#define AddDisplayInfo(displayInfoRecord) IGraphics->AddDisplayInfo((displayInfoRecord))
#define AddDisplayInfoData(handle, buf, size, tagID, displayID) IGraphics->AddDisplayInfoData((handle), (buf), (size), (tagID), (displayID))
#define SetDisplayInfoData(handle, buf, size, tagID, displayID) IGraphics->SetDisplayInfoData((handle), (buf), (size), (tagID), (displayID))
#define GetDisplayInfoData(handle, buf, size, tagID, displayID) IGraphics->GetDisplayInfoData((handle), (buf), (size), (tagID), (displayID))
#define FontExtent(font, fontExtent) IGraphics->FontExtent((font), (fontExtent))
#define ReadPixelLine8(rp, xstart, ystart, width, array, tempRP) IGraphics->ReadPixelLine8((rp), (xstart), (ystart), (width), (array), (tempRP))
#define WritePixelLine8(rp, xstart, ystart, width, array, tempRP) IGraphics->WritePixelLine8((rp), (xstart), (ystart), (width), (array), (tempRP))
#define ReadPixelArray8(rp, xstart, ystart, xstop, ystop, array, temprp) IGraphics->ReadPixelArray8((rp), (xstart), (ystart), (xstop), (ystop), (array), (temprp))
#define WritePixelArray8(rp, xstart, ystart, xstop, ystop, array, temprp) IGraphics->WritePixelArray8((rp), (xstart), (ystart), (xstop), (ystop), (array), (temprp))
#define GetVPModeID(vp) IGraphics->GetVPModeID((vp))
#define ModeNotAvailable(modeID) IGraphics->ModeNotAvailable((modeID))
#define WeighTAMatch(reqTextAttr, targetTextAttr, targetTags) IGraphics->WeighTAMatch((reqTextAttr), (targetTextAttr), (targetTags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define WeighTAMatchTags(reqTextAttr, ...) IGraphics->WeighTAMatchTags((reqTextAttr), __VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define WeighTAMatchTags(reqTextAttr, vargs...) IGraphics->WeighTAMatchTags(reqTextAttr, ## vargs)
#endif
#define EraseRect(rp, xMin, yMin, xMax, yMax) IGraphics->EraseRect((rp), (xMin), (yMin), (xMax), (yMax))
#define ExtendFont(font, fontTags) IGraphics->ExtendFont((font), (fontTags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define ExtendFontTags(...) IGraphics->ExtendFontTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define ExtendFontTags(vargs...) IGraphics->ExtendFontTags(## vargs)
#endif
#define StripFont(font) IGraphics->StripFont((font))
#define CalcIVG(v, vp) IGraphics->CalcIVG((v), (vp))
#define AttachPalExtra(cm, vp) IGraphics->AttachPalExtra((cm), (vp))
#define ObtainBestPenA(cm, r, g, b, tags) IGraphics->ObtainBestPenA((cm), (r), (g), (b), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define ObtainBestPen(cm, r, g, ...) IGraphics->ObtainBestPen((cm), (r), (g), __VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define ObtainBestPen(cm, r, g, vargs...) IGraphics->ObtainBestPen(cm, r, g, ## vargs)
#endif
#define GfxInternal3() IGraphics->GfxInternal3()
#define SetRGB32(vp, n, r, g, b) IGraphics->SetRGB32((vp), (n), (r), (g), (b))
#define GetAPen(rp) IGraphics->GetAPen((rp))
#define GetBPen(rp) IGraphics->GetBPen((rp))
#define GetDrMd(rp) IGraphics->GetDrMd((rp))
#define GetOutlinePen(rp) IGraphics->GetOutlinePen((rp))
#define LoadRGB32(vp, table) IGraphics->LoadRGB32((vp), (table))
#define SetChipRev(want) IGraphics->SetChipRev((want))
#define SetABPenDrMd(rp, apen, bpen, drawmode) IGraphics->SetABPenDrMd((rp), (apen), (bpen), (drawmode))
#define GetRGB32(cm, firstcolor, ncolors, table) IGraphics->GetRGB32((cm), (firstcolor), (ncolors), (table))
#define BltBitMapTagList(tags) IGraphics->BltBitMapTagList((tags))
#define SetDefaultMonitor(mon) IGraphics->SetDefaultMonitor((mon))
#define AllocBitMap(sizex, sizey, depth, flags, friendBitmap) IGraphics->AllocBitMap((sizex), (sizey), (depth), (flags), (friendBitmap))
#define FreeBitMap(bm) IGraphics->FreeBitMap((bm))
#define GetExtSpriteA(ss, tags) IGraphics->GetExtSpriteA((ss), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GetExtSprite(...) IGraphics->GetExtSprite(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GetExtSprite(vargs...) IGraphics->GetExtSprite(## vargs)
#endif
#define CoerceMode(vp, monitorid, flags) IGraphics->CoerceMode((vp), (monitorid), (flags))
#define ChangeVPBitMap(vp, bm, db) IGraphics->ChangeVPBitMap((vp), (bm), (db))
#define ReleasePen(cm, n) IGraphics->ReleasePen((cm), (n))
#define ObtainPen(cm, n, r, g, b, f) IGraphics->ObtainPen((cm), (n), (r), (g), (b), (f))
#define GetBitMapAttr(bm, attrnum) IGraphics->GetBitMapAttr((bm), (attrnum))
#define AllocDBufInfo(vp) IGraphics->AllocDBufInfo((vp))
#define FreeDBufInfo(dbi) IGraphics->FreeDBufInfo((dbi))
#define SetOutlinePen(rp, pen) IGraphics->SetOutlinePen((rp), (pen))
#define SetWriteMask(rp, msk) IGraphics->SetWriteMask((rp), (msk))
#define SetMaxPen(rp, maxpen) IGraphics->SetMaxPen((rp), (maxpen))
#define SetRGB32CM(cm, n, r, g, b) IGraphics->SetRGB32CM((cm), (n), (r), (g), (b))
#define ScrollRasterBF(rp, dx, dy, xMin, yMin, xMax, yMax) IGraphics->ScrollRasterBF((rp), (dx), (dy), (xMin), (yMin), (xMax), (yMax))
#define FindColor(cm, r, g, b, maxcolor) IGraphics->FindColor((cm), (r), (g), (b), (maxcolor))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define BltBitMapTags(...) IGraphics->BltBitMapTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define BltBitMapTags(...) IGraphics->BltBitMapTags(## vargs)
#endif
#define AllocSpriteDataA(bm, tags) IGraphics->AllocSpriteDataA((bm), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define AllocSpriteData(...) IGraphics->AllocSpriteData(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define AllocSpriteData(vargs...) IGraphics->AllocSpriteData(## vargs)
#endif
#define ChangeExtSpriteA(vp, oldsprite, newsprite, tags) IGraphics->ChangeExtSpriteA((vp), (oldsprite), (newsprite), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define ChangeExtSprite(vp, oldsprite, ...) IGraphics->ChangeExtSprite((vp), (oldsprite), __VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define ChangeExtSprite(vp, oldsprite, vargs...) IGraphics->ChangeExtSprite(vp, oldsprite, ## vargs)
#endif
#define FreeSpriteData(sp) IGraphics->FreeSpriteData((sp))
#define SetRPAttrsA(rp, tags) IGraphics->SetRPAttrsA((rp), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define SetRPAttrs(...) IGraphics->SetRPAttrs(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define SetRPAttrs(vargs...) IGraphics->SetRPAttrs(## vargs)
#endif
#define GetRPAttrsA(rp, tags) IGraphics->GetRPAttrsA((rp), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GetRPAttrs(...) IGraphics->GetRPAttrs(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GetRPAttrs(vargs...) IGraphics->GetRPAttrs(## vargs)
#endif
#define BestModeIDA(tags) IGraphics->BestModeIDA((tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define BestModeID(...) IGraphics->BestModeID(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define BestModeID(...) IGraphics->BestModeID(## vargs)
#endif
#define WriteChunkyPixels(rp, xstart, ystart, xstop, ystop, array, bytesperrow) IGraphics->WriteChunkyPixels((rp), (xstart), (ystart), (xstop), (ystop), (array), (bytesperrow))
#define CompositeTagList(Operator, Source, Destination, tags) IGraphics->CompositeTagList((Operator), (Source), (Destination), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define CompositeTags(Operator, Source, ...) IGraphics->CompositeTags((Operator), (Source), __VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define CompositeTags(Operator, Source, vargs...) IGraphics->CompositeTags(Operator, Source, ## vargs)
#endif
#define AllocBitMapTagList(sizex, sizey, depth, tags) IGraphics->AllocBitMapTagList((sizex), (sizey), (depth), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define AllocBitMapTags(sizex, sizey, ...) IGraphics->AllocBitMapTags((sizex), (sizey), __VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define AllocBitMapTags(sizex, sizey, vargs...) IGraphics->AllocBitMapTags(sizex, sizey, ## vargs)
#endif
#define GetMonitorDataTagList(boardNum, monitorNum, tags) IGraphics->GetMonitorDataTagList((boardNum), (monitorNum), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GetMonitorDataTags(boardNum, ...) IGraphics->GetMonitorDataTags((boardNum), __VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GetMonitorDataTags(boardNum, vargs...) IGraphics->GetMonitorDataTags(boardNum, ## vargs)
#endif
#define GetBoardDataTagList(boardNum, tags) IGraphics->GetBoardDataTagList((boardNum), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GetBoardDataTags(...) IGraphics->GetBoardDataTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GetBoardDataTags(vargs...) IGraphics->GetBoardDataTags(## vargs)
#endif
#define LockBitMapTagList(bitMap, tags) IGraphics->LockBitMapTagList((bitMap), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define LockBitMapTags(...) IGraphics->LockBitMapTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define LockBitMapTags(vargs...) IGraphics->LockBitMapTags(## vargs)
#endif
#define UnlockBitMap(lock) IGraphics->UnlockBitMap((lock))
#define RectFillColor(rp, xMin, yMin, xMax, yMax, color) IGraphics->RectFillColor((rp), (xMin), (yMin), (xMax), (yMax), (color))
#define WritePixelColor(rp, x, y, color) IGraphics->WritePixelColor((rp), (x), (y), (color))
#define ReadPixelColor(rp, x, y) IGraphics->ReadPixelColor((rp), (x), (y))
#define ReadPixelArray(src, srcX, srcY, dst, dstX, dstY, dstBytesPerRow, dstPixelFormat, sizeX, sizeY) IGraphics->ReadPixelArray((src), (srcX), (srcY), (dst), (dstX), (dstY), (dstBytesPerRow), (dstPixelFormat), (sizeX), (sizeY))
#define WritePixelArray(src, srcX, srcY, srcBytesPerRow, srcPixelFormat, dst, dstX, dstY, sizeX, sizeY) IGraphics->WritePixelArray((src), (srcX), (srcY), (srcBytesPerRow), (srcPixelFormat), (dst), (dstX), (dstY), (sizeX), (sizeY))
#define GraphicsControlTagList(tags) IGraphics->GraphicsControlTagList((tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define GraphicsControlTags(...) IGraphics->GraphicsControlTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define GraphicsControlTags(...) IGraphics->GraphicsControlTags(## vargs)
#endif
#define LockBitMapToBoardTagList(bitMap, boardNum, tags) IGraphics->LockBitMapToBoardTagList((bitMap), (boardNum), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define LockBitMapToBoardTags(bitMap, ...) IGraphics->LockBitMapToBoardTags((bitMap), __VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define LockBitMapToBoardTags(bitMap, vargs...) IGraphics->LockBitMapToBoardTags(bitMap, ## vargs)
#endif
#define UnlockBitMapFromBoard(lock, modified) IGraphics->UnlockBitMapFromBoard((lock), (modified))
#define GetBoardBytesPerRow(boardNum, pixelFormat, width) IGraphics->GetBoardBytesPerRow((boardNum), (pixelFormat), (width))
#define InitBoardTagList(boardName, tags) IGraphics->InitBoardTagList((boardName), (tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define InitBoardTags(...) IGraphics->InitBoardTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define InitBoardTags(vargs...) IGraphics->InitBoardTags(## vargs)
#endif
#define CreateDisplayInfoData(boardInfo) IGraphics->CreateDisplayInfoData((boardInfo))
#define PIP_OpenTagList(Tags) IGraphics->PIP_OpenTagList((Tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define PIP_OpenTags(...) IGraphics->PIP_OpenTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define PIP_OpenTags(...) IGraphics->PIP_OpenTags(## vargs)
#endif
#define PIP_Close(window) IGraphics->PIP_Close((window))
#define PIP_SetTagList(window, Tags) IGraphics->PIP_SetTagList((window), (Tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define PIP_SetTags(...) IGraphics->PIP_SetTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define PIP_SetTags(vargs...) IGraphics->PIP_SetTags(## vargs)
#endif
#define PIP_GetTagList(window, Tags) IGraphics->PIP_GetTagList((window), (Tags))
#if (defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L) || (__GNUC__ >= 3)
#define PIP_GetTags(...) IGraphics->PIP_GetTags(__VA_ARGS__)
#elif (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
#define PIP_GetTags(vargs...) IGraphics->PIP_GetTags(## vargs)
#endif
#define SetRastColor(rp, color) IGraphics->SetRastColor((rp), (color))

#endif /* INLINE4_GRAPHICS_H */
