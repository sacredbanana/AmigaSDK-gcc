#ifndef USBSYS_INTERFACE_DEF_H
#define USBSYS_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.6.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef DEVICES_TIMER_H
#include <devices/timer.h>
#endif
#ifndef USB_SYSTEM_H
#include <usb/system.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct USBSysIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct USBSysIFace *Self);
	uint32 APICALL (*Release)(struct USBSysIFace *Self);
	void APICALL (*Expunge)(struct USBSysIFace *Self);
	struct Interface * APICALL (*Clone)(struct USBSysIFace *Self);
	struct USBIOReq * APICALL (*USBAllocRequestA)(struct USBSysIFace *Self, struct IORequest * openreq, struct TagItem * taglist);
	struct USBIOReq * APICALL (*USBAllocRequest)(struct USBSysIFace *Self, struct IORequest * openreq, ...);
	void APICALL (*USBFreeRequest)(struct USBSysIFace *Self, struct USBIOReq * req);
	struct UsbRawFunction * APICALL (*USBFindFunctionA)(struct USBSysIFace *Self, struct UsbRawFunction * curfkt, struct TagItem * taglist);
	struct UsbRawFunction * APICALL (*USBFindFunction)(struct USBSysIFace *Self, struct UsbRawFunction * curfkt, ...);
	void APICALL (*USBLockFunction)(struct USBSysIFace *Self, struct UsbRawFunction * rawfkt);
	void APICALL (*USBUnlockFunction)(struct USBSysIFace *Self, struct UsbRawFunction * rawfkt);
	struct UsbFunction * APICALL (*USBClaimFunction)(struct USBSysIFace *Self, struct UsbRawFunction * rawfkt, APTR fdfkt, struct MsgPort * port);
	void APICALL (*USBDeclaimFunction)(struct USBSysIFace *Self, struct UsbFunction * usfkt);
	struct UsbRawFunction * APICALL (*USBAddFunctionA)(struct USBSysIFace *Self, struct UsbInterface * ushubifc, struct TagItem * taglist);
	struct UsbRawFunction * APICALL (*USBAddFunction)(struct USBSysIFace *Self, struct UsbInterface * ushubifc, ...);
	void APICALL (*USBRemFunction)(struct USBSysIFace *Self, struct UsbRawFunction * rawfkt, struct UsbInterface * ushubifc);
	struct UsbEndPoint * APICALL (*USBGetEndPoint)(struct USBSysIFace *Self, struct UsbFunction * usfkt, struct UsbInterface * usifc, LONG epnum);
	LONG APICALL (*USBEPControlXferA)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbEndPoint * usep, ULONG rcmd, ULONG rtype, ULONG rval, ULONG ridx, APTR buf, ULONG buflen, struct TagItem * taglist);
	LONG APICALL (*USBEPControlXfer)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbEndPoint * usep, ULONG rcmd, ULONG rtype, ULONG rval, ULONG ridx, APTR buf, ULONG buflen, ...);
	struct USBBusDscHead * APICALL (*USBEPGetDescriptorA)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbEndPoint * usep, ULONG rtype, LONG dtyp, LONG didx, struct TagItem * taglist);
	struct USBBusDscHead * APICALL (*USBEPGetDescriptor)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbEndPoint * usep, ULONG rtype, LONG dtyp, LONG didx, ...);
	struct USBBusCfgDsc * APICALL (*USBFktGetCfgDescriptorsA)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbFunction * usfkt, ULONG cfgid, struct TagItem * taglist);
	struct USBBusCfgDsc * APICALL (*USBFktGetCfgDescriptors)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbFunction * usfkt, ULONG cfgid, ...);
	LONG APICALL (*USBFktSetConfigurationA)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbFunction * fkt, struct USBBusCfgDsc * cfgdsc, struct TagItem * taglist);
	LONG APICALL (*USBFktSetConfiguration)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbFunction * fkt, struct USBBusCfgDsc * cfgdsc, ...);
	struct USBBusDscHead * APICALL (*USBParseDescriptors)(struct USBSysIFace *Self, struct USBBusDscHead * buffer, ULONG buflen);
	void APICALL (*USBFreeDescriptors)(struct USBSysIFace *Self, struct USBBusDscHead * dscr);
	struct USBBusDscHead * APICALL (*USBNextDescriptor)(struct USBSysIFace *Self, struct USBBusDscHead * dscr);
	struct USBBusDscHead * APICALL (*USBPrevDescriptor)(struct USBSysIFace *Self, struct USBBusDscHead * dscr);
	LONG APICALL (*USBObtainResourceA)(struct USBSysIFace *Self, ULONG type, APTR object, struct TagItem * taglist);
	LONG APICALL (*USBObtainResource)(struct USBSysIFace *Self, ULONG type, APTR object, ...);
	void APICALL (*USBReleaseResource)(struct USBSysIFace *Self, ULONG type, APTR object);
	struct UsbRawInterface * APICALL (*USBFindInterfaceA)(struct USBSysIFace *Self, struct UsbRawInterface * curifc, struct TagItem * taglist);
	struct UsbRawInterface * APICALL (*USBFindInterface)(struct USBSysIFace *Self, struct UsbRawInterface * curifc, ...);
	void APICALL (*USBLockInterface)(struct USBSysIFace *Self, struct UsbRawInterface * rawifc);
	void APICALL (*USBUnlockInterface)(struct USBSysIFace *Self, struct UsbRawInterface * rawifc);
	struct UsbInterface * APICALL (*USBClaimInterface)(struct USBSysIFace *Self, struct UsbRawInterface * rawifc, APTR fdifc, struct MsgPort * port);
	void APICALL (*USBDeclaimInterface)(struct USBSysIFace *Self, struct UsbInterface * usifc);
	struct UsbInterface * APICALL (*USBGetInterface)(struct USBSysIFace *Self, struct UsbFunction * usfkt, LONG ifcnum);
	struct USBBusDscHead * APICALL (*USBIntGetConfigurationA)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbInterface * usifc, struct TagItem * taglist);
	struct USBBusDscHead * APICALL (*USBIntGetConfiguration)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbInterface * usifc, ...);
	struct USBBusDscHead * APICALL (*USBIntGetAltSettingA)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbInterface * usifc, struct TagItem * taglist);
	struct USBBusDscHead * APICALL (*USBIntGetAltSetting)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbInterface * usifc, ...);
	LONG APICALL (*USBIntSetAltSettingA)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbInterface * usifc, ULONG altnum, struct TagItem * taglist);
	LONG APICALL (*USBIntSetAltSetting)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbInterface * usifc, ULONG altnum, ...);
	void APICALL (*USBLogPuts)(struct USBSysIFace *Self, LONG err, CONST_STRPTR context, CONST_STRPTR msg);
	void APICALL (*USBLogVPrintf)(struct USBSysIFace *Self, LONG err, CONST_STRPTR context, CONST_STRPTR msg, ULONG * fmtargs);
	LONG APICALL (*USBSetFunctionAttrsA)(struct USBSysIFace *Self, struct UsbFunction * clfkt, struct TagItem * taglist);
	LONG APICALL (*USBSetFunctionAttrs)(struct USBSysIFace *Self, struct UsbFunction * clfkt, ...);
	LONG APICALL (*USBSetInterfaceAttrsA)(struct USBSysIFace *Self, struct UsbInterface * clifc, struct TagItem * taglist);
	LONG APICALL (*USBSetInterfaceAttrs)(struct USBSysIFace *Self, struct UsbInterface * clifc, ...);
	void APICALL (*USBGetStackAttrsA)(struct USBSysIFace *Self, struct TagItem * taglist);
	void APICALL (*USBGetStackAttrs)(struct USBSysIFace *Self, ...);
	void APICALL (*USBGetRawFunctionAttrsA)(struct USBSysIFace *Self, struct UsbRawFunction * rawfkt, struct TagItem * taglist);
	void APICALL (*USBGetRawFunctionAttrs)(struct USBSysIFace *Self, struct UsbRawFunction * rawfkt, ...);
	void APICALL (*USBGetRawInterfaceAttrsA)(struct USBSysIFace *Self, struct UsbRawInterface * rawifc, struct TagItem * taglist);
	void APICALL (*USBGetRawInterfaceAttrs)(struct USBSysIFace *Self, struct UsbRawInterface * rawifc, ...);
	void APICALL (*USBFktDriverRunning)(struct USBSysIFace *Self, struct UsbFunction * fkt);
	void APICALL (*USBIfcDriverRunning)(struct USBSysIFace *Self, struct UsbInterface * ifc);
	LONG APICALL (*USBEPDestall)(struct USBSysIFace *Self, struct IORequest * openreq, struct UsbEndPoint * usep);
	APTR APICALL (*USBAllocObjectTags)(struct USBSysIFace *Self, uint32 type, ...);
	APTR APICALL (*USBAllocObject)(struct USBSysIFace *Self, uint32 type, struct TagItem * taglist);
	void APICALL (*USBFreeObject)(struct USBSysIFace *Self, uint32 type, APTR object);
	void APICALL (*USBLogPrintf)(struct USBSysIFace *Self, LONG err, CONST_STRPTR context, CONST_STRPTR msg, ...);
	int32 APICALL (*USBScanA)(struct USBSysIFace *Self, uint32 type, struct Hook * hook, struct TagItem * taglist);
	int32 APICALL (*USBScan)(struct USBSysIFace *Self, uint32 type, struct Hook * hook, ...);
	void APICALL (*USBGetEndPointAttrsA)(struct USBSysIFace *Self, struct UsbEndPoint * ep, struct TagItem * taglist);
	void APICALL (*USBGetEndPointAttrs)(struct USBSysIFace *Self, struct UsbEndPoint * ep, ...);
	ULONG APICALL (*USBGetFrameNumber)(struct USBSysIFace *Self, struct UsbEndPoint * ep, struct TimeVal * timestamp);
	BOOL APICALL (*USBSetIsoTransferCount)(struct USBSysIFace *Self, struct USBIOReq * ioReq, ULONG transferIndex);
	ULONG APICALL (*USBSetIsoTransferSetup)(struct USBSysIFace *Self, struct USBIOReq * ioReq, ULONG transferIndex, ULONG offset, ULONG length);
	struct USBTransferResult * APICALL (*USBGetIsoTransferResult)(struct USBSysIFace *Self, struct USBIOReq * ioReq, ULONG transferIndex, struct USBTransferSetup ** setupOut);
	struct USBTransferSetup * APICALL (*USBGetIsoTransferSetupHcd)(struct USBSysIFace *Self, struct USBIOReqHCD * ioReq, ULONG transferIndex);
	BOOL APICALL (*USBSetIsoTransferResultHcd)(struct USBSysIFace *Self, struct USBIOReqHCD * ioReq, ULONG transferIndex, ULONG actual, LONG result);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* USBSYS_INTERFACE_DEF_H */
