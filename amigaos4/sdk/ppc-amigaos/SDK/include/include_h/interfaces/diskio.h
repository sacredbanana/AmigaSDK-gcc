#ifndef DISKIO_INTERFACE_DEF_H
#define DISKIO_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.7.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif
#ifndef LIBRARIES_DISKIO_H
#include <libraries/diskio.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct DiskIOIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct DiskIOIFace *Self);
	uint32 APICALL (*Release)(struct DiskIOIFace *Self);
	void APICALL (*Expunge)(struct DiskIOIFace *Self);
	struct Interface * APICALL (*Clone)(struct DiskIOIFace *Self);
	struct DiskIO * APICALL (*Setup)(struct DiskIOIFace *Self, CONST_STRPTR name, const struct TagItem * tags);
	struct DiskIO * APICALL (*SetupTags)(struct DiskIOIFace *Self, CONST_STRPTR name, ...);
	void APICALL (*Cleanup)(struct DiskIOIFace *Self, struct DiskIO * dio);
	void APICALL (*Update)(struct DiskIOIFace *Self, struct DiskIO * dio);
	BOOL APICALL (*IsDiskPresent)(struct DiskIOIFace *Self, struct DiskIO * dio);
	BOOL APICALL (*IsWriteProtected)(struct DiskIOIFace *Self, struct DiskIO * dio);
	void APICALL (*Query)(struct DiskIOIFace *Self, struct DiskIO * dio, const struct TagItem * tags);
	void APICALL (*QueryTags)(struct DiskIOIFace *Self, struct DiskIO * dio, ...);
	int32 APICALL (*FlushIOCache)(struct DiskIOIFace *Self, struct DiskIO * dio);
	int32 APICALL (*FlushBlocks)(struct DiskIOIFace *Self, struct DiskIO * dio, uint64 block, uint32 blocks);
	int32 APICALL (*ReadBlocks)(struct DiskIOIFace *Self, struct DiskIO * dio, uint64 block, APTR buffer, uint32 blocks);
	int32 APICALL (*WriteBlocks)(struct DiskIOIFace *Self, struct DiskIO * dio, uint64 block, CONST_APTR buffer, uint32 blocks);
	int32 APICALL (*ReadBytes)(struct DiskIOIFace *Self, struct DiskIO * dio, uint64 offset, APTR buffer, uint32 bytes);
	int32 APICALL (*WriteBytes)(struct DiskIOIFace *Self, struct DiskIO * dio, uint64 offset, CONST_APTR buffer, uint32 bytes);
	struct DiskChangeHandler * APICALL (*AddDiskChangeHandler)(struct DiskIOIFace *Self, CONST_STRPTR name, DiskChangeHandlerFunc func, APTR udata, const struct TagItem * tags);
	struct DiskChangeHandler * APICALL (*AddDiskChangeHandlerTags)(struct DiskIOIFace *Self, CONST_STRPTR name, DiskChangeHandlerFunc func, APTR udata, ...);
	void APICALL (*RemDiskChangeHandler)(struct DiskIOIFace *Self, struct DiskChangeHandler * dch);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* DISKIO_INTERFACE_DEF_H */
