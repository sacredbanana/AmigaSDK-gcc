#ifndef UTILITY_INTERFACE_DEF_H
#define UTILITY_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.7.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef UTILITY_UTILITY_H
#include <utility/utility.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct UtilityIFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct UtilityIFace *Self);
	ULONG APICALL (*Release)(struct UtilityIFace *Self);
	void APICALL (*Expunge)(struct UtilityIFace *Self);
	struct Interface * APICALL (*Clone)(struct UtilityIFace *Self);
	struct TagItem * APICALL (*AllocateTagItems)(struct UtilityIFace *Self, ULONG numTags);
	VOID APICALL (*ApplyTagChanges)(struct UtilityIFace *Self, struct TagItem * list, const struct TagItem * changeList);
	struct TagItem * APICALL (*CloneTagItems)(struct UtilityIFace *Self, const struct TagItem * original);
	VOID APICALL (*FilterTagChanges)(struct UtilityIFace *Self, struct TagItem * changeList, struct TagItem * originalList, ULONG apply);
	ULONG APICALL (*FilterTagItems)(struct UtilityIFace *Self, struct TagItem * taglist, const Tag * filterArray, ULONG logic);
	struct TagItem * APICALL (*FindTagItem)(struct UtilityIFace *Self, Tag tagValue, const struct TagItem * tagList);
	VOID APICALL (*FreeTagItems)(struct UtilityIFace *Self, struct TagItem * tagList);
	ULONG APICALL (*GetTagData)(struct UtilityIFace *Self, Tag tagValue, ULONG defaultVal, const struct TagItem * tagList);
	VOID APICALL (*MapTags)(struct UtilityIFace *Self, struct TagItem * tagList, const struct TagItem * mapList, ULONG mapType);
	struct TagItem * APICALL (*NextTagItem)(struct UtilityIFace *Self, struct TagItem ** tags);
	ULONG APICALL (*PackBoolTags)(struct UtilityIFace *Self, ULONG initialFlags, const struct TagItem * tagList, const struct TagItem * boolMap);
	VOID APICALL (*RefreshTagItemClones)(struct UtilityIFace *Self, struct TagItem * clone, const struct TagItem * original);
	BOOL APICALL (*TagInArray)(struct UtilityIFace *Self, Tag tagValue, const Tag * tagArray);
	ULONG APICALL (*CallHookPkt)(struct UtilityIFace *Self, struct Hook * hook, APTR object, APTR message);
	ULONG APICALL (*CallHook)(struct UtilityIFace *Self, struct Hook * hook, APTR object, ...);
	BOOL APICALL (*AddNamedObject)(struct UtilityIFace *Self, struct NamedObject * nameSpace, struct NamedObject * object);
	struct NamedObject * APICALL (*AllocNamedObjectA)(struct UtilityIFace *Self, CONST_STRPTR name, const struct TagItem * tags);
	struct NamedObject * APICALL (*AllocNamedObject)(struct UtilityIFace *Self, CONST_STRPTR name, ...);
	LONG APICALL (*AttemptRemNamedObject)(struct UtilityIFace *Self, struct NamedObject * object);
	struct NamedObject * APICALL (*FindNamedObject)(struct UtilityIFace *Self, struct NamedObject * name_space, CONST_STRPTR name, struct NamedObject * previous_object);
	struct NamedObject * APICALL (*FreeNamedObject)(struct UtilityIFace *Self, struct NamedObject * obj);
	STRPTR APICALL (*NamedObjectName)(struct UtilityIFace *Self, struct NamedObject * obj);
	void APICALL (*ReleaseNamedObject)(struct UtilityIFace *Self, struct NamedObject * obj);
	void APICALL (*RemNamedObject)(struct UtilityIFace *Self, struct NamedObject * obj, struct Message * message);
	void APICALL (*Amiga2Date)(struct UtilityIFace *Self, ULONG date_amiga, struct ClockData * cd);
	ULONG APICALL (*CheckDate)(struct UtilityIFace *Self, const struct ClockData * date);
	ULONG APICALL (*Date2Amiga)(struct UtilityIFace *Self, const struct ClockData * date);
	struct SkipList * APICALL (*CreateSkipList)(struct UtilityIFace *Self, struct Hook * hook, LONG max_levels);
	void APICALL (*DeleteSkipList)(struct UtilityIFace *Self, struct SkipList * skipList);
	struct SkipNode * APICALL (*FindSkipNode)(struct UtilityIFace *Self, const struct SkipList * skipList, APTR key);
	struct SkipNode * APICALL (*GetFirstSkipNode)(struct UtilityIFace *Self, const struct SkipList * skipList);
	struct SkipNode * APICALL (*GetNextSkipNode)(struct UtilityIFace *Self, const struct SkipList * skipList, const struct SkipNode * node);
	struct SkipNode * APICALL (*InsertSkipNode)(struct UtilityIFace *Self, struct SkipList * skipList, APTR key, ULONG dataSize);
	BOOL APICALL (*RemoveSkipNode)(struct UtilityIFace *Self, struct SkipList * skipList, APTR key);
	struct SplayTree * APICALL (*CreateSplayTree)(struct UtilityIFace *Self, struct Hook * compareHook);
	void APICALL (*DeleteSplayTree)(struct UtilityIFace *Self, struct SplayTree * splayTree);
	struct SplayNode * APICALL (*FindSplayNode)(struct UtilityIFace *Self, const struct SplayTree * splayTree, APTR key);
	struct SplayNode * APICALL (*InsertSplayNode)(struct UtilityIFace *Self, struct SplayTree * splayTree, APTR key, ULONG date_size);
	struct SplayNode * APICALL (*RemoveSplayNode)(struct UtilityIFace *Self, struct SplayTree * splayTree, APTR key);
	struct Node * APICALL (*FindNameNC)(struct UtilityIFace *Self, struct List * list, CONST_STRPTR name);
	ULONG APICALL (*GetUniqueID)(struct UtilityIFace *Self);
	void APICALL (*MessageDigest_SHA_Final)(struct UtilityIFace *Self, struct MessageDigest_SHA * shas);
	void APICALL (*MessageDigest_SHA_Init)(struct UtilityIFace *Self, struct MessageDigest_SHA * shas);
	void APICALL (*MessageDigest_SHA_Update)(struct UtilityIFace *Self, struct MessageDigest_SHA * shas, APTR data, LONG num_bytes);
	ULONG APICALL (*PackStructureTags)(struct UtilityIFace *Self, APTR pack, const ULONG * pack_table, const struct TagItem * tagList);
	ULONG APICALL (*UnpackStructureTags)(struct UtilityIFace *Self, CONST_APTR pack, const ULONG * pack_table, struct TagItem * tagList);
	ULONG APICALL (*Random)(struct UtilityIFace *Self, struct RandomState * state);
	APTR APICALL (*SetMem)(struct UtilityIFace *Self, APTR destination, UBYTE fillChar, LONG length);
	LONG APICALL (*Stricmp)(struct UtilityIFace *Self, CONST_STRPTR s1, CONST_STRPTR s2);
	LONG APICALL (*Strlcpy)(struct UtilityIFace *Self, STRPTR dst, CONST_STRPTR src, LONG size);
	LONG APICALL (*Strlcat)(struct UtilityIFace *Self, STRPTR dst, CONST_STRPTR src, LONG size);
	LONG APICALL (*Strnicmp)(struct UtilityIFace *Self, CONST_STRPTR s1, CONST_STRPTR s2, LONG n);
	ULONG APICALL (*ToLower)(struct UtilityIFace *Self, TEXT c);
	ULONG APICALL (*ToUpper)(struct UtilityIFace *Self, TEXT c);
	STRPTR APICALL (*VASPrintf)(struct UtilityIFace *Self, CONST_STRPTR fmt, APTR args);
	STRPTR APICALL (*ASPrintf)(struct UtilityIFace *Self, CONST_STRPTR fmt, ...);
	LONG APICALL (*VSNPrintf)(struct UtilityIFace *Self, STRPTR buffer, LONG bufferSize, CONST_STRPTR fmt, APTR args);
	LONG APICALL (*SNPrintf)(struct UtilityIFace *Self, STRPTR buffer, LONG bufferSize, CONST_STRPTR fmt, ...);
	VOID APICALL (*ClearMem)(struct UtilityIFace *Self, APTR destination, uint32 size);
	VOID APICALL (*MoveMem)(struct UtilityIFace *Self, CONST_APTR source, APTR destination, uint32 size);
	uint32 APICALL (*Strlen)(struct UtilityIFace *Self, CONST_STRPTR string);
	int32 APICALL (*UTF8toUCS4)(struct UtilityIFace *Self, CONST_STRPTR utf8_source, int32 * ucs4_destination, int32 ucs4_destination_size, uint32 flags);
	int32 APICALL (*UCS4toUTF8)(struct UtilityIFace *Self, const int32 * ucs4_source, STRPTR utf8_destination, int32 utf8_destination_size, uint32 flags);
	int32 APICALL (*UTF8Strnicmp)(struct UtilityIFace *Self, CONST_STRPTR utf8string1, CONST_STRPTR utf8string2, int32 maxUCSchars);
	int32 APICALL (*UTF8Stricmp)(struct UtilityIFace *Self, CONST_STRPTR utf8string1, CONST_STRPTR utf8string2);
	int32 APICALL (*UTF8Count)(struct UtilityIFace *Self, CONST_STRPTR utf8string, int32 validate);
	int32 APICALL (*UCS4Count)(struct UtilityIFace *Self, const int32 * ucs4string, int32 validate);
	int32 APICALL (*UTF8Encode)(struct UtilityIFace *Self, int32 ucs4, STRPTR buffer, int32 bufsize, uint32 flags);
	int32 APICALL (*UTF8Decode)(struct UtilityIFace *Self, CONST_STRPTR * utf8_pptr, uint32 flags);
	int32 APICALL (*UCS4ToLower)(struct UtilityIFace *Self, int32 ucs4in);
	int32 APICALL (*UCS4ToUpper)(struct UtilityIFace *Self, int32 ucs4in);
	int32 APICALL (*UCS4Valid)(struct UtilityIFace *Self, int32 ucs4);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* UTILITY_INTERFACE_DEF_H */
