#ifndef DISKFONT_INTERFACE_DEF_H
#define DISKFONT_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 52.6.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef DOS_DOS_H
#include <dos/dos.h>
#endif
#ifndef LIBRARIES_DISKFONT_H
#include <libraries/diskfont.h>
#endif
#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif
#ifndef GRAPHICS_RASTPORT_H
#include <graphics/rastport.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct DiskfontIFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct DiskfontIFace *Self);
	ULONG APICALL (*Release)(struct DiskfontIFace *Self);
	void APICALL (*Expunge)(struct DiskfontIFace *Self);
	struct Interface * APICALL (*Clone)(struct DiskfontIFace *Self);
	struct TextFont * APICALL (*OpenDiskFont)(struct DiskfontIFace *Self, const struct TextAttr * textAttr);
	LONG APICALL (*AvailFonts)(struct DiskfontIFace *Self, STRPTR buffer, LONG bufBytes, ULONG flags);
	struct FontContentsHeader * APICALL (*NewFontContents)(struct DiskfontIFace *Self, BPTR fontsLock, CONST_STRPTR fontName);
	VOID APICALL (*DisposeFontContents)(struct DiskfontIFace *Self, struct FontContentsHeader * fontContentsHeader);
	struct DiskFontHeader * APICALL (*NewScaledDiskFont)(struct DiskfontIFace *Self, struct TextFont * sourceFont, struct TextAttr * destTextAttr);
	LONG APICALL (*GetDiskFontCtrl)(struct DiskfontIFace *Self, LONG tagid);
	VOID APICALL (*SetDiskFontCtrlA)(struct DiskfontIFace *Self, const struct TagItem * taglist);
	VOID APICALL (*SetDiskFontCtrl)(struct DiskfontIFace *Self, ...);
	LONG APICALL (*EOpenEngine)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine);
	VOID APICALL (*ECloseEngine)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine);
	ULONG APICALL (*ESetInfoA)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine, const struct TagItem * taglist);
	ULONG APICALL (*ESetInfo)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine, ...);
	ULONG APICALL (*EObtainInfoA)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine, const struct TagItem * taglist);
	ULONG APICALL (*EObtainInfo)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine, ...);
	ULONG APICALL (*EReleaseInfoA)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine, const struct TagItem * taglist);
	ULONG APICALL (*EReleaseInfo)(struct DiskfontIFace *Self, struct EGlyphEngine * EEngine, ...);
	struct OutlineFont * APICALL (*OpenOutlineFont)(struct DiskfontIFace *Self, CONST_STRPTR name, struct List * list, ULONG flags);
	VOID APICALL (*CloseOutlineFont)(struct DiskfontIFace *Self, struct OutlineFont * olf, struct List * list);
	LONG APICALL (*WriteFontContents)(struct DiskfontIFace *Self, BPTR fontsLock, CONST_STRPTR fontName, struct FontContentsHeader * fontContentsHeader);
	LONG APICALL (*WriteDiskFontHeaderA)(struct DiskfontIFace *Self, struct TextFont * font, CONST_STRPTR fileName, const struct TagItem * taglist);
	LONG APICALL (*WriteDiskFontHeader)(struct DiskfontIFace *Self, struct TextFont * font, CONST_STRPTR fileName, ...);
	ULONG APICALL (*ObtainCharsetInfo)(struct DiskfontIFace *Self, ULONG knownTag, ULONG knownValue, ULONG wantedTag);
	struct TTextAttr * APICALL (*ObtainTTextAttr)(struct DiskfontIFace *Self, struct TextFont * textFont);
	VOID APICALL (*FreeTTextAttr)(struct DiskfontIFace *Self, struct TTextAttr * tta);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* DISKFONT_INTERFACE_DEF_H */
