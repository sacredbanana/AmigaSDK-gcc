#ifndef ELF_INTERFACE_DEF_H
#define ELF_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 52.6.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_ELF_H
#include <libraries/elf.h>
#endif
#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct ElfIFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct ElfIFace *Self);
	ULONG APICALL (*Release)(struct ElfIFace *Self);
	void APICALL (*Expunge)(struct ElfIFace *Self);
	struct Interface * APICALL (*Clone)(struct ElfIFace *Self);
	Elf32_Handle APICALL (*OpenElf)(struct ElfIFace *Self, struct TagItem * taglist);
	Elf32_Handle APICALL (*OpenElfTags)(struct ElfIFace *Self, ...);
	void APICALL (*CloseElf)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * TagList);
	void APICALL (*CloseElfTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	ULONG APICALL (*GetElfAttrs)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * taglist);
	ULONG APICALL (*GetElfAttrsTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	ULONG APICALL (*SetElfAttrs)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * taglist);
	ULONG APICALL (*SetElfAttrsTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	Elf32_Shdr * APICALL (*GetSectionHeader)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * TagList);
	Elf32_Shdr * APICALL (*GetSectionHeaderTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	APTR APICALL (*GetSection)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * TagList);
	APTR APICALL (*GetSectionTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	Elf32_Error APICALL (*ElfLoadSeg)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * taglist);
	Elf32_Error APICALL (*ElfLoadSegTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	CONST_STRPTR APICALL (*GetElfString)(struct ElfIFace *Self, Elf32_Handle ElfHandle, UWORD SectionIndex, UWORD StringIndex);
	ULONG APICALL (*SymbolQuery)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ULONG NumQueries, struct Elf32_SymbolQuery * Queries);
	void APICALL (*UnloadSection)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * taglist);
	void APICALL (*UnloadSectionTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	uint32 APICALL (*AddressToSection)(struct ElfIFace *Self, Elf32_Handle ElfHandle, APTR Address);
	void APICALL (*ScanSymbolTable)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct Hook * hook, struct TagItem * tagList);
	void APICALL (*ScanSymbolTableTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct Hook * hook, ...);
	BOOL APICALL (*RelocateSection)(struct ElfIFace *Self, Elf32_Handle ElfHandle, struct TagItem * taglist);
	BOOL APICALL (*RelocateSectionTags)(struct ElfIFace *Self, Elf32_Handle ElfHandle, ...);
	void * APICALL (*CopyDataSegment)(struct ElfIFace *Self, Elf32_Handle ElfHandle, uint32 * baseOffset);
	void APICALL (*FreeDataSegmentCopy)(struct ElfIFace *Self, Elf32_Handle ElfHandle, void * SegmentCopy);
	void APICALL (*InitSHLibs)(struct ElfIFace *Self, Elf32_Handle ElfHandle, BOOL DoInit);
	APTR APICALL (*DLOpen)(struct ElfIFace *Self, Elf32_Handle RootHandle, CONST_STRPTR Name, uint32 Flags);
	Elf32_Error APICALL (*DLClose)(struct ElfIFace *Self, Elf32_Handle RootHandle, APTR Handle);
	Elf32_Error APICALL (*DLSym)(struct ElfIFace *Self, Elf32_Handle RootHandle, APTR Handle, CONST_STRPTR SymbolName, APTR * Result);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* ELF_INTERFACE_DEF_H */
