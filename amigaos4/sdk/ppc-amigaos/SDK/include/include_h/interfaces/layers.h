#ifndef LAYERS_INTERFACE_DEF_H
#define LAYERS_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 51.8.
** Do not edit
*/

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef GRAPHICS_LAYERS_H
#include <graphics/layers.h>
#endif
#ifndef GRAPHICS_CLIP_H
#include <graphics/clip.h>
#endif
#ifndef GRAPHICS_RASTPORT_H
#include <graphics/rastport.h>
#endif
#ifndef GRAPHICS_REGIONS_H
#include <graphics/regions.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct LayersIFace
{
	struct InterfaceData Data;

	ULONG APICALL (*Obtain)(struct LayersIFace *Self);
	ULONG APICALL (*Release)(struct LayersIFace *Self);
	void APICALL (*Expunge)(struct LayersIFace *Self);
	struct Interface * APICALL (*Clone)(struct LayersIFace *Self);
	VOID APICALL (*InitLayers)(struct LayersIFace *Self, struct Layer_Info * li);
	struct Layer * APICALL (*CreateUpfrontLayer)(struct LayersIFace *Self, struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct BitMap * bm2);
	struct Layer * APICALL (*CreateBehindLayer)(struct LayersIFace *Self, struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct BitMap * bm2);
	LONG APICALL (*UpfrontLayer)(struct LayersIFace *Self, LONG dummy, struct Layer * layer);
	LONG APICALL (*BehindLayer)(struct LayersIFace *Self, LONG dummy, struct Layer * layer);
	LONG APICALL (*MoveLayer)(struct LayersIFace *Self, LONG dummy, struct Layer * layer, LONG dx, LONG dy);
	LONG APICALL (*SizeLayer)(struct LayersIFace *Self, LONG dummy, struct Layer * layer, LONG dx, LONG dy);
	VOID APICALL (*ScrollLayer)(struct LayersIFace *Self, LONG dummy, struct Layer * layer, LONG dx, LONG dy);
	LONG APICALL (*BeginUpdate)(struct LayersIFace *Self, struct Layer * l);
	VOID APICALL (*EndUpdate)(struct LayersIFace *Self, struct Layer * layer, UWORD flag);
	LONG APICALL (*DeleteLayer)(struct LayersIFace *Self, LONG dummy, struct Layer * layer);
	VOID APICALL (*LockLayer)(struct LayersIFace *Self, LONG dummy, struct Layer * layer);
	VOID APICALL (*UnlockLayer)(struct LayersIFace *Self, struct Layer * layer);
	VOID APICALL (*LockLayers)(struct LayersIFace *Self, struct Layer_Info * li);
	BOOL APICALL (*UnlockLayers)(struct LayersIFace *Self, struct Layer_Info * li);
	VOID APICALL (*LockLayerInfo)(struct LayersIFace *Self, struct Layer_Info * li);
	VOID APICALL (*SwapBitsRastPortClipRect)(struct LayersIFace *Self, struct RastPort * rp, struct ClipRect * cr);
	struct Layer * APICALL (*WhichLayer)(struct LayersIFace *Self, struct Layer_Info * li, WORD x, WORD y);
	VOID APICALL (*UnlockLayerInfo)(struct LayersIFace *Self, struct Layer_Info * li);
	struct Layer_Info * APICALL (*NewLayerInfo)(struct LayersIFace *Self);
	VOID APICALL (*DisposeLayerInfo)(struct LayersIFace *Self, struct Layer_Info * li);
	LONG APICALL (*FattenLayerInfo)(struct LayersIFace *Self, struct Layer_Info * li);
	VOID APICALL (*ThinLayerInfo)(struct LayersIFace *Self, struct Layer_Info * li);
	LONG APICALL (*MoveLayerInFrontOf)(struct LayersIFace *Self, struct Layer * layer_to_move, struct Layer * other_layer);
	struct Region * APICALL (*InstallClipRegion)(struct LayersIFace *Self, struct Layer * layer, CONST struct Region * region);
	LONG APICALL (*MoveSizeLayer)(struct LayersIFace *Self, struct Layer * layer, LONG dx, LONG dy, LONG dw, LONG dh);
	struct Layer * APICALL (*CreateUpfrontHookLayer)(struct LayersIFace *Self, struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct Hook * hook, struct BitMap * bm2);
	struct Layer * APICALL (*CreateBehindHookLayer)(struct LayersIFace *Self, struct Layer_Info * li, struct BitMap * bm, LONG x0, LONG y0, LONG x1, LONG y1, LONG flags, struct Hook * hook, struct BitMap * bm2);
	struct Hook * APICALL (*InstallLayerHook)(struct LayersIFace *Self, struct Layer * layer, struct Hook * hook);
	struct Hook * APICALL (*InstallLayerInfoHook)(struct LayersIFace *Self, struct Layer_Info * li, CONST struct Hook * hook);
	VOID APICALL (*SortLayerCR)(struct LayersIFace *Self, struct Layer * layer, WORD dx, WORD dy);
	VOID APICALL (*DoHookClipRects)(struct LayersIFace *Self, CONST struct Hook * hook, struct RastPort * rport, CONST struct Rectangle * rect);
	LONG APICALL (*LayerOccluded)(struct LayersIFace *Self, struct Layer * layer);
	LONG APICALL (*HideLayer)(struct LayersIFace *Self, struct Layer * layer);
	LONG APICALL (*ShowLayer)(struct LayersIFace *Self, struct Layer * layer, struct Layer * infront_of);
	LONG APICALL (*SetLayerInfoBounds)(struct LayersIFace *Self, struct Layer_Info * li, struct Rectangle * bounds);
	struct ClipRect * APICALL (*AllocClipRect)(struct LayersIFace *Self, struct Layer_Info * li);
	VOID APICALL (*FreeClipRect)(struct LayersIFace *Self, struct Layer_Info * li, struct ClipRect * cr);
	struct Layer * APICALL (*CreateLayerA)(struct LayersIFace *Self, struct Layer_Info * li, struct TagItem * tlist);
	struct Layer * APICALL (*CreateLayer)(struct LayersIFace *Self, struct Layer_Info * li, ...);
	struct Region * APICALL (*ChangeLayerShape)(struct LayersIFace *Self, struct Layer * layer, struct Region * region, struct Hook * hook);
	struct Hook * APICALL (*CreateBackFillHookA)(struct LayersIFace *Self, struct TagItem * tlist);
	struct Hook * APICALL (*CreateBackFillHook)(struct LayersIFace *Self, ...);
	VOID APICALL (*DeleteBackFillHook)(struct LayersIFace *Self, struct Hook * hook);
	ULONG APICALL (*SetBackFillHookAttrsA)(struct LayersIFace *Self, struct Hook * h, struct TagItem * tags);
	ULONG APICALL (*SetBackFillHookAttrs)(struct LayersIFace *Self, struct Hook * h, ...);
	ULONG APICALL (*GetBackFillHookAttrsA)(struct LayersIFace *Self, struct Hook * h, struct TagItem * tags);
	ULONG APICALL (*GetBackFillHookAttrs)(struct LayersIFace *Self, struct Hook * h, ...);
	ULONG APICALL (*ComposeLayersA)(struct LayersIFace *Self, struct Layer * l, struct Rectangle * rect, struct TagItem * taglist);
	ULONG APICALL (*ComposeLayers)(struct LayersIFace *Self, struct Layer * l, struct Rectangle * rect, ...);
	struct BitMap * APICALL (*GetOffScreenLayerBitMap)(struct LayersIFace *Self, struct Layer * l, struct BitMap * fallback, struct Rectangle * bounds);
	ULONG APICALL (*SetLayerInfoAttrsA)(struct LayersIFace *Self, struct Layer_Info * li, struct TagItem * taglist);
	ULONG APICALL (*SetLayerInfoAttrs)(struct LayersIFace *Self, struct Layer_Info * li, ...);
	ULONG APICALL (*GetLayerInfoAttrsA)(struct LayersIFace *Self, struct Layer_Info * li, struct TagItem * taglist);
	ULONG APICALL (*GetLayerInfoAttrs)(struct LayersIFace *Self, struct Layer_Info * li, ...);
	struct ClipRect * APICALL (*ChangeLayerAlpha)(struct LayersIFace *Self, struct Layer * layer, struct ClipRect * clips, struct Hook * hook);
	ULONG APICALL (*SetForegroundAlpha)(struct LayersIFace *Self, struct Layer * layer, APTR templateptr, ULONG templatetype, ULONG bytesperrow, LONG left, LONG top, ULONG width, ULONG height, ULONG flags);
	ULONG APICALL (*SetLayerOpaqueness)(struct LayersIFace *Self, struct Layer * layer, ULONG opaqueness);
	ULONG APICALL (*SetLayerOverlayRect)(struct LayersIFace *Self, struct Layer * layer, LONG left, LONG top, LONG width, LONG height, ULONG flags);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* LAYERS_INTERFACE_DEF_H */
