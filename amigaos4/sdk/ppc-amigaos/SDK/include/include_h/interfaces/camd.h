#ifndef CAMD_INTERFACE_DEF_H
#define CAMD_INTERFACE_DEF_H

/*
** This file was machine generated by idltool 53.5.
** Do not edit
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif
#ifndef MIDI_CAMD_H
#include <midi/camd.h>
#endif

#ifdef __cplusplus
#ifdef __USE_AMIGAOS_NAMESPACE__
namespace AmigaOS {
#endif
extern "C" {
#endif

struct CamdIFace
{
	struct InterfaceData Data;

	uint32 APICALL (*Obtain)(struct CamdIFace *Self);
	uint32 APICALL (*Release)(struct CamdIFace *Self);
	void APICALL (*Expunge)(struct CamdIFace *Self);
	struct Interface * APICALL (*Clone)(struct CamdIFace *Self);
	APTR APICALL (*LockCAMD)(struct CamdIFace *Self, uint32 locktype);
	void APICALL (*UnlockCAMD)(struct CamdIFace *Self, APTR lock);
	struct MidiNode * APICALL (*CreateMidiA)(struct CamdIFace *Self, struct TagItem * TagList);
	struct MidiNode * APICALL (*CreateMidi)(struct CamdIFace *Self, ... );
	void APICALL (*DeleteMidi)(struct CamdIFace *Self, struct MidiNode * mn);
	BOOL APICALL (*SetMidiAttrsA)(struct CamdIFace *Self, struct MidiNode * mi, struct TagItem * tags);
	BOOL APICALL (*SetMidiAttrs)(struct CamdIFace *Self, struct MidiNode * mi, ... );
	uint32 APICALL (*GetMidiAttrsA)(struct CamdIFace *Self, struct MidiNode * mi, struct TagItem * attrs);
	uint32 APICALL (*GetMidiAttrs)(struct CamdIFace *Self, struct MidiNode * mi, ... );
	struct MidiNode * APICALL (*NextMidi)(struct CamdIFace *Self, struct MidiNode * last);
	struct MidiNode * APICALL (*FindMidi)(struct CamdIFace *Self, STRPTR name);
	void APICALL (*FlushMidi)(struct CamdIFace *Self, struct MidiNode * mi);
	struct MidiLink * APICALL (*AddMidiLinkA)(struct CamdIFace *Self, struct MidiNode * mi, int32 type, struct TagItem * TagsList);
	struct MidiLink * APICALL (*AddMidiLink)(struct CamdIFace *Self, struct MidiNode * mi, int32 type, ... );
	void APICALL (*RemoveMidiLink)(struct CamdIFace *Self, struct MidiLink * ml);
	BOOL APICALL (*SetMidiLinkAttrsA)(struct CamdIFace *Self, struct MidiLink * ml, struct TagItem * tags);
	BOOL APICALL (*SetMidiLinkAttrs)(struct CamdIFace *Self, struct MidiLink * ml, ... );
	uint32 APICALL (*GetMidiLinkAttrsA)(struct CamdIFace *Self, struct MidiLink * ml, struct TagItem * attrs);
	uint32 APICALL (*GetMidiLinkAttrs)(struct CamdIFace *Self, struct MidiLink * ml, ... );
	struct MidiLink * APICALL (*NextClusterLink)(struct CamdIFace *Self, struct MidiCluster * mc, struct MidiLink * last, int32 type);
	struct MidiLink * APICALL (*NextMidiLink)(struct CamdIFace *Self, struct MidiNode * mi, struct MidiLink * last, int32 type);
	BOOL APICALL (*MidiLinkConnected)(struct CamdIFace *Self, struct MidiLink * ml);
	struct MidiCluster * APICALL (*NextCluster)(struct CamdIFace *Self, struct MidiCluster * last);
	struct MidiCluster * APICALL (*FindCluster)(struct CamdIFace *Self, STRPTR name);
	void APICALL (*PutMidi)(struct CamdIFace *Self, struct MidiLink * link, uint32 Msg);
	BOOL APICALL (*GetMidi)(struct CamdIFace *Self, struct MidiNode * mn, MidiMsg * msg);
	BOOL APICALL (*WaitMidi)(struct CamdIFace *Self, struct MidiNode * mn, MidiMsg * msg);
	void APICALL (*PutSysEx)(struct CamdIFace *Self, struct MidiLink * ml, uint8 * Buffer);
	uint32 APICALL (*GetSysEx)(struct CamdIFace *Self, struct MidiNode * mn, uint8 * Buf, uint32 Len);
	uint32 APICALL (*QuerySysEx)(struct CamdIFace *Self, struct MidiNode * mn);
	void APICALL (*SkipSysEx)(struct CamdIFace *Self, struct MidiNode * mn);
	uint8 APICALL (*GetMidiErr)(struct CamdIFace *Self, struct MidiNode * mn);
	int16 APICALL (*MidiMsgType)(struct CamdIFace *Self, MidiMsg * Msg);
	int16 APICALL (*MidiMsgLen)(struct CamdIFace *Self, uint32 StatusByte);
	void APICALL (*ParseMidi)(struct CamdIFace *Self, struct MidiLink * ml, CONST uint8 * Buffer, uint32 Length);
	struct MidiDeviceData * APICALL (*OpenMidiDevice)(struct CamdIFace *Self, STRPTR Name);
	void APICALL (*CloseMidiDevice)(struct CamdIFace *Self, struct MidiDeviceData * MidiDeviceData);
	int32 APICALL (*RethinkCAMD)(struct CamdIFace *Self);
	void APICALL (*StartClusterNotify)(struct CamdIFace *Self, struct ClusterNotifyNode * cn);
	void APICALL (*EndClusterNotify)(struct CamdIFace *Self, struct ClusterNotifyNode * cn);
};

#ifdef __cplusplus
}
#ifdef __USE_AMIGAOS_NAMESPACE__
}
#endif
#endif

#endif /* CAMD_INTERFACE_DEF_H */
